{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/chrono.js","src/options.js","src/refiners/refiner.js","src/result.js","src/parsers/parser.js","src/refiners/OverlapRemovalRefiner.js","src/refiners/ExtractTimezoneOffsetRefiner.js","src/refiners/ExtractTimezoneAbbrRefiner.js","src/refiners/ForwardDateRefiner.js","src/refiners/UnlikelyFormatFilter.js","src/refiners/EN/ENMergeDateRangeRefiner.js","src/refiners/EN/ENMergeDateTimeRefiner.js","src/refiners/EN/ENPrioritizeSpecificDateRefiner.js","src/refiners/JP/JPMergeDateRangeRefiner.js","src/refiners/FR/FRMergeDateRangeRefiner.js","src/refiners/FR/FRMergeDateTimeRefiner.js","src/refiners/DE/DEMergeDateRangeRefiner.js","src/refiners/DE/DEMergeDateTimeRefiner.js","src/parsers/EN/ENISOFormatParser.js","src/parsers/EN/ENDeadlineFormatParser.js","src/parsers/EN/ENRelativeDateFormatParser.js","src/parsers/EN/ENMonthNameLittleEndianParser.js","src/parsers/EN/ENMonthNameMiddleEndianParser.js","src/parsers/EN/ENMonthNameParser.js","src/parsers/EN/ENSlashDateFormatParser.js","src/parsers/EN/ENSlashDateFormatStartWithYearParser.js","src/parsers/EN/ENSlashMonthFormatParser.js","src/parsers/EN/ENTimeAgoFormatParser.js","src/parsers/EN/ENTimeExpressionParser.js","src/parsers/EN/ENWeekdayParser.js","src/parsers/EN/ENCasualDateParser.js","src/parsers/EN/ENCasualTimeParser.js","src/parsers/JP/JPStandardParser.js","src/parsers/ES/ESCasualDateParser.js","src/parsers/JP/JPCasualDateParser.js","src/parsers/ES/ESTimeAgoFormatParser.js","src/parsers/ES/ESDeadlineFormatParser.js","src/parsers/ES/ESTimeExpressionParser.js","src/parsers/ES/ESWeekdayParser.js","src/parsers/ES/ESMonthNameLittleEndianParser.js","src/parsers/ES/ESSlashDateFormatParser.js","src/parsers/FR/FRCasualDateParser.js","src/parsers/FR/FRDeadlineFormatParser.js","src/parsers/FR/FRMonthNameLittleEndianParser.js","src/parsers/FR/FRSlashDateFormatParser.js","src/parsers/FR/FRTimeAgoFormatParser.js","src/parsers/FR/FRTimeExpressionParser.js","src/parsers/FR/FRWeekdayParser.js","src/parsers/ZH-Hant/ZHHantDateParser.js","src/parsers/ZH-Hant/ZHHantWeekdayParser.js","src/parsers/ZH-Hant/ZHHantTimeExpressionParser.js","src/parsers/ZH-Hant/ZHHantCasualDateParser.js","src/parsers/ZH-Hant/ZHHantDeadlineFormatParser.js","src/parsers/DE/DEDeadlineFormatParser.js","src/parsers/DE/DEMonthNameLittleEndianParser.js","src/parsers/DE/DEMonthNameParser.js","src/parsers/DE/DESlashDateFormatParser.js","src/parsers/DE/DETimeAgoFormatParser.js","src/parsers/DE/DETimeExpressionParser.js","src/parsers/DE/DECasualDateParser.js","src/parsers/DE/DEWeekdayParser.js","src/utils/ZH-Hant.js","src/utils/EN.js","src/utils/JP.js","src/utils/ES.js","src/utils/FR.js","src/utils/DE.js","node_modules/moment/moment.js"],"names":["options","exports","require","parser","refiner","Parser","Refiner","Filter","ParsedResult","ParsedComponents","Chrono","option","casualOption","this","parsers","Object","refiners","prototype","parse","text","refDate","opt","Date","allResults","forEach","results","execute","concat","sort","a","b","index","refine","parseDate","length","start","date","strict","strictOption","casual","en","mergeOptions","commonPostProcessing","de","es","fr","ja","apply","arguments","addedTypes","mergedOption","call","p","constructor","push","r","ExtractTimezoneOffsetRefiner","ExtractTimezoneAbbrRefiner","UnlikelyFormatFilter","zh","strictMode","DEDeadlineFormatParser","DEMonthNameLittleEndianParser","DEMonthNameParser","DESlashDateFormatParser","DETimeAgoFormatParser","DETimeExpressionParser","OverlapRemovalRefiner","ForwardDateRefiner","DEMergeDateTimeRefiner","DEMergeDateRangeRefiner","unshift","DECasualDateParser","DEWeekdayParser","ENISOFormatParser","ENDeadlineFormatParser","ENMonthNameLittleEndianParser","ENMonthNameMiddleEndianParser","ENMonthNameParser","ENSlashDateFormatParser","ENSlashDateFormatStartWithYearParser","ENSlashMonthFormatParser","ENTimeAgoFormatParser","ENTimeExpressionParser","ENMergeDateTimeRefiner","ENMergeDateRangeRefiner","ENPrioritizeSpecificDateRefiner","ENCasualDateParser","ENCasualTimeParser","ENWeekdayParser","ENRelativeDateFormatParser","JPStandardParser","JPMergeDateRangeRefiner","JPCasualDateParser","ESTimeAgoFormatParser","ESDeadlineFormatParser","ESTimeExpressionParser","ESMonthNameLittleEndianParser","ESSlashDateFormatParser","ESCasualDateParser","ESWeekdayParser","FRDeadlineFormatParser","FRMonthNameLittleEndianParser","FRSlashDateFormatParser","FRTimeAgoFormatParser","FRTimeExpressionParser","FRMergeDateRangeRefiner","FRMergeDateTimeRefiner","FRCasualDateParser","FRWeekdayParser","ZHHantDateParser","ZHHantWeekdayParser","ZHHantTimeExpressionParser","ZHHantCasualDateParser","ZHHantDeadlineFormatParser","isValid","result","filteredResult","i","ref","tags","end","components","knownValues","impliedValues","key","moment","imply","month","year","clone","JSON","stringify","hasPossibleDates","isPossibleDate","component","get","value","assign","isCertain","dateMoment","utcOffset","toDate","set","currentTimezoneOffset","targetTimezoneOffset","adjustTimezoneOffset","add","isStrictMode","pattern","extract","match","regex","remainingText","exec","substring","filteredResults","prevResult","TIMEZONE_OFFSET_PATTERN","RegExp","TIMEZONE_OFFSET_SIGN_GROUP","TIMEZONE_OFFSET_HOUR_OFFSET_GROUP","TIMEZONE_OFFSET_MINUTE_OFFSET_GROUP","hourOffset","parseInt","minuteOffset","timezoneOffset","TIMEZONE_ABBR_MAP","TIMEZONE_NAME_PATTERN","timezoneAbbr","toUpperCase","undefined","ACDT","ACST","ADT","AEDT","AEST","AFT","AKDT","AKST","ALMT","AMST","AMT","ANAST","ANAT","AQTT","ART","AST","AWDT","AWST","AZOST","AZOT","AZST","AZT","BNT","BOT","BRST","BRT","BST","BTT","CAST","CAT","CCT","CDT","CEST","CET","CHADT","CHAST","CKT","CLST","CLT","COT","CST","CVT","CXT","ChST","DAVT","EASST","EAST","EAT","ECT","EDT","EEST","EET","EGST","EGT","EST","ET","FJST","FJT","FKST","FKT","FNT","GALT","GAMT","GET","GFT","GILT","GMT","GST","GYT","HAA","HAC","HADT","HAE","HAP","HAR","HAST","HAT","HAY","HKT","HLV","HNA","HNC","HNE","HNP","HNR","HNT","HNY","HOVT","ICT","IDT","IOT","IRDT","IRKST","IRKT","IRST","IST","JST","KGT","KRAST","KRAT","KST","KUYT","LHDT","LHST","LINT","MAGST","MAGT","MART","MAWT","MDT","MESZ","MEZ","MHT","MMT","MSD","MSK","MST","MUT","MVT","MYT","NCT","NDT","NFT","NOVST","NOVT","NPT","NST","NUT","NZDT","NZST","OMSST","OMST","PDT","PET","PETST","PETT","PGT","PHOT","PHT","PKT","PMDT","PMST","PONT","PST","PT","PWT","PYST","PYT","RET","SAMT","SAST","SBT","SCT","SGT","SRT","SST","TAHT","TFT","TJT","TKT","TLT","TMT","TVT","ULAT","UTC","UYST","UYT","UZT","VET","VLAST","VLAT","VUT","WAST","WAT","WEST","WESZ","WET","WEZ","WFT","WGST","WGT","WIB","WIT","WITA","WST","WT","YAKST","YAKT","YAPT","YEKST","YEKT","refMoment","isAfter","day","replace","mergedResult","currResult","isAbleToMerge","mergeResult","result1","result2","begin","textBetween","isWeekdayResult","fromResult","toResult","getTime","tmp","tag","startIndex","Math","min","endIndex","max","name","isDateOnly","isTimeOnly","curResult","PATTERN","dateResult","timeResult","beginDate","beginTime","beginDateTime","endDate","endTime","endDateTime","isMoreSpecific","moreSpecific","includesRelativeResult","referToSameDate","specificResult","nonSpecificResult","YEAR_NUMBER_GROUP","MONTH_NUMBER_GROUP","DATE_NUMBER_GROUP","HOUR_NUMBER_GROUP","MINUTE_NUMBER_GROUP","SECOND_NUMBER_GROUP","MILLISECOND_NUMBER_GROUP","TZD_HOUR_OFFSET_GROUP","TZD_MINUTE_OFFSET_GROUP","substr","offset","util","INTEGER_WORDS_PATTERN","STRICT_PATTERN","num","toLowerCase","INTEGER_WORDS","hour","minute","second","MODIFIER_WORD_GROUP","MULTIPLIER_WORD_GROUP","RELATIVE_WORD_GROUP","modifier","ORDINAL_WORDS_PATTERN","WEEKDAY_GROUP","DATE_GROUP","DATE_NUM_GROUP","DATE_TO_GROUP","DATE_TO_NUM_GROUP","MONTH_NAME_GROUP","YEAR_GROUP","YEAR_BE_GROUP","MONTH_OFFSET","ORDINAL_WORDS","trim","test","nextYear","lastYear","abs","diff","weekday","WEEKDAY_OFFSET","YEAR_GROUP2","YEAR_BE_GROUP2","yearBE","DAYS_OFFSET","sunday","sun","monday","mon","tuesday","wednesday","wed","thursday","thur","friday","fri","saturday","sat","OPENNING_GROUP","ENDING_GROUP","MONTH_GROUP","DAY_GROUP","argument","indexOf","tday","FIRST_REG_PATTERN","SECOND_REG_PATTERN","HOUR_GROUP","MINUTE_GROUP","SECOND_GROUP","AM_PM_HOUR_GROUP","meridiem","ampm","startAtPM","tues","tue","thurs","thu","keys","join","PREFIX_GROUP","POSTFIX_GROUP","updateParsedComponent","startMoment","startMomentFixed","refOffset","dayOfWeek","prefix","postfix","norm","lowerText","millisecond","TIME_MATCH","ERA_GROUP","toHankaku","secondMatch","firstMatch","isNaN","domingo","dom","lunes","lun","martes","mar","miercoles","miércoles","mie","jueves","jue","viernes","vier","sabado","sábado","sab","dimanche","dim","lundi","mardi","mercredi","mer","jeudi","jeu","vendredi","ven","samedi","sam","NUMBER","zhStringToNumber","zhStringToYear","patternString1","patternString2","DAY_GROUP_1","ZH_AM_PM_HOUR_GROUP_1","ZH_AM_PM_HOUR_GROUP_2","DAY_GROUP_3","ZH_AM_PM_HOUR_GROUP_3","ZHTimeExpressionParser","day1","day3","zhAMPMString1","zhAMPM1","zhAMPMString2","zhAMPM2","zhAMPMString3","zhAMPM3","endMoment","NOW_GROUP","TIME_GROUP_1","TIME_GROUP_2","TIME_GROUP_3","time1","timeString2","time2","timeString3","time3","NUMBER_GROUP","UNIT_GROUP","number","string","unit","unitAbbr","sonntag","so","montag","mo","dienstag","di","mittwoch","mi","donnerstag","do","freitag","samstag","sa","forwardDatesOnly","零","一","二","兩","三","四","五","六","七","八","九","十","廿","卅","天","日","char","january","jan","jan.","february","feb","feb.","march","mar.","april","apr","apr.","may","june","jun","jun.","july","jul","jul.","august","aug","aug.","september","sep","sep.","sept","sept.","october","oct","oct.","november","nov","nov.","december","dec","dec.","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","first","third","fourth","fifth","sixth","seventh","eighth","ninth","tenth","eleventh","twelfth","thirteenth","fourteenth","fifteenth","sixteenth","seventeenth","eighteenth","nineteenth","twentieth","twenty first","twenty second","twenty third","twenty fourth","twenty fifth","twenty sixth","twenty seventh","twenty eighth","twenty ninth","thirtieth","thirty first","String","fromCharCode","alphaNum","token","charCodeAt","toZenkaku","vie","enero","ene","ene.","febrero","marzo","abril","abr","abr.","mayo","may.","junio","julio","agosto","ago","ago.","septiembre","octubre","noviembre","diciembre","dic","dic.","janvier","février","fév","fév.","mars","avril","avr","avr.","mai","juin","juillet","août","aout","septembre","octobre","novembre","décembre","un","deux","trois","quatre","cinq","huit","neuf","dix","onze","douze","treize","januar","februar","märz","maerz","mär","mär.","mrz","mrz.","juni","juli","oktober","okt","okt.","dezember","dez","dez.","eins","zwei","drei","fünf","fuenf","sechs","sieben","acht","neun","zehn","elf","zwölf","zwoelf","global","factory","module","define","amd","utils_hooks__hooks","hookCallback","setHookCallback","callback","isArray","input","toString","isDate","map","arr","fn","res","hasOwnProp","hasOwnProperty","extend","valueOf","create_utc__createUTC","format","locale","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","getParsingFlags","m","_pf","valid__isValid","_isValid","flags","_d","invalidWeekday","_strict","bigHour","valid__createInvalid","NaN","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","obj","absFloor","ceil","floor","toInt","argumentForCoercion","coercedNumber","isFinite","compareArrays","array1","array2","dontConvert","len","lengthDiff","diffs","Locale","normalizeLocale","chooseLocale","names","j","next","split","loadLocale","slice","oldLocale","locales","globalLocale","_abbr","locale_locales__getSetGlobalLocale","e","values","data","locale_locales__getLocale","defineLocale","abbr","addUnitAlias","shorthand","lowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","makeGetSet","keepTime","get_set__set","get_set__get","mom","getSet","zeroFill","targetLength","forceSign","absNumber","zerosToFill","sign","pow","addFormatToken","padded","ordinal","func","formatTokenFunctions","localeData","removeFormattingTokens","makeFormatFunction","array","formattingTokens","output","Function","formatMoment","expandFormat","formatFunctions","invalidDate","replaceLongDateFormatTokens","longDateFormat","localFormattingTokens","lastIndex","isFunction","sth","addRegexToken","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","s","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInMonth","getUTCDate","localeMonths","_months","localeMonthsShort","_monthsShort","localeMonthsParse","monthName","_monthsParse","_longMonthsParse","_shortMonthsParse","months","monthsShort","setMonth","dayOfMonth","monthsParse","getSetMonth","getDaysInMonth","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","Error","stack","deprecateSimple","deprecations","configFromISO","l","from_string__isoRegex","isoDates","isoTimes","matchOffset","configFromStringAndFormat","configFromString","aspNetJsonRegex","createFromInputFallback","createDate","y","d","h","M","ms","setFullYear","createUTCDate","setUTCFullYear","daysInYear","isLeapYear","getIsLeapYear","weekOfYear","firstDayOfWeek","firstDayOfWeekOfYear","adjustedMoment","daysToDayOfWeek","local__createLocal","week","dayOfYear","localeWeek","_week","dow","doy","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","dayOfYearFromWeeks","week1Jan","janX","getUTCDay","getSetDayOfYear","round","startOf","defaults","c","currentDateArray","now","_useUTC","getUTCFullYear","getUTCMonth","getFullYear","getMonth","getDate","configFromArray","currentDate","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","w","weekYear","temp","GG","W","E","gg","ISO_8601","parsedInput","skipped","stringLength","totalParsedInputLength","meridiemFixWrap","_meridiem","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","args","Duration","duration","years","quarters","quarter","weeks","days","hours","minutes","seconds","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","separator","offsetFromString","matches","chunk","parts","chunkOffset","cloneWithOffset","model","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","localAdjust","_changeInProgress","add_subtract__addSubtract","create__createDuration","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","other","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","create__isoRegex","parseIso","momentsDifference","inp","parseFloat","positiveMomentsDifference","base","isBefore","createAdder","direction","period","dur","isAdding","moment_calendar__calendar","time","formats","sod","calendar","inputMs","endOf","isBetween","isSame","asFloat","delta","that","zoneDelta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","moment_format__toISOString","toISOString","inputString","defaultFormat","postformat","withoutSuffix","humanize","fromNow","toNow","newLocaleData","isoWeekday","to_type__valueOf","unix","toObject","moment_valid__isValid","parsingFlags","invalidAt","addWeekYearFormatToken","getter","weeksInYear","getSetWeekYear","getSetISOWeekYear","getISOWeeksInYear","getWeeksInYear","weekInfo","getSetQuarter","parseWeekday","weekdaysParse","localeWeekdays","_weekdays","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","localeWeekdaysParse","weekdayName","_weekdaysParse","weekdays","weekdaysShort","weekdaysMin","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","lowercase","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","parseMs","getZoneAbbr","getZoneName","moment__createUnix","moment__createInZone","parseZone","locale_calendar__calendar","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","preParsePostFormat","relative__relativeTime","isFuture","_relativeTime","pastFuture","locale_set__set","_ordinalParseLenient","_ordinalParse","source","lists__get","field","setter","list","count","out","lists__listMonths","lists__listMonthsShort","lists__listWeekdays","lists__listWeekdaysShort","lists__listWeekdaysMin","duration_abs__abs","mathAbs","duration_add_subtract__addSubtract","duration_add_subtract__add","duration_add_subtract__subtract","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","duration_as__valueOf","makeAs","alias","duration_get__get","makeGetter","substituteTimeAgo","relativeTime","duration_humanize__relativeTime","posNegDuration","thresholds","duration_humanize__getSetRelativeTimeThreshold","threshold","limit","withSuffix","iso_string__toISOString","iso_string__abs","Y","D","total","asSeconds","match1","match2","match3","match4","match6","match1to2","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","defaultLocaleMonths","defaultLocaleMonthsShort","parseTwoDigitYear","getSetYear","defaultLocaleWeek","prototypeMin","prototypeMax","add_subtract__add","add_subtract__subtract","lang","isoWeekYear","getSetDayOfMonth","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","_isPm","defaultLocaleMeridiemParse","getSetHour","getSetMinute","getSetSecond","getSetMillisecond","momentPrototype__proto","toJSON","isoWeek","isoWeeks","isoWeeksInYear","isDST","isDSTShifted","zoneAbbr","zoneName","dates","zone","momentPrototype","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultInvalidDate","defaultOrdinal","defaultOrdinalParse","defaultRelativeTime","future","past","mm","hh","dd","MM","yy","prototype__proto","firstDayOfYear","ordinalParse","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","duration_prototype__proto","toIsoString","version","invalid","relativeTimeThreshold","_moment"],"mappings":"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AAKC,IAAM,KAAKC,KAAO,KAAKC,KAAO,KAAKC,IAAM,IAAIC,IAAM,KAAKC,KAAO,IAAIC,IAAM,EAAEC,IAAM,IAAIC,IAAM,KAAKC,IAAM,KAAKC,IAAM,KAAKC,KAAO,KAAKC,IAAM,KAAKC,IAAM,KAAKC,IAAM,KAAKC,KAAO,KAAKC,IAAM,IAAIC,IAAM,KAAKC,IAAM,IAAIC,IAAM,KAAKC,IAAM,KAAKC,IAAM,KAAKC,IAAM,KAAKC,IAAM,KAAKC,IAAM,KAAKC,IAAM,KAAKC,IAAM,KAAKC,KAAO,IAAIC,IAAM,IAAIC,IAAM,IAAIC,IAAM,IAAIC,KAAO,IAAIC,MAAQ,IAAIC,KAAO,IAAIC,KAAO,IAAIC,IAAM,GAAGC,IAAM,IAAIC,IAAM,IAAIC,MAAQ,IAAIC,KAAO,IAAIC,IAAM,IAAIC,KAAO,IAAIC,KAAO,IAAIC,KAAO,IAAIC,KAAO,IAAIC,MAAQ,IAAIC,KAAO,IAAIC,KAAO,KAAKC,KAAO,IAAIC,IAAM,KAAKC,KAAO,IAAIC,IAAM,GAAGC,IAAM,IAAIC,IAAM,IAAIC,IAAM,IAAIC,IAAM,IAAIC,IAAM,KAAKC,IAAM,IAAIC,IAAM,IAAIC,IAAM,IAAIC,IAAM,IAAIC,IAAM,IAAIC,IAAM,IAAIC,MAAQ,IAAIC,KAAO,IAAIC,IAAM,IAAIC,IAAM,KAAKC,IAAM,KAAKC,KAAO,IAAIC,KAAO,IAAIC,MAAQ,IAAIC,KAAO,IAAIC,IAAM,KAAKC,IAAM,KAAKC,MAAQ,IAAIC,KAAO,IAAIC,IAAM,IAAIC,KAAO,IAAIC,IAAM,IAAIC,IAAM,IAAIC,KAAO,KAAKC,KAAO,KAAKC,KAAO,IAAIC,IAAM,KAAKC,GAAK,KAAKC,IAAM,IAAIC,KAAO,KAAKC,IAAM,KAAKC,IAAM,IAAIC,KAAO,IAAIC,KAAO,IAAIC,IAAM,IAAIC,IAAM,IAAIC,IAAM,IAAIC,IAAM,KAAKC,IAAM,KAAKC,KAAO,KAAKC,IAAM,IAAIC,IAAM,IAAIC,IAAM,IAAIC,IAAM,IAAIC,IAAM,IAAIC,IAAM,IAAIC,KAAO,IAAIC,IAAM,EAAEC,KAAO,KAAKC,IAAM,KAAKC,IAAM,IAAIC,IAAM,KA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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\nvar options = exports.options = require('./options');\n\nexports.parser = require('./parsers/parser');\nexports.refiner = require('./refiners/refiner');\n\nexports.Parser = exports.parser.Parser;\nexports.Refiner = exports.refiner.Refiner;\nexports.Filter = exports.refiner.Filter;\n\nexports.ParsedResult = require('./result').ParsedResult;\nexports.ParsedComponents = require('./result').ParsedComponents;\n\nvar Chrono = function(option) {\n\n    option = option || exports.options.casualOption();\n\n    this.option = option;\n    this.parsers = new Object(option.parsers);\n    this.refiners = new Object(option.refiners);\n};\n\n\nChrono.prototype.parse = function(text, refDate, opt) {\n\n    refDate = refDate || new Date();\n    opt = opt || {};\n\n    var allResults = [];\n\n    this.parsers.forEach(function (parser) {\n        var results = parser.execute(text, refDate, opt);\n        allResults = allResults.concat(results);\n    });\n\n    allResults.sort(function(a, b) {\n        return a.index - b.index;\n    });\n\n    this.refiners.forEach(function (refiner) {\n        allResults = refiner.refine(text, allResults, opt);\n    });\n    \n    return allResults;\n};\n\n\nChrono.prototype.parseDate = function(text, refDate, opt) {\n    var results = this.parse(text, refDate, opt);\n    if (results.length > 0) {\n        return results[0].start.date();\n    }\n    return null;\n};\n\nexports.Chrono = Chrono;\nexports.strict = new Chrono( options.strictOption() );\nexports.casual = new Chrono( options.casualOption() );\n\nexports.en = new Chrono( options.mergeOptions([\n    options.en.casual, options.commonPostProcessing]));\n\nexports.de = new Chrono( options.mergeOptions([\n    options.de.casual, options.en, options.commonPostProcessing]));\n\nexports.es = new Chrono( options.mergeOptions([\n    options.es.casual, options.en, options.commonPostProcessing]));\n\nexports.fr = new Chrono( options.mergeOptions([\n    options.fr.casual, options.en, options.commonPostProcessing]));\n\nexports.ja = new Chrono( options.mergeOptions([ \n    options.ja.casual, options.en, options.commonPostProcessing]));\n\n\nexports.parse = function () {\n    return exports.casual.parse.apply(exports.casual, arguments);\n};\n\nexports.parseDate = function () {\n    return exports.casual.parseDate.apply(exports.casual, arguments);\n};\n\n\n\n\n","var parser = require('./parsers/parser');\nvar refiner = require('./refiners/refiner');\n\n\nexports.mergeOptions = function(options) {\n\n    var addedTypes = {};\n    var mergedOption = {\n        parsers: [],\n        refiners: []\n    };\n\n    options.forEach(function (option) {\n\n        if (option.call) {\n            option = option.call();\n        }\n\n        if (option.parsers) {\n            option.parsers.forEach(function (p) {\n                if (!addedTypes[p.constructor]) {\n                    mergedOption.parsers.push(p);\n                    addedTypes[p.constructor] = true;\n                }\n            });\n        }\n\n        if (option.refiners) {\n            option.refiners.forEach(function (r) {\n                if (!addedTypes[r.constructor]) {\n                    mergedOption.refiners.push(r);\n                    addedTypes[r.constructor] = true;\n                }\n            });\n        }\n    });\n\n    return mergedOption;\n};\n\n\nexports.commonPostProcessing = function() {\n    return {\n        refiners: [\n            // These should be after all other refiners\n            new refiner.ExtractTimezoneOffsetRefiner(),\n            new refiner.ExtractTimezoneAbbrRefiner(),\n            new refiner.UnlikelyFormatFilter()\n        ]\n    }\n};\n\n\n// -------------------------------------------------------------\n\nexports.strictOption = function () {\n    return exports.mergeOptions([\n        exports.en(true),\n\n        exports.de(true),\n        exports.es(true),\n        exports.fr(true),\n        exports.ja(true),\n        exports.zh,\n        exports.commonPostProcessing\n    ]);\n};\n\nexports.casualOption = function () {\n    return exports.mergeOptions([\n        exports.en.casual,\n\n        exports.de(true),\n        exports.es.casual,\n        exports.fr.casual,\n        exports.ja.casual,\n        exports.zh,\n        exports.commonPostProcessing\n    ]);\n};\n\n// -------------------------------------------------------------\n\nexports.de = function(strictMode) {\n    return {\n        parsers: [\n            new parser.DEDeadlineFormatParser(strictMode),\n            new parser.DEMonthNameLittleEndianParser(strictMode),\n            new parser.DEMonthNameParser(strictMode),\n            new parser.DESlashDateFormatParser(strictMode),\n            new parser.DETimeAgoFormatParser(strictMode),\n            new parser.DETimeExpressionParser(strictMode)\n        ],\n        refiners: [\n            new refiner.OverlapRemovalRefiner(),\n            new refiner.ForwardDateRefiner(),\n            new refiner.DEMergeDateTimeRefiner(),\n            new refiner.DEMergeDateRangeRefiner()\n        ]\n    }\n};\n\nexports.de.casual = function() {\n    var option = exports.de(false);\n    option.parsers.unshift(new parser.DECasualDateParser());\n    option.parsers.unshift(new parser.DEWeekdayParser());\n    return option;\n};\n\n\n\n// -------------------------------------------------------------\n\n\nexports.en = function(strictMode) {\n    return {\n        parsers: [\n            new parser.ENISOFormatParser(strictMode),\n            new parser.ENDeadlineFormatParser(strictMode),\n            new parser.ENMonthNameLittleEndianParser(strictMode),\n            new parser.ENMonthNameMiddleEndianParser(strictMode),\n            new parser.ENMonthNameParser(strictMode),\n            new parser.ENSlashDateFormatParser(strictMode),\n            new parser.ENSlashDateFormatStartWithYearParser(strictMode),\n            new parser.ENSlashMonthFormatParser(strictMode),\n            new parser.ENTimeAgoFormatParser(strictMode),\n            new parser.ENTimeExpressionParser(strictMode)\n        ],\n        refiners: [\n            new refiner.OverlapRemovalRefiner(),\n            new refiner.ForwardDateRefiner(),\n\n            // English\n            new refiner.ENMergeDateTimeRefiner(),\n            new refiner.ENMergeDateRangeRefiner(),\n            new refiner.ENPrioritizeSpecificDateRefiner()\n        ]\n    }\n};\n\nexports.en.casual = function() {\n    var option = exports.en(false);\n\n    // EN\n    option.parsers.unshift(new parser.ENCasualDateParser());\n    option.parsers.unshift(new parser.ENCasualTimeParser());\n    option.parsers.unshift(new parser.ENWeekdayParser());\n    option.parsers.unshift(new parser.ENRelativeDateFormatParser());\n    return option;\n};\n\n// -------------------------------------------------------------\n\nexports.ja = function() {\n    return {\n        parsers: [\n            new parser.JPStandardParser()\n        ],\n        refiners: [\n            new refiner.OverlapRemovalRefiner(),\n            new refiner.ForwardDateRefiner(),\n            new refiner.JPMergeDateRangeRefiner()\n        ]\n    }\n};\n\nexports.ja.casual = function() {\n    var option = exports.ja();\n    option.parsers.unshift(new parser.JPCasualDateParser());\n    return option;\n};\n\n\n// -------------------------------------------------------------\n\n\nexports.es = function(strictMode) {\n    return {\n        parsers: [\n            new parser.ESTimeAgoFormatParser(strictMode),\n            new parser.ESDeadlineFormatParser(strictMode),\n            new parser.ESTimeExpressionParser(strictMode),\n            new parser.ESMonthNameLittleEndianParser(strictMode),\n            new parser.ESSlashDateFormatParser(strictMode)\n        ],\n        refiners: [\n            new refiner.OverlapRemovalRefiner(),\n            new refiner.ForwardDateRefiner()\n        ]\n    }\n};\n\nexports.es.casual = function() {\n    var option = exports.es(false);\n    option.parsers.unshift(new parser.ESCasualDateParser());\n    option.parsers.unshift(new parser.ESWeekdayParser());\n    return option;\n};\n\n\n// -------------------------------------------------------------\n\nexports.fr = function(strictMode) {\n    return {\n        parsers: [\n            new parser.FRDeadlineFormatParser(strictMode),\n            new parser.FRMonthNameLittleEndianParser(strictMode),\n            new parser.FRSlashDateFormatParser(strictMode),\n            new parser.FRTimeAgoFormatParser(strictMode),\n            new parser.FRTimeExpressionParser(strictMode)\n        ],\n        refiners: [\n            new refiner.OverlapRemovalRefiner(),\n            new refiner.ForwardDateRefiner(),\n            new refiner.FRMergeDateRangeRefiner(),\n            new refiner.FRMergeDateTimeRefiner()\n        ]\n    }\n};\n\nexports.fr.casual = function() {\n    var option = exports.fr(false);\n    option.parsers.unshift(new parser.FRCasualDateParser());\n    option.parsers.unshift(new parser.FRWeekdayParser());\n    return option;\n};\n\n\n// -------------------------------------------------------------\n\nexports.zh = function() {\n    return {\n        parsers: [\n            new parser.ZHHantDateParser(),\n            new parser.ZHHantWeekdayParser(),\n            new parser.ZHHantTimeExpressionParser(),\n            new parser.ZHHantCasualDateParser(),\n            new parser.ZHHantDeadlineFormatParser()\n        ],\n        refiners: [\n            new refiner.OverlapRemovalRefiner(),\n            new refiner.ForwardDateRefiner()\n        ]\n    }\n};","\nexports.Refiner = function Refiner() { \n\n    this.refine = function(text, results, opt) { return results; };\n}\n\nexports.Filter = function Filter() { \n    \n    exports.Refiner.call(this);\n\n    this.isValid = function(text, result, opt) { return true; }\n    this.refine = function(text, results, opt) { \n\n        var filteredResult = [];\n        for (var i=0; i < results.length; i++) {\n\n            var result = results[i];\n            if (this.isValid(text, result, opt)) {\n                filteredResult.push(result);\n            }\n        }\n\n        return filteredResult;\n    }\n}\n\n\n// Common refiners\nexports.OverlapRemovalRefiner = require('./OverlapRemovalRefiner').Refiner;\nexports.ExtractTimezoneOffsetRefiner = require('./ExtractTimezoneOffsetRefiner').Refiner;\nexports.ExtractTimezoneAbbrRefiner = require('./ExtractTimezoneAbbrRefiner').Refiner;\nexports.ForwardDateRefiner = require('./ForwardDateRefiner').Refiner;\nexports.UnlikelyFormatFilter = require('./UnlikelyFormatFilter').Refiner;\n\n// EN refiners\nexports.ENMergeDateTimeRefiner = require('./EN/ENMergeDateTimeRefiner').Refiner;\nexports.ENMergeDateRangeRefiner = require('./EN/ENMergeDateRangeRefiner').Refiner;\nexports.ENPrioritizeSpecificDateRefiner = require('./EN/ENPrioritizeSpecificDateRefiner').Refiner;\n\n// JP refiners\nexports.JPMergeDateRangeRefiner = require('./JP/JPMergeDateRangeRefiner').Refiner;\n\n// FR refiners\nexports.FRMergeDateRangeRefiner = require('./FR/FRMergeDateRangeRefiner').Refiner;\nexports.FRMergeDateTimeRefiner = require('./FR/FRMergeDateTimeRefiner').Refiner;\n\n// DE refiners\nexports.DEMergeDateRangeRefiner = require('./DE/DEMergeDateRangeRefiner').Refiner;\nexports.DEMergeDateTimeRefiner = require('./DE/DEMergeDateTimeRefiner').Refiner;\n","var moment = require('moment');\n\nfunction ParsedResult(result){\n    result = result || {};\n\n    this.ref   = result.ref;\n    this.index = result.index;\n    this.text  = result.text;\n    this.tags  = result.tags || {};\n\n    this.start = new ParsedComponents(result.start, result.ref)\n    if(result.end){\n        this.end = new ParsedComponents(result.end, result.ref)\n    }\n}\n\nParsedResult.prototype.clone = function() {\n    var result = new ParsedResult(this);\n    result.tags = JSON.parse(JSON.stringify(this.tags));\n    result.start = this.start.clone();\n    if (this.end) {\n        result.end = this.end.clone();\n    }\n}\n\nParsedResult.prototype.hasPossibleDates = function() {\n    return this.start.isPossibleDate() && (!this.end || this.end.isPossibleDate());\n}\n\n\nfunction ParsedComponents (components, ref){\n\n    this.knownValues = {};\n    this.impliedValues = {};\n\n    if (components) {\n        for (key in components) {\n            this.knownValues[key] = components[key];\n        }\n    }\n\n    if (ref) {\n        ref = moment(ref);\n        this.imply('day', ref.date())\n        this.imply('month', ref.month() + 1)\n        this.imply('year', ref.year())\n    }\n    \n\n    this.imply('hour', 12);\n    this.imply('minute', 0);\n    this.imply('second', 0);\n    this.imply('millisecond', 0);\n}\n\nParsedComponents.prototype.clone = function () {\n    var component = new ParsedComponents();\n    component.knownValues = JSON.parse(JSON.stringify(this.knownValues));\n    component.impliedValues = JSON.parse(JSON.stringify(this.impliedValues));\n    return component;\n};\n\nParsedComponents.prototype.get = function(component, value) {\n    if (component in this.knownValues) return this.knownValues[component];\n    if (component in this.impliedValues) return this.impliedValues[component];\n};\n\nParsedComponents.prototype.assign = function(component, value) {\n    this.knownValues[component] = value;\n    delete this.impliedValues[component];\n};\n\nParsedComponents.prototype.imply = function(component, value) {\n    if (component in this.knownValues) return;\n    this.impliedValues[component] = value;\n};\n\nParsedComponents.prototype.isCertain = function(component) {\n    return component in this.knownValues;\n};\n\nParsedComponents.prototype.isPossibleDate = function() {\n    var dateMoment = this.moment();\n    if (this.isCertain('timezoneOffset')) {\n        dateMoment.utcOffset(this.get('timezoneOffset'))\n    }\n\n    if (dateMoment.get('year') != this.get('year')) return false;\n    if (dateMoment.get('month') != this.get('month')-1) return false;\n    if (dateMoment.get('date') != this.get('day')) return false;\n    if (dateMoment.get('hour') != this.get('hour')) return false;\n    if (dateMoment.get('minute') != this.get('minute')) return false;\n\n    return true;\n};\n\nParsedComponents.prototype.date = function() {\n    var dateMoment = this.moment();\n    return dateMoment.toDate();\n};\n\nParsedComponents.prototype.moment = function() {\n    var dateMoment = moment();\n\n    dateMoment.set('year', this.get('year'));\n    dateMoment.set('month', this.get('month')-1);\n    dateMoment.set('date', this.get('day'));\n    dateMoment.set('hour', this.get('hour'));\n    dateMoment.set('minute', this.get('minute'));\n    dateMoment.set('second', this.get('second'));\n    dateMoment.set('millisecond', this.get('millisecond'));\n\n    // Javascript Date Object return minus timezone offset\n    var currentTimezoneOffset = dateMoment.utcOffset();\n    var targetTimezoneOffset = this.isCertain('timezoneOffset') ? \n        this.get('timezoneOffset') : currentTimezoneOffset;\n\n    var adjustTimezoneOffset = targetTimezoneOffset - currentTimezoneOffset;\n    dateMoment.add(-adjustTimezoneOffset, 'minutes');\n\n    return dateMoment;\n};\n\n\n\nexports.ParsedComponents = ParsedComponents;\nexports.ParsedResult = ParsedResult;\n","\nfunction Parser(strictMode) {\n\n    this.isStrictMode = function() { return (strictMode == true) };\n\n    this.pattern = function() { return /./i; }\n\n    this.extract = function(text, ref, match, opt){ return null; }\n\n    this.execute = function(text, ref, opt) {\n\n        var results = [];\n        var regex = this.pattern();\n\n        var remainingText = text;\n        var match = regex.exec(remainingText);\n\n        while (match) {\n\n            // Calculate match index on the full text;\n            match.index += text.length - remainingText.length;\n\n            var result = this.extract(text, ref, match, opt);\n            if (result) {\n\n                // If success, start from the end of the result\n                remainingText = text.substring(result.index + result.text.length);\n\n                if (!this.isStrictMode() || result.hasPossibleDates()) {\n                    results.push(result);\n                }\n\n            } else {\n                // If fail, move on by 1\n                remainingText = text.substring(match.index + 1);\n            }\n\n            match = regex.exec(remainingText);\n        }\n\n        if (this.refiners) {\n            this.refiners.forEach(function () {\n                results = refiner.refine(results, text, options);\n            });\n        }\n\n        return results;\n    }\n}\n\nexports.Parser = Parser;\n\nexports.ENISOFormatParser = require('./EN/ENISOFormatParser').Parser;\nexports.ENDeadlineFormatParser = require('./EN/ENDeadlineFormatParser').Parser;\nexports.ENRelativeDateFormatParser = require('./EN/ENRelativeDateFormatParser').Parser;\nexports.ENMonthNameLittleEndianParser = require('./EN/ENMonthNameLittleEndianParser').Parser;\nexports.ENMonthNameMiddleEndianParser = require('./EN/ENMonthNameMiddleEndianParser').Parser;\nexports.ENMonthNameParser = require('./EN/ENMonthNameParser').Parser;\nexports.ENSlashDateFormatParser = require('./EN/ENSlashDateFormatParser').Parser;\nexports.ENSlashDateFormatStartWithYearParser = require('./EN/ENSlashDateFormatStartWithYearParser').Parser;\nexports.ENSlashMonthFormatParser = require('./EN/ENSlashMonthFormatParser').Parser;\nexports.ENTimeAgoFormatParser = require('./EN/ENTimeAgoFormatParser').Parser;\nexports.ENTimeExpressionParser = require('./EN/ENTimeExpressionParser').Parser;\nexports.ENWeekdayParser = require('./EN/ENWeekdayParser').Parser;\nexports.ENCasualDateParser = require('./EN/ENCasualDateParser').Parser;\nexports.ENCasualTimeParser = require('./EN/ENCasualTimeParser').Parser;\n\nexports.JPStandardParser = require('./JP/JPStandardParser').Parser;\nexports.JPCasualDateParser = require('./JP/JPCasualDateParser').Parser;\n\nexports.ESCasualDateParser = require('./ES/ESCasualDateParser').Parser;\nexports.ESDeadlineFormatParser = require('./ES/ESDeadlineFormatParser').Parser;\nexports.ESTimeAgoFormatParser = require('./ES/ESTimeAgoFormatParser').Parser;\nexports.ESTimeExpressionParser = require('./ES/ESTimeExpressionParser').Parser;\nexports.ESWeekdayParser = require('./ES/ESWeekdayParser').Parser;\nexports.ESMonthNameLittleEndianParser = require('./ES/ESMonthNameLittleEndianParser').Parser;\nexports.ESSlashDateFormatParser = require('./ES/ESSlashDateFormatParser').Parser;\n\nexports.FRCasualDateParser = require('./FR/FRCasualDateParser').Parser;\nexports.FRDeadlineFormatParser = require('./FR/FRDeadlineFormatParser').Parser;\nexports.FRMonthNameLittleEndianParser = require('./FR/FRMonthNameLittleEndianParser').Parser;\nexports.FRSlashDateFormatParser = require('./FR/FRSlashDateFormatParser').Parser;\nexports.FRTimeAgoFormatParser = require('./FR/FRTimeAgoFormatParser').Parser;\nexports.FRTimeExpressionParser = require('./FR/FRTimeExpressionParser').Parser;\nexports.FRWeekdayParser = require('./FR/FRWeekdayParser').Parser;\n\nexports.ZHHantDateParser = require('./ZH-Hant/ZHHantDateParser').Parser;\nexports.ZHHantWeekdayParser = require('./ZH-Hant/ZHHantWeekdayParser').Parser;\nexports.ZHHantTimeExpressionParser = require('./ZH-Hant/ZHHantTimeExpressionParser').Parser;\nexports.ZHHantCasualDateParser = require('./ZH-Hant/ZHHantCasualDateParser').Parser;\nexports.ZHHantDeadlineFormatParser = require('./ZH-Hant/ZHHantDeadlineFormatParser').Parser;\n\nexports.DEDeadlineFormatParser = require('./DE/DEDeadlineFormatParser').Parser;\nexports.DEMonthNameLittleEndianParser = require('./DE/DEMonthNameLittleEndianParser').Parser;\nexports.DEMonthNameParser = require('./DE/DEMonthNameParser').Parser;\nexports.DESlashDateFormatParser = require('./DE/DESlashDateFormatParser').Parser;\nexports.DETimeAgoFormatParser = require('./DE/DETimeAgoFormatParser').Parser;\nexports.DETimeExpressionParser = require('./DE/DETimeExpressionParser').Parser;\nexports.DEWeekdayParser = require('./DE/DEWeekdayParser').Parser;\nexports.DECasualDateParser = require('./DE/DECasualDateParser').Parser;\n","/*\n  \n*/\nvar Refiner = require('./refiner').Refiner;\n\nexports.Refiner = function OverlapRemovalRefiner() {\n\tRefiner.call(this);\n\t\n\n\tthis.refine = function(text, results, opt) { \n\n        if (results.length < 2) return results;\n        \n        var filteredResults = [];\n        var prevResult = results[0];\n        \n        for (var i=1; i<results.length; i++){\n            \n            var result = results[i];\n            \n            // If overlap, compare the length and discard the shorter one\n            if (result.index < prevResult.index + prevResult.text.length) {\n\n                if (result.text.length > prevResult.text.length){\n                    prevResult = result;\n                }\n                \n            } else {\n                filteredResults.push(prevResult);\n                prevResult = result;\n            }\n        }\n        \n        // The last one\n        if (prevResult != null) {\n            filteredResults.push(prevResult);\n        }\n\n        return filteredResults;\n    }\n}","/*\n  \n*/\nvar Refiner = require('./refiner').Refiner;\n\n\nvar TIMEZONE_OFFSET_PATTERN = new RegExp(\"^\\\\s*(GMT|UTC)?(\\\\+|\\\\-)(\\\\d{1,2}):?(\\\\d{2})\", 'i');\nvar TIMEZONE_OFFSET_SIGN_GROUP = 2;\nvar TIMEZONE_OFFSET_HOUR_OFFSET_GROUP = 3;\nvar TIMEZONE_OFFSET_MINUTE_OFFSET_GROUP = 4;\n\nexports.Refiner = function ExtractTimezoneOffsetRefiner() {\n    Refiner.call(this);\n\n    this.refine = function(text, results, opt) {\n\n        results.forEach(function(result) {\n\n            if (result.start.isCertain('timezoneOffset')) {\n                return;\n            }\n\n            var match = TIMEZONE_OFFSET_PATTERN.exec(text.substring(result.index + result.text.length));\n            if (!match) {\n                return;\n            }\n\n            var hourOffset = parseInt(match[TIMEZONE_OFFSET_HOUR_OFFSET_GROUP]);\n            var minuteOffset = parseInt(match[TIMEZONE_OFFSET_MINUTE_OFFSET_GROUP]);\n            var timezoneOffset = hourOffset * 60 + minuteOffset;\n            if (match[TIMEZONE_OFFSET_SIGN_GROUP] === '-') {\n                timezoneOffset = -timezoneOffset;\n            }\n\n            if (result.end != null) {\n                result.end.assign('timezoneOffset', timezoneOffset);\n            }\n\n            result.start.assign('timezoneOffset', timezoneOffset);\n            result.text += match[0];\n            result.tags['ExtractTimezoneOffsetRefiner'] = true;\n        });\n\n        return results;\n    }\n}\n","/*\n\n*/\nvar Refiner = require('./refiner').Refiner;\n\n// Map ABBR -> Offset in minute\nvar TIMEZONE_ABBR_MAP = {};\nvar TIMEZONE_NAME_PATTERN = new RegExp(\"^\\\\s*\\\\(?([A-Z]{2,4})\\\\)?(?=\\\\W|$)\", 'i');\n\nexports.Refiner = function ExtractTimezoneAbbrRefiner() {\n\tRefiner.call(this);\n\n\tthis.refine = function(text, results, opt) {\n\n\t\tresults.forEach(function(result) {\n\n            if (!result.tags['ENTimeExpressionParser'] && !result.tags['ZHTimeExpressionParser'] && !result.tags['FRTimeExpressionParser'] && !result.tags['DETimeExpressionParser']) {\n                return;\n            }\n\n            var match = TIMEZONE_NAME_PATTERN.exec(text.substring(result.index + result.text.length));\n            if (match) {\n                var timezoneAbbr = match[1].toUpperCase();\n                if (TIMEZONE_ABBR_MAP[timezoneAbbr] === undefined) {\n                    return;\n                }\n\n                var timezoneOffset = TIMEZONE_ABBR_MAP[timezoneAbbr];\n                if (!result.start.isCertain('timezoneOffset')) {\n                    result.start.assign('timezoneOffset', timezoneOffset);\n                }\n\n                if (result.end != null && !result.end.isCertain('timezoneOffset')) {\n                    result.end.assign('timezoneOffset', timezoneOffset);\n                }\n\n                result.text += match[0];\n                result.tags['ExtractTimezoneAbbrRefiner'] = true;\n            }\n\t\t});\n\n        return results;\n\t}\n}\n\n// TODO: Move this to some configuration\nTIMEZONE_ABBR_MAP = {hST\":600,\"DAVT\":420,\"EASST\":-300,\"EAST\":-360,\"EAT\":180,\"ECT\":-300,\"EDT\":-240,\"EEST\":180,\"EET\":120,\"EGST\":0,\"EGT\":-60,\"EST\":-300,\"ET\":-300,\"FJST\":780,\"FJT\":720,\"FKST\":-180,\"FKT\":-240,\"FNT\":-120,\"GALT\":-360,\"GAMT\":-540,\"GET\":240,\"GFT\":-180,\"GILT\":720,\"GMT\":0,\"GST\":240,\"GYT\":-240,\"HAA\":-180,\"HAC\":-300,\"HADT\":-540,\"HAE\":-240,\"HAP\":-420,\"HAR\":-360,\"HAST\":-600,\"HAT\":-90,\"HAY\":-480,\"HKT\":480,\"HLV\":-210,\"HNA\":-240,\"HNC\":-360,\"HNE\":-300,\"HNP\":-480,\"HNR\":-420,\"HNT\":-150,\"HNY\":-540,\"HOVT\":420,\"ICT\":420,\"IDT\":180,\"IOT\":360,\"IRDT\":270,\"IRKST\":540,\"IRKT\":540,\"IRST\":210,\"IST\":60,\"JST\":540,\"KGT\":360,\"KRAST\":480,\"KRAT\":480,\"KST\":540,\"KUYT\":240,\"LHDT\":660,\"LHST\":630,\"LINT\":840,\"MAGST\":720,\"MAGT\":720,\"MART\":-510,\"MAWT\":300,\"MDT\":-360,\"MESZ\":120,\"MEZ\":60,\"MHT\":720,\"MMT\":390,\"MSD\":240,\"MSK\":240,\"MST\":-420,\"MUT\":240,\"MVT\":300,\"MYT\":480,\"NCT\":660,\"NDT\":-90,\"NFT\":690,\"NOVST\":420,\"NOVT\":360,\"NPT\":345,\"NST\":-150,\"NUT\":-660,\"NZDT\":780,\"NZST\":720,\"OMSST\":420,\"OMST\":420,\"PDT\":-420,\"PET\":-300,\"PETST\":720,\"PETT\":720,\"PGT\":600,\"PHOT\":780,\"PHT\":480,\"PKT\":300,\"PMDT\":-120,\"PMST\":-180,\"PONT\":660,\"PST\":-480,\"PT\":-480,\"PWT\":540,\"PYST\":-180,\"PYT\":-240,\"RET\":240,\"SAMT\":240,\"SAST\":120,\"SBT\":660,\"SCT\":240,\"SGT\":480,\"SRT\":-180,\"SST\":-660,\"TAHT\":-600,\"TFT\":300,\"TJT\":300,\"TKT\":780,\"TLT\":540,\"TMT\":300,\"TVT\":720,\"ULAT\":480,\"UTC\":0,\"UYST\":-120,\"UYT\":-180,\"UZT\":300,\"VET\":-210,\"VLAST\":660,\"VLAT\":660,\"VUT\":660,\"WAST\":120,\"WAT\":60,\"WEST\":60,\"WESZ\":60,\"WET\":0,\"WEZ\":0,\"WFT\":720,\"WGST\":-120,\"WGT\":-180,\"WIB\":420,\"WIT\":540,\"WITA\":480,\"WST\":780,\"WT\":0,\"YAKST\":600,\"YAKT\":600,\"YAPT\":600,\"YEKST\":360,\"YEKT\":360}\n","/*\n    Enforce 'forwardDate' option to on the results. When there are missing component,\n    e.g. \"March 12-13 (without year)\" or \"Thursday\", the refiner will try to adjust the result\n    into the future instead of the past.\n*/\nvar moment = require('moment');\nvar Refiner = require('./refiner').Refiner;\n\nexports.Refiner = function ForwardDateRefiner() {\n    Refiner.call(this);\n\n    this.refine = function(text, results, opt) {\n\n        if (!opt['forwardDate'] && !opt['forwardDatesOnly']) {\n            return results;\n        }\n\n        results.forEach(function(result) {\n\n            var refMoment = moment(result.ref);\n\n            if (result.start.isCertain('day') && result.start.isCertain('month') &&\n                !result.start.isCertain('year') &&\n                refMoment.isAfter(result.start.moment())\n            ) {\n                // Adjust year into the future\n                for (var i=0; i < 3 && refMoment.isAfter(result.start.moment()); i++) {\n                    result.start.imply('year', result.start.get('year') + 1);\n\n                    if (result.end && !result.end.isCertain('year')) {\n                        result.end.imply('year', result.end.get('year') + 1);\n                    }\n                }\n\n                result.tags['ExtractTimezoneOffsetRefiner'] = true;\n            }\n\n            if (!result.start.isCertain('day') && !result.start.isCertain('month') && !result.start.isCertain('year') &&\n                result.start.isCertain('weekday') &&\n                refMoment.isAfter(result.start.moment())\n            ) {\n                // Adjust date to the coming week\n                if (refMoment.day() > result.start.get('weekday')) {\n                    refMoment.day(result.start.get('weekday') + 7);\n                } else {\n                    refMoment.day(result.start.get('weekday'));\n                }\n\n                result.start.imply('day', refMoment.date());\n                result.start.imply('month', refMoment.month() + 1);\n                result.start.imply('year', refMoment.year());\n                result.tags['ExtractTimezoneOffsetRefiner'] = true;\n            }\n        });\n\n        return results;\n    }\n};\n","/*\n  \n*/\nvar Filter = require('./refiner').Filter;\n\nexports.Refiner = function UnlikelyFormatFilter() {\n    Filter.call(this);\n    \n\n    this.isValid = function(text, result, opt) { \n\n        if (result.text.replace(' ','').match(/^\\d*(\\.\\d*)?$/)) {\n            return false;\n        }\n\n        return true; \n    }\n}","/*\n  \n*/\nvar Refiner = require('../refiner').Refiner;\n\nexports.Refiner = function ENMergeDateRangeRefiner() {\n    Refiner.call(this);\n\n    this.pattern = function () { return /^\\s*(to|\\-)\\s*$/i };\n\n    this.refine = function(text, results, opt) {\n\n        if (results.length < 2) return results;\n        \n        var mergedResult = [];\n        var currResult = null;\n        var prevResult = null;\n        \n        for (var i=1; i<results.length; i++){\n            \n            currResult = results[i];\n            prevResult = results[i-1];\n            \n            if (!prevResult.end && !currResult.end \n                && this.isAbleToMerge(text, prevResult, currResult)) {\n              \n                prevResult = this.mergeResult(text, prevResult, currResult);\n                currResult = null;\n                i += 1;\n            }\n            \n            mergedResult.push(prevResult);\n        }\n        \n        if (currResult != null) {\n            mergedResult.push(currResult);\n        }\n\n\n        return mergedResult;\n    };\n\n    this.isAbleToMerge = function(text, result1, result2) {\n        var begin = result1.index + result1.text.length;\n        var end   = result2.index;\n        var textBetween = text.substring(begin,end);\n\n        return textBetween.match(this.pattern());\n    };\n\n    this.isWeekdayResult = function (result) {\n        return result.start.isCertain('weekday') && !result.start.isCertain('day');\n    };\n\n    this.mergeResult = function(text, fromResult, toResult) {\n\n        if (!this.isWeekdayResult(fromResult) && !this.isWeekdayResult(toResult)) {\n\n            for (var key in toResult.start.knownValues) {\n                if (!fromResult.start.isCertain(key)) {\n                    fromResult.start.assign(key, toResult.start.get(key));\n                }\n            }\n\n            for (var key in fromResult.start.knownValues) {\n                if (!toResult.start.isCertain(key)) {\n                    toResult.start.assign(key, fromResult.start.get(key));\n                }\n            }\n        }\n\n        if (fromResult.start.date().getTime() > toResult.start.date().getTime()) {\n            var tmp = toResult;\n            toResult = fromResult;\n            fromResult = tmp;\n        }\n        \n        fromResult.end = toResult.start;\n\n        \n\n        for (var tag in toResult.tags) {\n            fromResult.tags[tag] = true;\n        }\n\n            \n        var startIndex = Math.min(fromResult.index, toResult.index);\n        var endIndex = Math.max(\n            fromResult.index + fromResult.text.length, \n            toResult.index + toResult.text.length);\n            \n        fromResult.index = startIndex;\n        fromResult.text  = text.substring(startIndex, endIndex);\n        fromResult.tags[this.constructor.name] = true;\n        return fromResult;\n    }\n};\n\n","/*\n    \n*/\nvar ParsedComponents = require('../../result').ParsedComponents;\nvar Refiner = require('../refiner').Refiner;\n\n\n\nvar PATTERN = new RegExp(\"^\\\\s*(T|at|after|before|on|of|,|-)?\\\\s*$\");\n\nfunction isDateOnly(result) {\n    return !result.start.isCertain('hour');\n}\n    \nfunction isTimeOnly(result) {\n    return !result.start.isCertain('month') && !result.start.isCertain('weekday');\n}\n\n\nfunction isAbleToMerge(text, prevResult, curResult) {\n    var textBetween = text.substring(prevResult.index + prevResult.text.length, curResult.index);\n    return textBetween.match(PATTERN);\n}\n\nfunction mergeResult(text, dateResult, timeResult){\n\n    var beginDate = dateResult.start;\n    var beginTime = timeResult.start;\n        \n    var beginDateTime = beginDate.clone();\n    beginDateTime.assign('hour', beginTime.get('hour'));\n    beginDateTime.assign('minute', beginTime.get('minute'));\n    beginDateTime.assign('second', beginTime.get('second'));\n        \n    if (beginTime.isCertain('meridiem')) {\n        beginDateTime.assign('meridiem', beginTime.get('meridiem'));\n    } else if (\n        beginTime.get('meridiem') !== undefined &&\n        beginDateTime.get('meridiem') === undefined\n    ) {\n        beginDateTime.imply('meridiem', beginTime.get('meridiem'));\n    }\n\n    if (beginDateTime.get('meridiem') == 1 && beginDateTime.get('hour') < 12) {\n        beginDateTime.assign('hour', beginDateTime.get('hour') + 12);\n    }\n\n    if (dateResult.end != null || timeResult.end != null) {\n        \n        var endDate   = dateResult.end == null ? dateResult.start : dateResult.end;            \n        var endTime   = timeResult.end == null ? timeResult.start : timeResult.end;\n\n        var endDateTime = endDate.clone();\n        endDateTime.assign('hour', endTime.get('hour'));\n        endDateTime.assign('minute', endTime.get('minute'));\n        endDateTime.assign('second', endTime.get('second'));\n        \n        if (endTime.isCertain('meridiem')) {\n            endDateTime.assign('meridiem', endTime.get('meridiem'));\n        } else if (beginTime.get('meridiem') != null) {\n            endDateTime.imply('meridiem', endTime.get('meridiem'));\n        }\n        \n        if (dateResult.end == null && endDateTime.date().getTime() < beginDateTime.date().getTime()) {\n            // Ex. 9pm - 1am\n            if (endDateTime.isCertain('day')) {\n                endDateTime.assign('day', endDateTime.get('day') + 1);\n            } else {\n                endDateTime.imply('day', endDateTime.get('day') + 1);\n            }\n        }\n\n        dateResult.end = endDateTime;\n    }\n\n    dateResult.start = beginDateTime;    \n\n    var startIndex = Math.min(dateResult.index, timeResult.index);\n    var endIndex = Math.max(\n            dateResult.index + dateResult.text.length, \n            timeResult.index + timeResult.text.length);\n    \n    dateResult.index = startIndex;\n    dateResult.text  = text.substring(startIndex, endIndex);\n\n    for (var tag in timeResult.tags) {\n        dateResult.tags[tag] = true;\n    }\n    dateResult.tags['ENMergeDateAndTimeRefiner'] = true;\n    return dateResult;\n}\n\nexports.Refiner = function ENMergeDateTimeRefiner() {\n    Refiner.call(this);\n\n\n    this.refine = function(text, results, opt) { \n\n        if (results.length < 2) return results;\n\n        var mergedResult = [];\n        var currResult = null;\n        var prevResult = null;\n\n        for (var i = 1; i < results.length; i++) {\n\n            currResult = results[i];\n            prevResult = results[i-1];\n            \n            if (isDateOnly(prevResult) && isTimeOnly(currResult) \n                    && isAbleToMerge(text, prevResult, currResult)) {\n                \n                prevResult = mergeResult(text, prevResult, currResult);\n                currResult = null;\n                i += 1;\n                \n            } else if (isDateOnly(currResult) && isTimeOnly(prevResult)\n                    && isAbleToMerge(text, prevResult, currResult)) {\n                \n                prevResult = mergeResult(text, currResult, prevResult);\n                currResult = null;\n                i += 1;\n            }\n            \n            mergedResult.push(prevResult);\n        }\n\n        if (currResult != null) {\n            mergedResult.push(currResult);\n        }\n\n        return mergedResult;\n    }\n}","/*\n\n*/\nvar ParsedComponents = require('../../result').ParsedComponents;\nvar Refiner = require('../refiner').Refiner;\n\n\nvar PATTERN = new RegExp(\"^\\\\s*(at|after|before|on|,|-|\\\\(|\\\\))?\\\\s*$\");\n\nfunction isMoreSpecific(prevResult, currResult) {\n    var moreSpecific = false;\n\n    if (prevResult.start.isCertain('year')) {\n        if (!currResult.start.isCertain('year')) {\n            moreSpecific = true;\n        } else {\n            if (prevResult.start.isCertain('month')) {\n                if (!currResult.start.isCertain('month')) {\n                    moreSpecific = true;\n                } else {\n                    if (prevResult.start.isCertain('day') && !currResult.start.isCertain('day')) {\n                        moreSpecific = true;\n                    }\n                }\n            }\n        }\n    }\n\n    return moreSpecific;\n}\n\n\nfunction isAbleToMerge(text, prevResult, currResult) {\n    var textBetween = text.substring(prevResult.index + prevResult.text.length, currResult.index);\n\n    // Only accepts merge if one of them comes from casual relative date\n    var includesRelativeResult = (prevResult.tags['ENRelativeDateFormatParser'] || currResult.tags['ENRelativeDateFormatParser']);\n\n    // We assume they refer to the same date if all date fields are implied\n    var referToSameDate = !prevResult.start.isCertain('day') && !prevResult.start.isCertain('month') && !prevResult.start.isCertain('year');\n\n    // If both years are certain, that determines if they refer to the same date\n    // but with one more specific than the other\n    if (prevResult.start.isCertain('year') && currResult.start.isCertain('year'))\n        referToSameDate = (prevResult.start.get('year') === currResult.start.get('year'));\n\n    // We now test with the next level (month) if they refer to the same date\n    if (prevResult.start.isCertain('month') && currResult.start.isCertain('month'))\n        referToSameDate = (prevResult.start.get('month') === currResult.start.get('month')) && referToSameDate;\n\n    return includesRelativeResult && textBetween.match(PATTERN) && referToSameDate;\n}\n\nfunction mergeResult(text, specificResult, nonSpecificResult){\n\n    var specificDate = specificResult.start;\n    var nonSpecificDate = nonSpecificResult.start;\n\n    var startIndex = Math.min(specificResult.index, nonSpecificResult.index);\n    var endIndex = Math.max(\n            specificResult.index + specificResult.text.length,\n            nonSpecificResult.index + nonSpecificResult.text.length);\n\n    specificResult.index = startIndex;\n    specificResult.text  = text.substring(startIndex, endIndex);\n\n    for (var tag in nonSpecificResult.tags) {\n        specificResult.tags[tag] = true;\n    }\n    specificResult.tags['ENPrioritizeSpecificDateRefiner'] = true;\n    return specificResult;\n}\n\nexports.Refiner = function ENPrioritizeSpecificDateRefiner() {\n    Refiner.call(this);\n\n    this.refine = function(text, results, opt) {\n\n        if (results.length < 2) return results;\n\n        var mergedResult = [];\n        var currResult = null;\n        var prevResult = null;\n\n        for (var i = 1; i < results.length; i++) {\n\n            currResult = results[i];\n            prevResult = results[i-1];\n\n            if (isMoreSpecific(prevResult, currResult)\n                    && isAbleToMerge(text, prevResult, currResult)) {\n\n                prevResult = mergeResult(text, prevResult, currResult);\n                currResult = null;\n                i += 1;\n\n            } else if (isMoreSpecific(currResult, prevResult)\n                    && isAbleToMerge(text, prevResult, currResult)) {\n\n                prevResult = mergeResult(text, currResult, prevResult);\n                currResult = null;\n                i += 1;\n            }\n\n            mergedResult.push(prevResult);\n        }\n\n        if (currResult != null) {\n            mergedResult.push(currResult);\n        }\n\n        return mergedResult;\n    }\n}\n","/*\n  \n*/\nvar ENMergeDateRangeRefiner = require('../EN/ENMergeDateRangeRefiner').Refiner;\n\nexports.Refiner = function JPMergeDateRangeRefiner() {\n    ENMergeDateRangeRefiner.call(this);\n\n    this.pattern = function () { return /^\\s*(から|ー)\\s*$/i };\n}\n\n","/*\r\n  \r\n*/\r\nvar Refiner = require('../refiner').Refiner;\r\n\r\nexports.Refiner = function FRMergeDateRangeRefiner() {\r\n    Refiner.call(this);\r\n\r\n    this.pattern = function () { return /^\\s*(à|a|\\-)\\s*$/i };\r\n\r\n    this.refine = function(text, results, opt) {\r\n\r\n        if (results.length < 2) return results;\r\n        \r\n        var mergedResult = [];\r\n        var currResult = null;\r\n        var prevResult = null;\r\n        \r\n        for (var i=1; i<results.length; i++){\r\n            \r\n            currResult = results[i];\r\n            prevResult = results[i-1];\r\n            \r\n            if (!prevResult.end && !currResult.end \r\n                && this.isAbleToMerge(text, prevResult, currResult)) {\r\n              \r\n                prevResult = this.mergeResult(text, prevResult, currResult);\r\n                currResult = null;\r\n                i += 1;\r\n            }\r\n            \r\n            mergedResult.push(prevResult);\r\n        }\r\n        \r\n        if (currResult != null) {\r\n            mergedResult.push(currResult);\r\n        }\r\n\r\n\r\n        return mergedResult;\r\n    };\r\n\r\n    this.isAbleToMerge = function(text, result1, result2) {\r\n        var begin = result1.index + result1.text.length;\r\n        var end   = result2.index;\r\n        var textBetween = text.substring(begin,end);\r\n\r\n        return textBetween.match(this.pattern());\r\n    };\r\n\r\n    this.isWeekdayResult = function (result) {\r\n        return result.start.isCertain('weekday') && !result.start.isCertain('day');\r\n    };\r\n\r\n    this.mergeResult = function(text, fromResult, toResult) {\r\n\r\n        if (!this.isWeekdayResult(fromResult) && !this.isWeekdayResult(toResult)) {\r\n\r\n            for (var key in toResult.start.knownValues) {\r\n                if (!fromResult.start.isCertain(key)) {\r\n                    fromResult.start.assign(key, toResult.start.get(key));\r\n                }\r\n            }\r\n\r\n            for (var key in fromResult.start.knownValues) {\r\n                if (!toResult.start.isCertain(key)) {\r\n                    toResult.start.assign(key, fromResult.start.get(key));\r\n                }\r\n            }\r\n        }\r\n\r\n        if (fromResult.start.date().getTime() > toResult.start.date()) {\r\n            var tmp = toResult;\r\n            toResult = fromResult;\r\n            fromResult = tmp;\r\n        }\r\n        \r\n        fromResult.end = toResult.start;\r\n\r\n        \r\n\r\n        for (var tag in toResult.tags) {\r\n            fromResult.tags[tag] = true;\r\n        }\r\n\r\n            \r\n        var startIndex = Math.min(fromResult.index, toResult.index);\r\n        var endIndex = Math.max(\r\n            fromResult.index + fromResult.text.length, \r\n            toResult.index + toResult.text.length);\r\n            \r\n        fromResult.index = startIndex;\r\n        fromResult.text  = text.substring(startIndex, endIndex);\r\n        fromResult.tags[this.constructor.name] = true;\r\n        return fromResult;\r\n    }\r\n};\r\n\r\n","/*\r\n    \r\n*/\r\nvar ParsedComponents = require('../../result').ParsedComponents;\r\nvar Refiner = require('../refiner').Refiner;\r\n\r\n\r\n\r\nvar PATTERN = new RegExp(\"^\\\\s*(T|à|a|vers|de|,|-)?\\\\s*$\");\r\n\r\nfunction isDateOnly(result) {\r\n    return !result.start.isCertain('hour') || result.tags['FRCasualDateParser'];\r\n}\r\n    \r\nfunction isTimeOnly(result) {\r\n    return !result.start.isCertain('month') && !result.start.isCertain('weekday');\r\n}\r\n\r\n\r\nfunction isAbleToMerge(text, prevResult, curResult) {\r\n    var textBetween = text.substring(prevResult.index + prevResult.text.length, curResult.index);\r\n    return textBetween.match(PATTERN);\r\n}\r\n\r\nfunction mergeResult(text, dateResult, timeResult){\r\n\r\n    var beginDate = dateResult.start;\r\n    var beginTime = timeResult.start;\r\n        \r\n    var beginDateTime = beginDate.clone();\r\n    beginDateTime.assign('hour', beginTime.get('hour'));\r\n    beginDateTime.assign('minute', beginTime.get('minute'));\r\n    beginDateTime.assign('second', beginTime.get('second'));\r\n        \r\n    if (beginTime.isCertain('meridiem')) {\r\n        beginDateTime.assign('meridiem', beginTime.get('meridiem'));\r\n    } else if (\r\n        beginTime.get('meridiem') !== undefined &&\r\n        beginDateTime.get('meridiem') === undefined\r\n    ) {\r\n        beginDateTime.imply('meridiem', beginTime.get('meridiem'));\r\n    }\r\n\r\n    if (beginDateTime.get('meridiem') == 1 && beginDateTime.get('hour') < 12) {\r\n        beginDateTime.assign('hour', beginDateTime.get('hour') + 12);\r\n    }\r\n\r\n    if (dateResult.end != null || timeResult.end != null) {\r\n        \r\n        var endDate   = dateResult.end == null ? dateResult.start : dateResult.end;            \r\n        var endTime   = timeResult.end == null ? timeResult.start : timeResult.end;\r\n\r\n        var endDateTime = endDate.clone();\r\n        endDateTime.assign('hour', endTime.get('hour'));\r\n        endDateTime.assign('minute', endTime.get('minute'));\r\n        endDateTime.assign('second', endTime.get('second'));\r\n        \r\n        if (endTime.isCertain('meridiem')) {\r\n            endDateTime.assign('meridiem', endTime.get('meridiem'));\r\n        } else if (beginTime.get('meridiem') != null) {\r\n            endDateTime.imply('meridiem', endTime.get('meridiem'));\r\n        }\r\n        \r\n        if (dateResult.end == null && endDateTime.date().getTime() < beginDateTime.date().getTime()) {\r\n            // Ex. 9pm - 1am\r\n            if (endDateTime.isCertain('day')) {\r\n                endDateTime.assign('day', endDateTime.get('day') + 1);\r\n            } else {\r\n                endDateTime.imply('day', endDateTime.get('day') + 1);\r\n            }\r\n        }\r\n\r\n        dateResult.end = endDateTime;\r\n    }\r\n\r\n    dateResult.start = beginDateTime;    \r\n\r\n    var startIndex = Math.min(dateResult.index, timeResult.index);\r\n    var endIndex = Math.max(\r\n            dateResult.index + dateResult.text.length, \r\n            timeResult.index + timeResult.text.length);\r\n    \r\n    dateResult.index = startIndex;\r\n    dateResult.text  = text.substring(startIndex, endIndex);\r\n\r\n    for (var tag in timeResult.tags) {\r\n        dateResult.tags[tag] = true;\r\n    }\r\n    dateResult.tags['FRMergeDateAndTimeRefiner'] = true;\r\n    return dateResult;\r\n}\r\n\r\nexports.Refiner = function FRMergeDateTimeRefiner() {\r\n    Refiner.call(this);\r\n\r\n\r\n    this.refine = function(text, results, opt) { \r\n\r\n        if (results.length < 2) return results;\r\n\r\n        var mergedResult = [];\r\n        var currResult = null;\r\n        var prevResult = null;\r\n\r\n        for (var i = 1; i < results.length; i++) {\r\n\r\n            currResult = results[i];\r\n            prevResult = results[i-1];\r\n            \r\n            if (isDateOnly(prevResult) && isTimeOnly(currResult) \r\n                    && isAbleToMerge(text, prevResult, currResult)) {\r\n                \r\n                prevResult = mergeResult(text, prevResult, currResult);\r\n                currResult = null;\r\n                i += 1;\r\n                \r\n            } else if (isDateOnly(currResult) && isTimeOnly(prevResult)\r\n                    && isAbleToMerge(text, prevResult, currResult)) {\r\n                \r\n                prevResult = mergeResult(text, currResult, prevResult);\r\n                currResult = null;\r\n                i += 1;\r\n            }\r\n            \r\n            mergedResult.push(prevResult);\r\n        }\r\n\r\n        if (currResult != null) {\r\n            mergedResult.push(currResult);\r\n        }\r\n\r\n        return mergedResult;\r\n    }\r\n}","/*\n  \n*/\nvar ENMergeDateRangeRefiner = require('../EN/ENMergeDateRangeRefiner').Refiner;\n\nexports.Refiner = function DEMergeDateRangeRefiner() {\n    ENMergeDateRangeRefiner.call(this);\n\n    this.pattern = function () {\n        return /^\\s*(bis(?:\\s*(?:am|zum))?|\\-)\\s*$/i\n    };\n};\n","/*\n    \n*/\nvar ParsedComponents = require('../../result').ParsedComponents;\nvar Refiner = require('../refiner').Refiner;\n\n\n\nvar PATTERN = new RegExp(\"^\\\\s*(T|um|am|,|-)?\\\\s*$\");\n\nfunction isDateOnly(result) {\n    return !result.start.isCertain('hour');\n}\n    \nfunction isTimeOnly(result) {\n    return !result.start.isCertain('month') && !result.start.isCertain('weekday');\n}\n\n\nfunction isAbleToMerge(text, prevResult, curResult) {\n    var textBetween = text.substring(prevResult.index + prevResult.text.length, curResult.index);\n    return textBetween.match(PATTERN);\n}\n\nfunction mergeResult(text, dateResult, timeResult){\n\n    var beginDate = dateResult.start;\n    var beginTime = timeResult.start;\n        \n    var beginDateTime = beginDate.clone();\n    beginDateTime.assign('hour', beginTime.get('hour'));\n    beginDateTime.assign('minute', beginTime.get('minute'));\n    beginDateTime.assign('second', beginTime.get('second'));\n        \n    if (beginTime.isCertain('meridiem')) {\n        beginDateTime.assign('meridiem', beginTime.get('meridiem'));\n    } else if (\n        beginTime.get('meridiem') !== undefined &&\n        beginDateTime.get('meridiem') === undefined\n    ) {\n        beginDateTime.imply('meridiem', beginTime.get('meridiem'));\n    }\n\n    if (beginDateTime.get('meridiem') == 1 && beginDateTime.get('hour') < 12) {\n        beginDateTime.assign('hour', beginDateTime.get('hour') + 12);\n    }\n\n    if (dateResult.end != null || timeResult.end != null) {\n        \n        var endDate   = dateResult.end == null ? dateResult.start : dateResult.end;            \n        var endTime   = timeResult.end == null ? timeResult.start : timeResult.end;\n\n        var endDateTime = endDate.clone();\n        endDateTime.assign('hour', endTime.get('hour'));\n        endDateTime.assign('minute', endTime.get('minute'));\n        endDateTime.assign('second', endTime.get('second'));\n        \n        if (endTime.isCertain('meridiem')) {\n            endDateTime.assign('meridiem', endTime.get('meridiem'));\n        } else if (beginTime.get('meridiem') != null) {\n            endDateTime.imply('meridiem', endTime.get('meridiem'));\n        }\n        \n        if (dateResult.end == null && endDateTime.date().getTime() < beginDateTime.date().getTime()) {\n            // Ex. 9pm - 1am\n            if (endDateTime.isCertain('day')) {\n                endDateTime.assign('day', endDateTime.get('day') + 1);\n            } else {\n                endDateTime.imply('day', endDateTime.get('day') + 1);\n            }\n        }\n\n        dateResult.end = endDateTime;\n    }\n\n    dateResult.start = beginDateTime;    \n\n    var startIndex = Math.min(dateResult.index, timeResult.index);\n    var endIndex = Math.max(\n            dateResult.index + dateResult.text.length, \n            timeResult.index + timeResult.text.length);\n    \n    dateResult.index = startIndex;\n    dateResult.text  = text.substring(startIndex, endIndex);\n\n    for (var tag in timeResult.tags) {\n        dateResult.tags[tag] = true;\n    }\n    dateResult.tags['DEMergeDateAndTimeRefiner'] = true;\n    return dateResult;\n}\n\nexports.Refiner = function DEMergeDateTimeRefiner() {\n    Refiner.call(this);\n\n\n    this.refine = function(text, results, opt) { \n\n        if (results.length < 2) return results;\n\n        var mergedResult = [];\n        var currResult = null;\n        var prevResult = null;\n\n        for (var i = 1; i < results.length; i++) {\n\n            currResult = results[i];\n            prevResult = results[i-1];\n            \n            if (isDateOnly(prevResult) && isTimeOnly(currResult) \n                    && isAbleToMerge(text, prevResult, currResult)) {\n                \n                prevResult = mergeResult(text, prevResult, currResult);\n                currResult = null;\n                i += 1;\n                \n            } else if (isDateOnly(currResult) && isTimeOnly(prevResult)\n                    && isAbleToMerge(text, prevResult, currResult)) {\n                \n                prevResult = mergeResult(text, currResult, prevResult);\n                currResult = null;\n                i += 1;\n            }\n            \n            mergedResult.push(prevResult);\n        }\n\n        if (currResult != null) {\n            mergedResult.push(currResult);\n        }\n\n        return mergedResult;\n    }\n}","/*\n    ISO 8601\n    http://www.w3.org/TR/NOTE-datetime\n    - YYYY-MM-DD\n    - YYYY-MM-DDThh:mmTZD\n    - YYYY-MM-DDThh:mm:ssTZD\n    - YYYY-MM-DDThh:mm:ss.sTZD \n    - TZD = (Z or +hh:mm or -hh:mm)\n*/\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp('(\\\\W|^)' \n            + '([0-9]{4})\\\\-([0-9]{1,2})\\\\-([0-9]{1,2})'\n            + '(?:T' //..\n                + '([0-9]{1,2}):([0-9]{1,2})' // hh:mm\n                + '(?::([0-9]{1,2})(?:\\\\.(\\\\d{1,4}))?)?' // :ss.s\n                + '(?:Z|([+-]\\\\d{2}):?(\\\\d{2})?)?' // TZD (Z or ±hh:mm or ±hhmm or ±hh)\n            + ')?'  //..\n            + '(?=\\\\W|$)', 'i');\n\nvar YEAR_NUMBER_GROUP = 2;\nvar MONTH_NUMBER_GROUP = 3;\nvar DATE_NUMBER_GROUP  = 4;\nvar HOUR_NUMBER_GROUP  = 5;\nvar MINUTE_NUMBER_GROUP = 6;\nvar SECOND_NUMBER_GROUP = 7;\nvar MILLISECOND_NUMBER_GROUP = 8;\nvar TZD_HOUR_OFFSET_GROUP = 9;\nvar TZD_MINUTE_OFFSET_GROUP = 10;\n\nexports.Parser = function ENISOFormatParser(){\n    Parser.apply(this, arguments);\n    \n    this.pattern = function() { return PATTERN; }\n    \n    this.extract = function(text, ref, match, opt){ \n        \n        var text = match[0].substr(match[1].length);\n        var index = match.index + match[1].length;\n\n        var result = new ParsedResult({\n            text: text,\n            index: index,\n            ref: ref,\n        })\n        \n        result.start.assign('year', parseInt(match[YEAR_NUMBER_GROUP]));\n        result.start.assign('month', parseInt(match[MONTH_NUMBER_GROUP]));\n        result.start.assign('day', parseInt(match[DATE_NUMBER_GROUP]));\n\n        if (moment(result.start.get('month')) > 12 || moment(result.start.get('month')) < 1 ||\n            moment(result.start.get('day')) > 31 || moment(result.start.get('day')) < 1) {\n            return null;\n        }\n\n        if (match[HOUR_NUMBER_GROUP] != null) {\n            \n            result.start.assign('hour',\n                    parseInt(match[HOUR_NUMBER_GROUP]));\n            result.start.assign('minute',\n                    parseInt(match[MINUTE_NUMBER_GROUP]));\n\n            if (match[SECOND_NUMBER_GROUP] != null) {\n\n                result.start.assign('second',\n                        parseInt(match[SECOND_NUMBER_GROUP]));\n            }\n\n            if (match[MILLISECOND_NUMBER_GROUP] != null) {\n\n                result.start.assign('millisecond',\n                        parseInt(match[MILLISECOND_NUMBER_GROUP]));\n            }\n\n            if (match[TZD_HOUR_OFFSET_GROUP] == null) {\n\n                result.start.assign('timezoneOffset', 0);\n            } else {\n\n                var minuteOffset = 0;\n                var hourOffset = parseInt(match[TZD_HOUR_OFFSET_GROUP]);\n                if (match[TZD_MINUTE_OFFSET_GROUP] != null)\n                    minuteOffset = parseInt(match[TZD_MINUTE_OFFSET_GROUP]);\n\n                var offset = hourOffset * 60;\n                if (offset < 0) {\n                    offset -= minuteOffset;\n                } else {\n                    offset += minuteOffset;\n                }\n\n                result.start.assign('timezoneOffset', offset);\n            }\n        }\n        \n        result.tags['ENISOFormatParser'] = true;\n        return result;\n    };\n\n}\n\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/EN');\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(within|in)\\\\s*' +\n    '('+ util.INTEGER_WORDS_PATTERN + '|[0-9]+|an?(?:\\\\s*few)?|half(?:\\\\s*an?)?)\\\\s*' +\n    '(seconds?|min(?:ute)?s?|hours?|days?|weeks?|months?|years?)\\\\s*' +\n    '(?=\\\\W|$)', 'i'\n);\n\nvar STRICT_PATTERN = new RegExp('(\\\\W|^)' +\n    '(within|in)\\\\s*' +\n    '('+ util.INTEGER_WORDS_PATTERN + '|[0-9]+|an?)\\\\s*' +\n    '(seconds?|minutes?|hours?|days?)\\\\s*' +\n    '(?=\\\\W|$)', 'i'\n);\n\nexports.Parser = function ENDeadlineFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return this.isStrictMode()? STRICT_PATTERN : PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt){\n\n        var index = match.index + match[1].length;\n        var text  = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var num = match[3].toLowerCase();\n        if (util.INTEGER_WORDS[num] !== undefined) {\n            num = util.INTEGER_WORDS[num];\n        } else if (num === 'a' || num === 'an'){\n            num = 1;\n        } else if (num.match(/few/i)){\n            num = 3;\n        } else if (num.match(/half/i)) {\n            num = 0.5;\n        } else {\n            num = parseInt(num);\n        }\n\n        var date = moment(ref);\n        if (match[4].match(/day|week|month|year/i)) {\n\n            if (match[4].match(/day/i)) {\n                date.add(num, 'd');\n            } else if (match[4].match(/week/i)) {\n                date.add(num * 7, 'd');\n            } else if (match[4].match(/month/i)) {\n                date.add(num, 'month');\n            } else if (match[4].match(/year/i)) {\n                date.add(num, 'year');\n            }\n\n            result.start.assign('year', date.year());\n            result.start.assign('month', date.month() + 1);\n            result.start.assign('day', date.date());\n            return result;\n        }\n\n        if (match[4].match(/hour/i)) {\n\n            date.add(num, 'hour');\n\n        } else if (match[4].match(/min/i)) {\n\n            date.add(num, 'minute');\n\n        } else if (match[4].match(/second/i)) {\n\n            date.add(num, 'second');\n        }\n\n        result.start.imply('year', date.year());\n        result.start.imply('month', date.month() + 1);\n        result.start.imply('day', date.date());\n        result.start.assign('hour', date.hour());\n        result.start.assign('minute', date.minute());\n        result.start.assign('second', date.second());\n        result.tags['ENDeadlineFormatParser'] = true;\n        return result;\n    };\n};\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/EN');\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(next|last|past)\\\\s*' +\n    '('+ util.INTEGER_WORDS_PATTERN + '|[0-9]+|few|half(?:\\\\s*an?)?)?\\\\s*' +\n    '(seconds?|min(?:ute)?s?|hours?|days?|weeks?|months?|years?)(?=\\\\s*)' +\n    '(?=\\\\W|$)', 'i'\n);\n\nvar MODIFIER_WORD_GROUP = 2;\nvar MULTIPLIER_WORD_GROUP = 3;\nvar RELATIVE_WORD_GROUP = 4;\n\nexports.Parser = function ENRelativeDateFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; };\n\n    this.extract = function(text, ref, match, opt){\n\n        var index = match.index + match[1].length;\n        var modifier = match[MODIFIER_WORD_GROUP].toLowerCase().match(/^next/) ? 1 : -1;\n        var text  = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n        result.tags['ENRelativeDateFormatParser'] = true;\n\n        var num = match[MULTIPLIER_WORD_GROUP] === undefined ? '' : match[3].toLowerCase();\n        if (util.INTEGER_WORDS[num] !== undefined) {\n            num = util.INTEGER_WORDS[num];\n        } else if (num === ''){\n            num = 1;\n        } else if (num.match(/few/i)){\n            num = 3;\n        } else if (num.match(/half/i)) {\n            num = 0.5;\n        } else {\n            num = parseInt(num);\n        }\n\n        num *= modifier;\n\n        var date = moment(ref);\n        if (match[RELATIVE_WORD_GROUP].match(/day|week|month|year/i)) {\n\n            if (match[RELATIVE_WORD_GROUP].match(/day/i)) {\n                date.add(num, 'd');\n                result.start.assign('year', date.year());\n                result.start.assign('month', date.month() + 1);\n                result.start.assign('day', date.date());\n            } else if (match[RELATIVE_WORD_GROUP].match(/week/i)) {\n                date.add(num * 7, 'd');\n                // We don't know the exact date for next/last week so we imply\n                // them\n                result.start.imply('day', date.date());\n                result.start.imply('month', date.month() + 1);\n                result.start.imply('year', date.year());\n            } else if (match[RELATIVE_WORD_GROUP].match(/month/i)) {\n                date.add(num, 'month');\n                // We don't know the exact day for next/last month\n                result.start.imply('day', date.date());\n                result.start.assign('year', date.year());\n                result.start.assign('month', date.month() + 1);\n            } else if (match[RELATIVE_WORD_GROUP].match(/year/i)) {\n                date.add(num, 'year');\n                // We don't know the exact day for month on next/last year\n                result.start.imply('day', date.date());\n                result.start.imply('month', date.month() + 1);\n                result.start.assign('year', date.year());\n            }\n\n            return result;\n        }\n\n        if (match[RELATIVE_WORD_GROUP].match(/hour/i)) {\n\n            date.add(num, 'hour');\n            result.start.imply('minute', date.minute());\n            result.start.imply('second', date.second());\n\n        } else if (match[RELATIVE_WORD_GROUP].match(/min/i)) {\n\n            date.add(num, 'minute');\n            result.start.assign('minute', date.minute());\n            result.start.imply('second', date.second());\n\n        } else if (match[RELATIVE_WORD_GROUP].match(/second/i)) {\n\n            date.add(num, 'second');\n            result.start.assign('second', date.second());\n            result.start.assign('minute', date.minute());\n        }\n\n        result.start.assign('hour', date.hour());\n        result.start.assign('year', date.year());\n        result.start.assign('month', date.month() + 1);\n        result.start.assign('day', date.date());\n        return result;\n    };\n};\n","/*\n\n\n*/\n\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/EN');\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n        '(?:on\\\\s*?)?' +\n        '(?:(Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sun|Mon|Tue|Wed|Thu|Fri|Sat)\\\\s*,?\\\\s*)?' +\n        '(([0-9]{1,2})(?:st|nd|rd|th)?|' + util.ORDINAL_WORDS_PATTERN + ')' +\n        '(?:\\\\s*' +\n            '(?:to|\\\\-|\\\\–|until|through|till|\\\\s)\\\\s*' +\n            '(([0-9]{1,2})(?:st|nd|rd|th)?|' + util.ORDINAL_WORDS_PATTERN + ')' +\n        ')?\\\\s*(?:of)?\\\\s*' +\n        '(Jan(?:uary|\\\\.)?|Feb(?:ruary|\\\\.)?|Mar(?:ch|\\\\.)?|Apr(?:il|\\\\.)?|May|Jun(?:e|\\\\.)?|Jul(?:y|\\\\.)?|Aug(?:ust|\\\\.)?|Sep(?:tember|\\\\.)?|Oct(?:ober|\\\\.)?|Nov(?:ember|\\\\.)?|Dec(?:ember|\\\\.)?)' +\n        '(?:' +\n            ',?\\\\s*([0-9]{1,4}(?![^\\\\s]\\\\d))' +\n            '(\\\\s*(?:BE|AD|BC))?' +\n        ')?' +\n        '(?=\\\\W|$)', 'i'\n    );\n\nvar WEEKDAY_GROUP = 2;\nvar DATE_GROUP = 3;\nvar DATE_NUM_GROUP = 4;\nvar DATE_TO_GROUP = 5;\nvar DATE_TO_NUM_GROUP = 6;\nvar MONTH_NAME_GROUP = 7;\nvar YEAR_GROUP = 8;\nvar YEAR_BE_GROUP = 9;\n\nexports.Parser = function ENMonthNameLittleEndianParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var result = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index: match.index + match[1].length,\n            ref: ref\n        });\n\n        var month = match[MONTH_NAME_GROUP];\n        month = util.MONTH_OFFSET[month.toLowerCase()];\n\n        var day = match[DATE_NUM_GROUP] ?\n            parseInt(match[DATE_NUM_GROUP]):\n            util.ORDINAL_WORDS[match[DATE_GROUP].trim().replace('-', ' ').toLowerCase()];\n\n        var year = null;\n        if (match[YEAR_GROUP]) {\n            year = match[YEAR_GROUP];\n            year = parseInt(year);\n\n            if(match[YEAR_BE_GROUP]){\n\n                if (/BE/i.test(match[YEAR_BE_GROUP])) {\n                    // Buddhist Era\n                    year = year - 543;\n                } else if (/BC/i.test(match[YEAR_BE_GROUP])) {\n                    // Before Christ\n                    year = -year;\n                }\n\n            } else if (year < 10) {\n\n                // require single digit years to always have BC/AD\n                return null;\n\n            } else if (year < 100){\n\n                year = year + 2000;\n            }\n        }\n\n        if(year){\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.assign('year', year);\n        } else {\n\n            //Find the most appropriated year\n            var refMoment = moment(ref);\n            refMoment.month(month - 1);\n            refMoment.date(day);\n            refMoment.year(moment(ref).year());\n\n            var nextYear = refMoment.clone().add(1, 'y');\n            var lastYear = refMoment.clone().add(-1, 'y');\n            if( Math.abs(nextYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){\n                refMoment = nextYear;\n            }\n            else if( Math.abs(lastYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){\n                refMoment = lastYear;\n            }\n\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.imply('year', refMoment.year());\n        }\n\n        // Weekday component\n        if (match[WEEKDAY_GROUP]) {\n            var weekday = match[WEEKDAY_GROUP];\n            weekday = util.WEEKDAY_OFFSET[weekday.toLowerCase()]\n            result.start.assign('weekday', weekday);\n        }\n\n        // Text can be 'range' value. Such as '12 - 13 January 2012'\n        if (match[DATE_TO_GROUP]) {\n            var endDate = match[DATE_TO_NUM_GROUP] ?\n                parseInt(match[DATE_TO_NUM_GROUP]):\n                util.ORDINAL_WORDS[match[DATE_TO_GROUP].trim().replace('-', ' ').toLowerCase()];\n\n            result.end = result.start.clone();\n            result.end.assign('day', endDate);\n        }\n\n        result.tags['ENMonthNameLittleEndianParser'] = true;\n        return result;\n    };\n};\n","/*\n\n    The parser for parsing US's date format that begin with month's name.\n\n    EX.\n        - January 13\n        - January 13, 2012\n        - January 13 - 15, 2012\n        - Tuesday, January 13, 2012\n\n    Watch out for:\n        - January 12:00\n        - January 12.44\n        - January 1222344\n*/\n\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/EN');\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:' +\n        '(?:on\\\\s*?)?' +\n        '(Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sun\\\\.?|Mon\\\\.?|Tue\\\\.?|Wed\\\\.?|Thu\\\\.?|Fri\\\\.?|Sat\\\\.?)' +\n    '\\\\s*,?\\\\s*)?' +\n    '(Jan\\\\.?|January|Feb\\\\.?|February|Mar\\\\.?|March|Apr\\\\.?|April|May\\\\.?|Jun\\\\.?|June|Jul\\\\.?|July|Aug\\\\.?|August|Sep\\\\.?|Sept\\\\.?|September|Oct\\\\.?|October|Nov\\\\.?|November|Dec\\\\.?|December)' +\n    '\\\\s*' +\n    '(([0-9]{1,2})(?:st|nd|rd|th)?|' + util.ORDINAL_WORDS_PATTERN +')\\\\s*' +\n    '(?:' +\n        '(?:to|\\\\-)\\\\s*' +\n        '(([0-9]{1,2})(?:st|nd|rd|th)?| ' + util.ORDINAL_WORDS_PATTERN + ')\\\\s*' +\n    ')?' +\n    '(?:' +\n        '\\\\s*,?\\\\s*(?:([0-9]{4})\\\\s*(BE|AD|BC)?|([0-9]{1,4})\\\\s*(AD|BC))\\\\s*' +\n    ')?' +\n    '(?=\\\\W|$)(?!\\\\:\\\\d)', 'i');\n\nvar WEEKDAY_GROUP = 2;\nvar MONTH_NAME_GROUP = 3;\nvar DATE_GROUP = 4;\nvar DATE_NUM_GROUP = 5;\nvar DATE_TO_GROUP = 6;\nvar DATE_TO_NUM_GROUP = 7;\nvar YEAR_GROUP = 8;\nvar YEAR_BE_GROUP = 9;\nvar YEAR_GROUP2 = 10;\nvar YEAR_BE_GROUP2 = 11;\n\nexports.Parser = function ENMonthNameMiddleEndianParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var result = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index: match.index + match[1].length,\n            ref: ref,\n        });\n\n\n        var month = match[MONTH_NAME_GROUP];\n        month = util.MONTH_OFFSET[month.toLowerCase()];\n        var day = match[DATE_NUM_GROUP] ?\n            parseInt(match[DATE_NUM_GROUP]) :\n            util.ORDINAL_WORDS[match[DATE_GROUP].trim().replace('-', ' ').toLowerCase()];\n\n        var year = null;\n        if (match[YEAR_GROUP] || match[YEAR_GROUP2]) {\n            year = match[YEAR_GROUP] || match[YEAR_GROUP2];\n            year = parseInt(year);\n\n            var yearBE = match[YEAR_BE_GROUP] || match[YEAR_BE_GROUP2];\n            if (yearBE) {\n                if (/BE/i.test(yearBE)) {\n                    // Buddhist Era\n                    year = year - 543;\n                } else if (/BC/i.test(yearBE)) {\n                    // Before Christ\n                    year = -year;\n                }\n            } else if (year < 100){\n\n                year = year + 2000;\n            }\n        }\n\n        if(year){\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.assign('year', year);\n        } else {\n\n            //Find the most appropriated year\n            var refMoment = moment(ref);\n            refMoment.month(month - 1);\n            refMoment.date(day);\n\n            var nextYear = refMoment.clone().add(1, 'y');\n            var lastYear = refMoment.clone().add(-1, 'y');\n            if( Math.abs(nextYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){\n                refMoment = nextYear;\n            }\n            else if( Math.abs(lastYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){\n                refMoment = lastYear;\n            }\n\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.imply('year', refMoment.year());\n        }\n\n        // Weekday component\n        if (match[WEEKDAY_GROUP]) {\n            var weekday = match[WEEKDAY_GROUP];\n            weekday = util.WEEKDAY_OFFSET[weekday.toLowerCase()]\n            result.start.assign('weekday', weekday);\n        }\n\n        // Text can be 'range' value. Such as 'January 12 - 13, 2012'\n        if (match[DATE_TO_GROUP]) {\n            var endDate = match[DATE_TO_NUM_GROUP] ?\n                endDate = parseInt(match[DATE_TO_NUM_GROUP]) :\n                util.ORDINAL_WORDS[match[DATE_TO_GROUP].replace('-', ' ').trim().toLowerCase()];\n\n            result.end = result.start.clone();\n            result.end.assign('day', endDate);\n        }\n\n        result.tags['ENMonthNameMiddleEndianParser'] = true;\n        return result;\n    }\n};","/*\n    \n    The parser for parsing month name and year.\n    \n    EX. \n        - January\n        - January 2012\n        - January, 2012\n*/\n\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/EN');\n\nvar PATTERN = new RegExp('(^|\\\\D\\\\s+|[^\\\\w\\\\s])' +\n    '(Jan\\\\.?|January|Feb\\\\.?|February|Mar\\\\.?|March|Apr\\\\.?|April|May\\\\.?|Jun\\\\.?|June|Jul\\\\.?|July|Aug\\\\.?|August|Sep\\\\.?|Sept\\\\.?|September|Oct\\\\.?|October|Nov\\\\.?|November|Dec\\\\.?|December)' + \n    '\\\\s*' +\n    '(?:' +\n        '[,-]?\\\\s*([0-9]{4})(\\\\s*BE|AD|BC)?' +\n    ')?' +\n    '(?=[^\\\\s\\\\w]|\\\\s+[^0-9]|\\\\s+$|$)', 'i');\n\nvar MONTH_NAME_GROUP = 2;\nvar YEAR_GROUP = 3;\nvar YEAR_BE_GROUP = 4;\n\nexports.Parser = function ENMonthNameParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n    \n    this.extract = function(text, ref, match, opt){\n        var result = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index: match.index + match[1].length,\n            ref: ref,\n        });\n\n        \n        var month = match[MONTH_NAME_GROUP];\n        month = util.MONTH_OFFSET[month.toLowerCase()];\n\n        var day = 1;\n\n        var year = null;\n        if (match[YEAR_GROUP]) {\n            year = match[YEAR_GROUP];\n            year = parseInt(year);\n\n            if(match[YEAR_BE_GROUP]){\n                if (match[YEAR_BE_GROUP].match(/BE/)) {\n                    // Buddhist Era\n                    year = year - 543;\n                } else if (match[YEAR_BE_GROUP].match(/BC/)) {\n                    // Before Christ\n                    year = -year;\n                }\n\n            } else if (year < 100){ \n\n                year = year + 2000;\n            }\n        }\n\n        if(year){\n            result.start.imply('day', day);\n            result.start.assign('month', month);\n            result.start.assign('year', year);\n        } else {\n            \n            //Find the most appropriated year\n            var refMoment = moment(ref);\n            refMoment.month(month - 1);\n            refMoment.date(day);\n\n            var nextYear = refMoment.clone().add(1, 'y');\n            var lastYear = refMoment.clone().add(-1, 'y');\n            if( Math.abs(nextYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){  \n                refMoment = nextYear;\n            }\n            else if( Math.abs(lastYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){ \n                refMoment = lastYear;\n            }\n\n            result.start.imply('day', day);\n            result.start.assign('month', month);\n            result.start.imply('year', refMoment.year());\n        }\n\n        result.tags['ENMonthNameParser'] = true;\n        return result;\n    }\n}\n","/*\n    Date format with slash \"/\" (also \"-\" and \".\") between numbers\n    - Tuesday 11/3/2015\n    - 11/3/2015\n    - 11/3\n*/\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:' +\n        '(?:on\\\\s*?)?' +\n        '((?:sun|mon|tues?|wed(?:nes)?|thu(?:rs?)?|fri|sat(?:ur)?)(?:day)?)' +\n        '\\\\s*\\\\,?\\\\s*' +\n    ')?' +\n    '([0-3]{0,1}[0-9]{1})[\\\\/\\\\.\\\\-]([0-3]{0,1}[0-9]{1})' +\n    '(?:' +\n        '[\\\\/\\\\.\\\\-]' +\n        '([0-9]{4}\\s*\\,?\\s*|[0-9]{2}\\s*\\,?\\s*)' +\n    ')?' +\n    '(\\\\W|$)', 'i');\n\nvar DAYS_OFFSET = { 'sunday': 0, 'sun': 0, 'monday': 1, 'mon': 1,'tuesday': 2, 'wednesday': 3, 'wed': 3,\n    'thursday': 4, 'thur': 4,'friday': 5, 'fri': 5,'saturday': 6, 'sat': 6,}\n\n\nvar OPENNING_GROUP = 1;\nvar ENDING_GROUP = 6;\n\nvar WEEKDAY_GROUP = 2;\nvar MONTH_GROUP = 3;\nvar DAY_GROUP = 4;\nvar YEAR_GROUP = 5;\n\nexports.Parser = function ENSlashDateFormatParser(argument) {\n    Parser.apply(this, arguments);\n\n    this.pattern = function () { return PATTERN; };\n    this.extract = function(text, ref, match, opt){\n\n        if(match[OPENNING_GROUP] == '/' || match[ENDING_GROUP] == '/') {\n            // Long skip, if there is some overlapping like:\n            // XX[/YY/ZZ]\n            // [XX/YY/]ZZ\n            match.index += match[0].length\n            return;\n        }\n\n        var index = match.index + match[OPENNING_GROUP].length;\n        var text = match[0].substr(match[OPENNING_GROUP].length, match[0].length - match[ENDING_GROUP].length);\n\n\n        var result = new ParsedResult({\n            text: text,\n            index: index,\n            ref: ref,\n        });\n\n        if(text.match(/^\\d\\.\\d$/)) return;\n        if(text.match(/^\\d\\.\\d{1,2}\\.\\d{1,2}$/)) return;\n\n        // MM/dd -> OK\n        // MM.dd -> NG\n        if(!match[YEAR_GROUP] && match[0].indexOf('/') < 0) return;\n\n        var date = null;\n        var year = match[YEAR_GROUP] || moment(ref).year() + '';\n        var month = match[MONTH_GROUP];\n        var day   = match[DAY_GROUP];\n\n        month = parseInt(month);\n        day  = parseInt(day);\n        year = parseInt(year);\n\n        if(month < 1 || month > 12) {\n            if(month > 12) {\n                // dd/mm/yyyy date format if day looks like a month, and month\n                // looks like a day.\n                if (day >= 1 && day <= 12 && month >= 13 && month <= 31) {\n                    // unambiguous\n                    var tday = month;\n                    month = day;\n                    day = tday;\n                }\n                else {\n                    // both month and day are <= 12\n                    return null;\n                }\n            }\n        }\n        if(day < 1 || day > 31) return null;\n\n        if(year < 100){\n            if (year > 50) {\n                year = year + 1900;\n            } else {\n                year = year + 2000;\n            }\n        }\n\n        result.start.assign('day', day);\n        result.start.assign('month', month);\n        result.start.assign('year', year);\n\n        //Day of week\n        if(match[WEEKDAY_GROUP]) {\n            result.start.assign('weekday', DAYS_OFFSET[match[WEEKDAY_GROUP].toLowerCase()]);\n        }\n\n        result.tags['ENSlashDateFormatParser'] = true;\n        return result;\n    };\n};\n","/*\n    Date format with slash \"/\" between numbers like ENSlashDateFormatParser,\n    but this parser expect year before month and date. \n    - YYYY/MM/DD\n    - YYYY-MM-DD\n    - YYYY.MM.DD\n*/\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp('(\\\\W|^)' \n            + '([0-9]{4})[\\\\-\\\\.\\\\/]([0-9]{1,2})[\\\\-\\\\.\\\\/]([0-9]{1,2})'\n            + '(?=\\\\W|$)', 'i');\n\nvar YEAR_NUMBER_GROUP = 2;\nvar MONTH_NUMBER_GROUP = 3;\nvar DATE_NUMBER_GROUP  = 4;\n\nexports.Parser = function ENSlashDateFormatStartWithYearParser(){\n    Parser.apply(this, arguments);\n    \n    this.pattern = function() { return PATTERN; }\n    \n    this.extract = function(text, ref, match, opt){\n\n        var text = match[0].substr(match[1].length);\n        var index = match.index + match[1].length;\n\n        var result = new ParsedResult({\n            text: text,\n            index: index,\n            ref: ref,\n        })\n        \n        result.start.assign('year', parseInt(match[YEAR_NUMBER_GROUP]));\n        result.start.assign('month', parseInt(match[MONTH_NUMBER_GROUP]));\n        result.start.assign('day', parseInt(match[DATE_NUMBER_GROUP]));\n\n        if (moment(result.start.get('month')) > 12 || moment(result.start.get('month')) < 1 ||\n            moment(result.start.get('day')) > 31 || moment(result.start.get('day')) < 1) {\n            return null;\n        }\n        \n        result.tags['ENDateFormatParser'] = true;\n        return result;\n    };\n}\n","/*\n    Month/Year date format with slash \"/\" (also \"-\" and \".\") between numbers \n    - 11/05\n    - 06/2005\n*/\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp('(^|[^\\\\d/]\\\\s+|[^\\\\w\\\\s])' +\n    '([0-9]|0[1-9]|1[012])/([0-9]{4})' + \n    '([^\\\\d/]|$)', 'i');\n\nvar OPENNING_GROUP = 1;\nvar ENDING_GROUP = 4;\n\nvar MONTH_GROUP = 2;\nvar YEAR_GROUP = 3;\n\nexports.Parser = function ENSlashMonthFormatParser(argument) {\n    Parser.apply(this, arguments);\n\n    this.pattern = function () { return PATTERN; };\n    this.extract = function(text, ref, match, opt){\n        \n        var index = match.index + match[OPENNING_GROUP].length;\n        var text = match[0].substr(match[OPENNING_GROUP].length, match[0].length - (1 + match[ENDING_GROUP].length)).trim();\n\n        var result = new ParsedResult({\n            text: text,\n            index: index,\n            ref: ref,\n        });\n\n        var date = null;\n        var year = match[YEAR_GROUP] ;\n        var month = match[MONTH_GROUP];\n        var day   = 1;\n        \n        month = parseInt(month);\n        year = parseInt(year);\n\n        result.start.imply('day', day);\n        result.start.assign('month', month);\n        result.start.assign('year', year);\n\n        result.tags['ENSlashMonthFormatParser'] = true;\n        return result;\n    };\n};\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/EN');\n\nvar PATTERN = new RegExp('' +\n    '(\\\\W|^)' +\n    '(?:within\\\\s*)?' +\n    '(' + util.INTEGER_WORDS_PATTERN + '|[0-9]+|an?(?:\\\\s*few)?|half(?:\\\\s*an?)?)\\\\s*' +\n    '(seconds?|min(?:ute)?s?|hours?|weeks?|days?|months?|years?)\\\\s*' +\n    '(?:ago|before|earlier)(?=(?:\\\\W|$))', 'i');\n\nvar STRICT_PATTERN = new RegExp('' +\n    '(\\\\W|^)' +\n    '(?:within\\\\s*)?' +\n    '([0-9]+|an?)\\\\s*' +\n    '(seconds?|minutes?|hours?|days?)\\\\s*' +\n    'ago(?=(?:\\\\W|$))', 'i');\n\nexports.Parser = function ENTimeAgoFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return this.isStrictMode()? STRICT_PATTERN : PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt){\n\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\n\n        var text = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n        index = match.index + match[1].length;\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var num = match[2].toLowerCase() ;\n        if (util.INTEGER_WORDS[num] !== undefined) {\n            num = util.INTEGER_WORDS[num];\n        } else if(num === 'a' || num === 'an'){\n            num = 1;\n        } else if (num.match(/few/)) {\n            num = 3;\n        } else if (num.match(/half/)) {\n            num = 0.5;\n        } else {\n            num = parseInt(num);\n        }\n\n        var date = moment(ref);\n\n        if (match[3].match(/hour|min|second/i)) {\n            if (match[3].match(/hour/i)) {\n\n                date.add(-num, 'hour');\n\n            } else if (match[3].match(/min/i)) {\n\n                date.add(-num, 'minute');\n\n            } else if (match[3].match(/second/i)) {\n\n                date.add(-num, 'second');\n            }\n\n            result.start.imply('day', date.date());\n            result.start.imply('month', date.month() + 1);\n            result.start.imply('year', date.year());\n            result.start.assign('hour', date.hour());\n            result.start.assign('minute', date.minute());\n            result.start.assign('second', date.second());\n            result.tags['ENTimeAgoFormatParser'] = true;\n            return result;\n        }\n\n        if (match[3].match(/week/i)) {\n            date.add(-num, 'week');\n\n            result.start.imply('day', date.date());\n            result.start.imply('month', date.month() + 1);\n            result.start.imply('year', date.year());\n            result.start.imply('weekday', date.day());\n            return result;\n        }\n\n        if (match[3].match(/day/i)) {\n            date.add(-num, 'd');\n        }\n\n        if (match[3].match(/month/i)) {\n            date.add(-num, 'month');\n        }\n\n        if (match[3].match(/year/i)) {\n\n            date.add(-num, 'year');\n        }\n\n        result.start.assign('day', date.date());\n        result.start.assign('month', date.month() + 1);\n        result.start.assign('year', date.year());\n        return result;\n\n    };\n}\n","/*\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar ParsedComponents = require('../../result').ParsedComponents;\n\nvar FIRST_REG_PATTERN  = new RegExp(\"(^|\\\\s|T)\" +\n    \"(?:(?:at|from)\\\\s*)??\" + \n    \"(\\\\d{1,4}|noon|midnight)\" + \n    \"(?:\" + \n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" + \n        \"(?:\" + \n            \"(?:\\\\:|\\\\：)(\\\\d{2})\" + \n        \")?\" + \n    \")?\" + \n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" + \n    \"(?=\\\\W|$)\", 'i');\n\n\nvar SECOND_REG_PATTERN = new RegExp(\"^\\\\s*\" + \n    \"(\\\\-|\\\\–|\\\\~|\\\\〜|to|\\\\?)\\\\s*\" + \n    \"(\\\\d{1,4})\" +\n    \"(?:\" + \n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" + \n        \"(?:\" + \n            \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" + \n        \")?\" + \n    \")?\" + \n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" + \n    \"(?=\\\\W|$)\", 'i');\n\nvar HOUR_GROUP    = 2;\nvar MINUTE_GROUP  = 3;\nvar SECOND_GROUP  = 4;\nvar AM_PM_HOUR_GROUP = 5;\n\n\nexports.Parser = function ENTimeExpressionParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return FIRST_REG_PATTERN; }\n    \n    this.extract = function(text, ref, match, opt){ \n        \n        // This pattern can be overlaped Ex. [12] AM, 1[2] AM\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\n        var refMoment = moment(ref);\n        var result = new ParsedResult();\n        result.ref = ref;\n        result.index = match.index + match[1].length;\n        result.text  = match[0].substring(match[1].length);\n        result.tags['ENTimeExpressionParser'] = true;\n\n        result.start.imply('day',   refMoment.date());\n        result.start.imply('month', refMoment.month()+1);\n        result.start.imply('year',  refMoment.year());\n        \n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if(match[SECOND_GROUP] != null){ \n            var second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.start.assign('second', second);\n        }\n        \n        // ----- Hours\n        if (match[HOUR_GROUP].toLowerCase() == \"noon\"){\n            meridiem = 1; \n            hour = 12;\n        } else if (match[HOUR_GROUP].toLowerCase() == \"midnight\") {\n            meridiem = 0; \n            hour = 0;\n        } else {\n            hour = parseInt(match[HOUR_GROUP]);\n        }\n        \n        // ----- Minutes\n        if(match[MINUTE_GROUP] != null){ \n            minute = parseInt(match[MINUTE_GROUP]);\n        } else if(hour > 100) { \n            minute = hour%100;\n            hour   = parseInt(hour/100);\n        } \n        \n        if(minute >= 60) {\n            return null;\n        }\n\n        if(hour > 24) {\n            return null;\n        }\n        if (hour >= 12) { \n            meridiem = 1;\n        }\n\n        // ----- AM & PM  \n        if(match[AM_PM_HOUR_GROUP] != null) {\n            if(hour > 12) return null;\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if(ampm == \"a\"){\n                meridiem = 0; \n                if(hour == 12) hour = 0;\n            }\n            \n            if(ampm == \"p\"){\n                meridiem = 1; \n                if(hour != 12) hour += 12;\n            }\n        } \n\n        result.start.assign('hour', hour);\n        result.start.assign('minute', minute);\n\n        if (meridiem >= 0) {\n            result.start.assign('meridiem', meridiem);\n        } else {\n            if (hour < 12) {\n                result.start.imply('meridiem', 0);\n            } else {\n                result.start.imply('meridiem', 1);\n            }\n        }\n        \n        // ==============================================================\n        //                  Extracting the 'to' chunk\n        // ==============================================================\n        match = SECOND_REG_PATTERN.exec(text.substring(result.index + result.text.length));\n        if (!match) {\n            // Not accept number only result\n            if (result.text.match(/^\\d+$/)) { \n                return null;\n            }\n            return result;\n        }\n\n\n\n        // Pattern \"YY.YY -XXXX\" is more like timezone offset\n        if (match[0].match(/^\\s*(\\+|\\-)\\s*\\d{3,4}$/)) {\n            return result;\n        }\n\n        if(result.end == null){\n            result.end = new ParsedComponents(null, result.start.date());\n        }\n\n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if(match[SECOND_GROUP] != null){ \n            var second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.end.assign('second', second);\n        }\n\n        hour = parseInt(match[2]);\n        \n        // ----- Minute\n        if (match[MINUTE_GROUP]!= null) {\n            \n            minute = parseInt(match[MINUTE_GROUP]);\n            if(minute >= 60) return result;\n            \n        } else if (hour > 100) {\n\n            minute = hour%100;\n            hour   = parseInt(hour/100);\n        }\n\n        if(minute >= 60) {\n            return null;\n        }\n\n        if(hour > 24) {\n            return null;\n        }\n        if (hour >= 12) { \n            meridiem = 1;\n        }\n        \n        // ----- AM & PM \n        if (match[AM_PM_HOUR_GROUP] != null){\n\n            if (hour > 12) return null;\n\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if(ampm == \"a\"){\n                meridiem = 0; \n                if(hour == 12) {\n                    hour = 0;\n                    if (!result.end.isCertain('day')) {\n                        result.end.imply('day', result.end.get('day') + 1);\n                    }\n                }\n            }\n            \n            if(ampm == \"p\"){\n                meridiem = 1; \n                if(hour != 12) hour += 12;\n            }\n            \n            if (!result.start.isCertain('meridiem')) {\n                if (meridiem == 0) {\n                    \n                    result.start.imply('meridiem', 0);\n                    \n                    if (result.start.get('hour') == 12) {\n                        result.start.assign('hour', 0);\n                    }\n\n                } else {\n\n                    result.start.imply('meridiem', 1);\n                    \n                    if (result.start.get('hour') != 12) {\n                        result.start.assign('hour', result.start.get('hour') + 12); \n                    }\n                }\n            }\n        }\n\n        result.text = result.text + match[0];\n        result.end.assign('hour', hour);\n        result.end.assign('minute', minute);\n        if (meridiem >= 0) {\n            result.end.assign('meridiem', meridiem);\n        } else {\n            var startAtPM = result.start.isCertain('meridiem') && result.start.get('meridiem') == 1;\n            if (startAtPM && result.start.get('hour') > hour) {\n                // 10pm - 1 (am)\n                result.end.imply('meridiem', 0);\n\n            } else if (hour > 12) {\n                result.end.imply('meridiem', 1);\n            }\n        }\n\n        if (result.end.date().getTime() < result.start.date().getTime()) {\n            result.end.imply('day', result.end.get('day') + 1)\n        }\n        \n        return result;\n    }\n}\n","/*\n\n\n*/\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar DAYS_OFFSET = { 'sunday': 0, 'sun': 0, 'monday': 1, 'mon': 1,'tuesday': 2, 'tues':2, 'tue':2, 'wednesday': 3, 'wed': 3,\n    'thursday': 4, 'thurs':4, 'thur': 4, 'thu': 4,'friday': 5, 'fri': 5,'saturday': 6, 'sat': 6};\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' +\n    '(?:on\\\\s*?)?' +\n    '(?:(this|last|past|next)\\\\s*)?' +\n    '(' + Object.keys(DAYS_OFFSET).join('|') + ')' +\n    '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' +\n    '(?:\\\\s*(this|last|past|next)\\\\s*week)?' +\n    '(?=\\\\W|$)', 'i');\n\nvar PREFIX_GROUP = 2;\nvar WEEKDAY_GROUP = 3;\nvar POSTFIX_GROUP = 4;\n\n\nexports.updateParsedComponent = function updateParsedComponent(result, ref, offset, modifier) {\n\n    var startMoment = moment(ref);\n    var startMomentFixed = false;\n    var refOffset = startMoment.day();\n\n    if(modifier == 'last' || modifier == 'past') {\n        startMoment.day(offset - 7);\n        startMomentFixed = true;\n    } else if(modifier == 'next') {\n        startMoment.day(offset + 7);\n        startMomentFixed = true;\n    } else if(modifier == 'this') {\n        startMoment.day(offset);\n    } else {\n        if (Math.abs(offset - 7 - refOffset) < Math.abs(offset - refOffset)) {\n            startMoment.day(offset - 7);\n        } else if (Math.abs(offset + 7 - refOffset) < Math.abs(offset - refOffset)) {\n            startMoment.day(offset + 7);\n        } else {\n            startMoment.day(offset);\n        }\n    }\n\n    result.start.assign('weekday', offset);\n    if (startMomentFixed) {\n        result.start.assign('day', startMoment.date());\n        result.start.assign('month', startMoment.month() + 1);\n        result.start.assign('year', startMoment.year());\n    } else {\n        result.start.imply('day', startMoment.date());\n        result.start.imply('month', startMoment.month() + 1);\n        result.start.imply('year', startMoment.year());\n    }\n\n    return result;\n};\n\n\nexports.Parser = function ENWeekdayParser() {\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; };\n\n    this.extract = function(text, ref, match, opt){\n        var index = match.index + match[1].length;\n        var text = match[0].substr(match[1].length, match[0].length - match[1].length);\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\n        var offset = DAYS_OFFSET[dayOfWeek];\n        if(offset === undefined) {\n            return null;\n        }\n\n        var prefix = match[PREFIX_GROUP];\n        var postfix = match[POSTFIX_GROUP];\n        var norm = prefix || postfix;\n        norm = norm || '';\n        norm = norm.toLowerCase();\n\n        exports.updateParsedComponent(result, ref, offset, norm);\n        result.tags['ENWeekdayParser'] = true;\n\n        return result;\n    }\n};\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = /(\\W|^)(now|today|tonight|last\\s*night|(?:tomorrow|tmr|yesterday)\\s*|tomorrow|tmr|yesterday)(?=\\W|$)/i;\n\nexports.Parser = function ENCasualDateParser(){\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var text = match[0].substr(match[1].length);\n        var index = match.index + match[1].length;\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var refMoment = moment(ref);\n        var startMoment = refMoment.clone();\n        var lowerText = text.toLowerCase();\n\n        if(lowerText == 'tonight'){\n            // Normally means this coming midnight\n            result.start.imply('hour', 22);\n            result.start.imply('meridiem', 1);\n\n        } else if (/^tomorrow|^tmr/.test(lowerText)) {\n\n            // Check not \"Tomorrow\" on late night\n            if(refMoment.hour() > 1) {\n                startMoment.add(1, 'day');\n            }\n\n        } else if (/^yesterday/.test(lowerText)) {\n\n            startMoment.add(-1, 'day');\n\n        } else if(lowerText.match(/last\\s*night/)) {\n\n            result.start.imply('hour', 0);\n            if (refMoment.hour() > 6) {\n                startMoment.add(-1, 'day');\n            }\n\n        } else if (lowerText.match(\"now\")) {\n\n          result.start.imply('hour', refMoment.hour());\n          result.start.imply('minute', refMoment.minute());\n          result.start.imply('second', refMoment.second());\n          result.start.imply('millisecond', refMoment.millisecond());\n\n        }\n\n        result.start.assign('day', startMoment.date())\n        result.start.assign('month', startMoment.month() + 1)\n        result.start.assign('year', startMoment.year())\n        result.tags['ENCasualDateParser'] = true;\n        return result;\n    }\n}\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = /(\\W|^)((this)?\\s*(morning|afternoon|evening|noon))/i;\n\nvar TIME_MATCH = 4;\n\nexports.Parser = function ENCasualTimeParser(){\n\n    Parser.apply(this, arguments);\n\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var text = match[0].substr(match[1].length);\n        var index = match.index + match[1].length;\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        if(!match[TIME_MATCH]) TIME_MATCH = 3;\n\n        if (match[TIME_MATCH] == \"afternoon\") {\n\n            result.start.imply('hour', opt['afternoon'] ? opt['afternoon'] : 15);\n\n        } else if (match[TIME_MATCH] == \"evening\") {\n\n            result.start.imply('hour', opt['evening'] ? opt['evening'] : 18);\n\n        } else if (match[TIME_MATCH] == \"morning\") {\n\n            result.start.imply('hour', opt['morning'] ? opt['morning'] : 6);\n\n        } else if (match[TIME_MATCH] == \"noon\") {\n\n            result.start.imply('hour', opt['noon'] ? opt['noon'] : 12);\n        }\n\n        result.tags['ENCasualTimeParser'] = true;\n        return result;\n    };\n};\n","/*\n    \n    \n*/\n\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar util  = require('../../utils/JP'); \nvar PATTERN = /(?:(同|((昭和|平成)?([0-9０-９]{2,4})))年\\s*)?([0-9０-９]{1,2})月\\s*([0-9０-９]{1,2})日/i;\n  \nvar YEAR_GROUP        = 2;\nvar ERA_GROUP         = 3;\nvar YEAR_NUMBER_GROUP = 4;\nvar MONTH_GROUP       = 5;\nvar DAY_GROUP         = 6;\n\nexports.Parser = function JPStandardParser(){\n    Parser.apply(this, arguments);\n    \n    this.pattern = function() { return PATTERN; }\n    \n    this.extract = function(text, ref, match, opt){ \n\n        var startMoment = moment(ref);\n        var result = new ParsedResult({\n            text: match[0],\n            index: match.index,\n            ref: ref,\n        });\n        \n        var month = match[MONTH_GROUP];\n        month = util.toHankaku(month);\n        month = parseInt(month);\n\n        var day = match[DAY_GROUP];\n        day = util.toHankaku(day);\n        day = parseInt(day);\n\n        startMoment.set('date', day);\n        startMoment.set('month', month - 1);\n        result.start.assign('day', startMoment.date());\n        result.start.assign('month', startMoment.month() + 1);\n            \n        if (!match[YEAR_GROUP]) {\n            \n            //Find the most appropriated year\n            startMoment.year(moment(ref).year());\n            var nextYear = startMoment.clone().add(1, 'y');\n            var lastYear = startMoment.clone().add(-1, 'y');\n            if( Math.abs(nextYear.diff(moment(ref))) < Math.abs(startMoment.diff(moment(ref))) ){  \n                startMoment = nextYear;\n            }\n            else if( Math.abs(lastYear.diff(moment(ref))) < Math.abs(startMoment.diff(moment(ref))) ){ \n                startMoment = lastYear;\n            }\n\n            result.start.assign('day', startMoment.date());\n            result.start.assign('month', startMoment.month() + 1);\n            result.start.imply('year', startMoment.year());\n\n        } else if (match[YEAR_GROUP].match('同年')) {\n\n            result.start.assign('year', startMoment.year());\n\n        } else {\n            var year = match[YEAR_NUMBER_GROUP];\n            year = util.toHankaku(year);\n            year = parseInt(year);\n\n            if (match[ERA_GROUP] == '平成') {\n                year += 1988;\n            } else if (match[ERA_GROUP] == '昭和') {\n                year += 1925;\n            }\n\n            result.start.assign('year', year);\n        }\n        \n\n        result.tags['JPStandardParser'] = true;\n        return result;\n    };\n\n}\n\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\n/*\n  Valid patterns:\n  - esta mañana -> today in the morning\n  - esta tarde -> today in the afternoon/evening\n  - esta noche -> tonight\n  - ayer por la mañana -> yesterday in the morning\n  - ayer por la tarde -> yesterday in the afternoon/evening\n  - ayer por la noche -> yesterday at night\n  - mañana por la mañana -> tomorrow in the morning\n  - mañana por la tarde -> tomorrow in the afternoon/evening\n  - mañana por la noche -> tomorrow at night\n  - anoche -> tomorrow at night\n  - hoy -> today\n  - ayer -> yesterday\n  - mañana -> tomorrow\n */\nvar PATTERN = /(\\W|^)(ahora|esta\\s*(mañana|tarde|noche)|(ayer|mañana)\\s*por\\s*la\\s*(mañana|tarde|noche)|hoy|mañana|ayer|anoche)(?=\\W|$)/i;\n\nexports.Parser = function ESCasualDateParser(){\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var text = match[0].substr(match[1].length);\n        var index = match.index + match[1].length;\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var refMoment = moment(ref);\n        var startMoment = refMoment.clone();\n        var lowerText = text.toLowerCase().replace(/\\s+/g, ' ');\n\n        if(lowerText == 'mañana'){\n\n            // Check not \"Tomorrow\" on late night\n            if(refMoment.hour() > 1) {\n                startMoment.add(1, 'day');\n            }\n\n        } else if(lowerText == 'ayer') {\n\n            startMoment.add(-1, 'day');\n        }\n        else if(lowerText == 'anoche') {\n\n            result.start.imply('hour', 0);\n            if (refMoment.hour() > 6) {\n                startMoment.add(-1, 'day');\n            }\n\n        } else if (lowerText.match(\"esta\")) {\n\n            var secondMatch = match[3].toLowerCase();\n            if (secondMatch == \"tarde\") {\n\n                result.start.imply('hour', 18);\n\n            } else if (secondMatch == \"mañana\") {\n\n                result.start.imply('hour', 6);\n\n            } else if (secondMatch == \"noche\") {\n\n              // Normally means this coming midnight\n              result.start.imply('hour', 22);\n              result.start.imply('meridiem', 1);\n\n            }\n        } else if (lowerText.match(/por\\s*la/)) {\n\n            var firstMatch = match[4].toLowerCase();\n            if (firstMatch === 'ayer') {\n\n              startMoment.add(-1, 'day');\n\n            } else if (firstMatch === 'mañana') {\n\n              startMoment.add(1, 'day');\n\n            }\n\n            var secondMatch = match[5].toLowerCase();\n            if (secondMatch == \"tarde\") {\n\n                result.start.imply('hour', 18);\n\n            } else if (secondMatch == \"mañana\") {\n\n                result.start.imply('hour', 9);\n\n            } else if (secondMatch == \"noche\") {\n\n              // Normally means this coming midnight\n              result.start.imply('hour', 22);\n              result.start.imply('meridiem', 1);\n\n            }\n\n        } else if (lowerText.match(\"ahora\")) {\n\n          result.start.imply('hour', refMoment.hour());\n          result.start.imply('minute', refMoment.minute());\n          result.start.imply('second', refMoment.second());\n          result.start.imply('millisecond', refMoment.millisecond());\n\n        }\n\n        result.start.assign('day', startMoment.date())\n        result.start.assign('month', startMoment.month() + 1)\n        result.start.assign('year', startMoment.year())\n        result.tags['ESCasualDateParser'] = true;\n        return result;\n    }\n}\n","/*\n    \n    \n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = /今日|当日|昨日|明日|今夜|今夕|今晩|今朝/i;\n\nexports.Parser = function JPCasualDateParser(){\n    \n    Parser.apply(this, arguments);\n        \n    this.pattern = function() { return PATTERN; }\n    \n    this.extract = function(text, ref, match, opt){ \n        \n        var index = match.index;\n        var text = match[0];\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var refMoment = moment(ref);\n        var startMoment = refMoment.clone();\n\n        if(text == '今夜' || text == '今夕' || text == '今晩'){\n            // Normally means this coming midnight \n            result.start.imply('hour', 22);\n            result.start.imply('meridiem', 1);\n\n        } else if(text == '明日'){\n\n            // Check not \"Tomorrow\" on late night\n            if(refMoment.hour() > 4) {\n                startMoment.add(1, 'day');\n            }\n\n        } else if(text == '昨日') {\n\n            startMoment.add(-1, 'day');\n\n        } else if (text.match(\"今朝\")) {\n\n            result.start.imply('hour', 6);\n            result.start.imply('meridiem', 0);\n        }\n\n        result.start.assign('day', startMoment.date())\n        result.start.assign('month', startMoment.month() + 1)\n        result.start.assign('year', startMoment.year())\n        result.tags['JPCasualDateParser'] = true;\n        return result;\n    }\n}\n\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = /(\\W|^)hace\\s*([0-9]+|medi[oa]|una?)\\s*(minutos?|horas?|semanas?|d[ií]as?|mes(es)?|años?)(?=(?:\\W|$))/i;\n\nexports.Parser = function ESTimeAgoFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return PATTERN;\n    }\n\n    this.extract = function(text, ref, match, opt){\n\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\n\n        var text = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n        index = match.index + match[1].length;\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var num = parseInt(match[2]);\n        if (isNaN(num)) {\n          if (match[2].match(/medi/)) {\n            num = 0.5;\n          } else {\n            num = 1;\n          }\n        }\n\n        var date = moment(ref);\n\n        if (match[3].match(/hora/) || match[3].match(/minuto/)) {\n            if (match[3].match(/hora/)) {\n\n                date.add(-num, 'hour');\n\n            } else if (match[3].match(/minuto/)) {\n\n                date.add(-num, 'minute');\n            }\n\n            result.start.imply('day', date.date());\n            result.start.imply('month', date.month() + 1);\n            result.start.imply('year', date.year());\n            result.start.assign('hour', date.hour());\n            result.start.assign('minute', date.minute());\n            result.tags['ESTimeAgoFormatParser'] = true;\n            return result;\n        }\n\n        if (match[3].match(/semana/)) {\n            date.add(-num, 'week');\n\n            result.start.imply('day', date.date());\n            result.start.imply('month', date.month() + 1);\n            result.start.imply('year', date.year());\n            result.start.imply('weekday', date.day());\n            return result;\n        }\n\n        if (match[3].match(/d[ií]a/)) {\n            date.add(-num, 'd');\n        }\n\n        if (match[3].match(/mes/)) {\n            date.add(-num, 'month');\n        }\n\n        if (match[3].match(/año/)) {\n\n            date.add(-num, 'year');\n        }\n\n        result.start.assign('day', date.date());\n        result.start.assign('month', date.month() + 1);\n        result.start.assign('year', date.year());\n        return result;\n\n    };\n}\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = /(\\W|^)(dentro\\s*de|en)\\s*([0-9]+|medi[oa]|una?)\\s*(minutos?|horas?|d[ií]as?)\\s*(?=(?:\\W|$))/i;\n\nexports.Parser = function ESDeadlineFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var index = match.index + match[1].length;\n        var text  = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var num = parseInt(match[3]);\n        if (isNaN(num)) {\n          if (match[3].match(/medi/)) {\n            num = 0.5;\n          } else {\n            num = 1;\n          }\n        }\n\n        var date = moment(ref);\n        if (match[4].match(/d[ií]a/)) {\n            date.add(num, 'd');\n\n            result.start.assign('year', date.year());\n            result.start.assign('month', date.month() + 1);\n            result.start.assign('day', date.date());\n            return result;\n        }\n\n\n        if (match[4].match(/hora/)) {\n\n            date.add(num, 'hour');\n\n        } else if (match[4].match(/minuto/)) {\n\n            date.add(num, 'minute');\n        }\n\n        result.start.imply('year', date.year());\n        result.start.imply('month', date.month() + 1);\n        result.start.imply('day', date.date());\n        result.start.assign('hour', date.hour());\n        result.start.assign('minute', date.minute());\n        result.tags['ESDeadlineFormatParser'] = true;\n        return result;\n    };\n}\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar ParsedComponents = require('../../result').ParsedComponents;\n\nvar FIRST_REG_PATTERN  = new RegExp(\"(^|\\\\s|T)\" +\n    \"(?:(?:a las?|al?|desde|de)\\\\s*)?\" +\n    \"(\\\\d{1,4}|mediod[ií]a|medianoche)\" +\n    \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \"(?:\" +\n            \"(?:\\\\:|\\\\：)(\\\\d{2})\" +\n        \")?\" +\n    \")?\" +\n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" +\n    \"(?=\\\\W|$)\", 'i');\n\n\nvar SECOND_REG_PATTERN = new RegExp(\"^\\\\s*\" +\n    \"(\\\\-|\\\\–|\\\\~|\\\\〜|a(?:\\s*las)?|\\\\?)\\\\s*\" +\n    \"(\\\\d{1,4})\" +\n    \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \"(?:\" +\n            \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \")?\" +\n    \")?\" +\n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" +\n    \"(?=\\\\W|$)\", 'i');\n\nvar HOUR_GROUP    = 2;\nvar MINUTE_GROUP  = 3;\nvar SECOND_GROUP  = 4;\nvar AM_PM_HOUR_GROUP = 5;\n\nexports.Parser = function ESTimeExpressionParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return FIRST_REG_PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        // This pattern can be overlaped Ex. [12] AM, 1[2] AM\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\n        var refMoment = moment(ref);\n        var result = new ParsedResult();\n        result.ref = ref;\n        result.index = match.index + match[1].length;\n        result.text  = match[0].substring(match[1].length);\n        result.tags['ESTimeExpressionParser'] = true;\n\n        result.start.imply('day',   refMoment.date());\n        result.start.imply('month', refMoment.month()+1);\n        result.start.imply('year',  refMoment.year());\n\n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if(match[SECOND_GROUP] != null){\n            var second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.start.assign('second', second);\n        }\n\n        // ----- Hours\n        if (match[HOUR_GROUP].toLowerCase().match(/mediod/)){\n            meridiem = 1;\n            hour = 12;\n        } else if (match[HOUR_GROUP].toLowerCase() == \"medianoche\") {\n            meridiem = 0;\n            hour = 0;\n        } else {\n            hour = parseInt(match[HOUR_GROUP]);\n        }\n\n        // ----- Minutes\n        if(match[MINUTE_GROUP] != null){\n            minute = parseInt(match[MINUTE_GROUP]);\n        } else if(hour > 100) {\n            minute = hour%100;\n            hour   = parseInt(hour/100);\n        }\n\n        if(minute >= 60) {\n            return null;\n        }\n\n        if(hour > 24) {\n            return null;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        // ----- AM & PM\n        if(match[AM_PM_HOUR_GROUP] != null) {\n            if(hour > 12) return null;\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if(ampm == \"a\"){\n                meridiem = 0;\n                if(hour == 12) hour = 0;\n            }\n\n            if(ampm == \"p\"){\n                meridiem = 1;\n                if(hour != 12) hour += 12;\n            }\n        }\n        result.start.assign('hour', hour);\n        result.start.assign('minute', minute);\n        if (meridiem >= 0) {\n            result.start.assign('meridiem', meridiem);\n        }\n\n        // ==============================================================\n        //                  Extracting the 'to' chunk\n        // ==============================================================\n        match = SECOND_REG_PATTERN.exec(text.substring(result.index + result.text.length));\n        if (!match) {\n            // Not accept number only result\n            if (result.text.match(/^\\d+$/)) {\n                return null;\n            }\n            return result;\n        }\n\n\n\n        // Pattern \"YY.YY -XXXX\" is more like timezone offset\n        if (match[0].match(/^\\s*(\\+|\\-)\\s*\\d{3,4}$/)) {\n            return result;\n        }\n\n        if(result.end == null){\n            result.end = new ParsedComponents(null, result.start.date());\n        }\n\n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if(match[SECOND_GROUP] != null){\n            var second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.end.assign('second', second);\n        }\n\n        hour = parseInt(match[2]);\n\n        // ----- Minute\n        if (match[MINUTE_GROUP]!= null) {\n\n            minute = parseInt(match[MINUTE_GROUP]);\n            if(minute >= 60) return result;\n\n        } else if (hour > 100) {\n\n            minute = hour%100;\n            hour   = parseInt(hour/100);\n        }\n\n        if(minute >= 60) {\n            return null;\n        }\n\n        if(hour > 24) {\n            return null;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        // ----- AM & PM\n        if (match[AM_PM_HOUR_GROUP] != null){\n\n            if (hour > 12) return null;\n\n            if(match[AM_PM_HOUR_GROUP][0].toLowerCase() == \"a\"){\n                meridiem = 0;\n                if(hour == 12) {\n                    hour = 0;\n                    if (!result.end.isCertain('day')) {\n                        result.end.imply('day', result.end.get('day') + 1);\n                    }\n                }\n            }\n\n            if(match[AM_PM_HOUR_GROUP][0].toLowerCase() == \"p\"){\n                meridiem = 1;\n                if(hour != 12) hour += 12;\n            }\n\n            if (!result.start.isCertain('meridiem')) {\n                if (meridiem == 0) {\n\n                    result.start.imply('meridiem', 0);\n\n                    if (result.start.get('hour') == 12) {\n                        result.start.assign('hour', 0);\n                    }\n\n                } else {\n\n                    result.start.imply('meridiem', 1);\n\n                    if (result.start.get('hour') != 12) {\n                        result.start.assign('hour', result.start.get('hour') + 12);\n                    }\n                }\n            }\n\n        } else if(hour >= 12) {\n            meridiem = 1;\n        }\n\n        result.text = result.text + match[0];\n        result.end.assign('hour', hour);\n        result.end.assign('minute', minute);\n        if (meridiem >= 0) {\n            result.end.assign('meridiem', meridiem);\n        }\n\n        if (result.end.date().getTime() < result.start.date().getTime()) {\n            result.end.imply('day', result.end.get('day') + 1)\n        }\n\n        return result;\n    }\n}\n","/*\n\n\n*/\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar updateParsedComponent = require('../EN/ENWeekdayParser').updateParsedComponent;\n\nvar DAYS_OFFSET = { 'domingo': 0, 'dom': 0, 'lunes': 1, 'lun': 1, 'martes': 2, 'mar':2, 'miercoles': 3, 'miércoles': 3, 'mie': 3,\n    'jueves': 4, 'jue': 4, 'viernes': 5, 'vier': 5, 'sabado': 6, 'sábado': 6, 'sab': 6,}\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' +\n    '(?:(este|pasado|pr[oó]ximo)\\\\s*)?' +\n    '(' + Object.keys(DAYS_OFFSET).join('|') + ')' +\n    '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' +\n    '(?:\\\\s*(este|pasado|pr[óo]ximo)\\\\s*week)?' +\n    '(?=\\\\W|$)', 'i');\n\nvar PREFIX_GROUP = 2;\nvar WEEKDAY_GROUP = 3;\nvar POSTFIX_GROUP = 4;\n\nexports.Parser = function ESWeekdayParser() {\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n        var index = match.index + match[1].length;\n        var text = match[0].substr(match[1].length, match[0].length - match[1].length);\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\n        var offset = DAYS_OFFSET[dayOfWeek];\n        if(offset === undefined) return null;\n\n        var modifier = null;\n        var prefix = match[PREFIX_GROUP];\n        var postfix = match[POSTFIX_GROUP];\n        if (prefix || postfix) {\n            var norm = prefix || postfix;\n            norm = norm.toLowerCase();\n\n            if(norm == 'pasado') {\n                modifier = 'this';\n            }\n            else if(norm == 'próximo' || norm == 'proximo') {\n                modifier = 'next';\n            }\n            else if(norm== 'este') {\n                modifier =  'this';\n            }\n        }\n\n        updateParsedComponent(result, ref, offset, modifier);\n        result.tags['ESWeekdayParser'] = true;\n        return result;\n    }\n}\n","/*\n\n\n*/\n\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar util  = require('../../utils/ES');\n\nvar DAYS_OFFSET = util.WEEKDAY_OFFSET;\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n        '(?:(Domingo|Lunes|Martes|Miércoles|Miercoles|Jueves|Viernes|Sábado|Sabado|Dom|Lun|Mar|Mie|Jue|Vie|Sab)\\\\s*,?\\\\s*)?' +\n        '([0-9]{1,2})(?:º|ª|°)?' +\n        '(?:\\\\s*(?:desde|de|\\\\-|\\\\–|al?|hasta|\\\\s)\\\\s*([0-9]{1,2})(?:º|ª|°)?)?\\\\s*(?:de)?\\\\s*' +\n        '(Ene(?:ro|\\\\.)?|Feb(?:rero|\\\\.)?|Mar(?:zo|\\\\.)?|Abr(?:il|\\\\.)?|May(?:o|\\\\.)?|Jun(?:io|\\\\.)?|Jul(?:io|\\\\.)?|Ago(?:sto|\\\\.)?|Sep(?:tiembre|\\\\.)?|Oct(?:ubre|\\\\.)?|Nov(?:iembre|\\\\.)?|Dic(?:iembre|\\\\.)?)' +\n        '(?:\\\\s*(?:del?)?(\\\\s*[0-9]{1,4}(?![^\\\\s]\\\\d))(\\\\s*[ad]\\\\.?\\\\s*c\\\\.?|a\\\\.?\\\\s*d\\\\.?)?)?' +\n        '(?=\\\\W|$)', 'i'\n    );\n\nvar WEEKDAY_GROUP = 2;\nvar DATE_GROUP = 3;\nvar DATE_TO_GROUP = 4;\nvar MONTH_NAME_GROUP = 5;\nvar YEAR_GROUP = 6;\nvar YEAR_BE_GROUP = 7;\n\nexports.Parser = function ESMonthNameLittleEndianParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var result = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index: match.index + match[1].length,\n            ref: ref,\n        });\n\n        var month = match[MONTH_NAME_GROUP];\n        month = util.MONTH_OFFSET[month.toLowerCase()];\n\n        var day = match[DATE_GROUP];\n        day = parseInt(day);\n\n        var year = null;\n        if (match[YEAR_GROUP]) {\n            year = match[YEAR_GROUP];\n            year = parseInt(year);\n\n            if(match[YEAR_BE_GROUP]){\n                if (/a\\.?\\s*c\\.?/i.test(match[YEAR_BE_GROUP])) {\n                    // antes de Cristo\n                    year = -year;\n                }\n            } else if (year < 100){\n\n                year = year + 2000;\n            }\n        }\n\n        if(year){\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.assign('year', year);\n        } else {\n\n            //Find the most appropriated year\n            var refMoment = moment(ref);\n            refMoment.month(month - 1);\n            refMoment.date(day);\n            refMoment.year(moment(ref).year());\n\n            var nextYear = refMoment.clone().add(1, 'y');\n            var lastYear = refMoment.clone().add(-1, 'y');\n            if( Math.abs(nextYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){\n                refMoment = nextYear;\n            }\n            else if( Math.abs(lastYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){\n                refMoment = lastYear;\n            }\n\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.imply('year', refMoment.year());\n        }\n\n        // Weekday component\n        if (match[WEEKDAY_GROUP]) {\n            var weekday = match[WEEKDAY_GROUP];\n            weekday = util.WEEKDAY_OFFSET[weekday.toLowerCase()]\n            result.start.assign('weekday', weekday);\n        }\n\n        // Text can be 'range' value. Such as '12 - 13 January 2012'\n        if (match[DATE_TO_GROUP]) {\n            result.end = result.start.clone();\n            result.end.assign('day', parseInt(match[DATE_TO_GROUP]));\n        }\n\n        result.tags['ESMonthNameLittleEndianParser'] = true;\n        return result;\n    };\n}","/*\n    Date format with slash \"/\" (also \"-\" and \".\") between numbers\n    - Martes 3/11/2015\n    - 3/11/2015\n    - 3/11\n*/\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:' +\n        '((?:domingo|dom|lunes|lun|martes|mar|mi[ée]rcoles|mie|jueves|jue|viernes|vie|s[áa]bado|sab))' +\n        '\\\\s*\\\\,?\\\\s*' +\n    ')?' +\n    '([0-1]{0,1}[0-9]{1})[\\\\/\\\\.\\\\-]([0-3]{0,1}[0-9]{1})' +\n    '(?:' +\n        '[\\\\/\\\\.\\\\-]' +\n        '([0-9]{4}\\s*\\,?\\s*|[0-9]{2}\\s*\\,?\\s*)' +\n    ')?' +\n    '(\\\\W|$)', 'i');\n\nvar DAYS_OFFSET = { 'domingo': 0, 'dom': 0, 'lunes': 1, 'lun': 1, 'martes': 2, 'mar': 2, 'miercoles': 3, 'miércoles': 3, 'mie': 3,\n    'jueves': 4, 'jue': 4, 'viernes': 5, 'vier': 5, 'sábado': 6, 'sabado': 6, 'sab': 6,}\n\n\nvar OPENNING_GROUP = 1;\nvar ENDING_GROUP = 6;\n\n// in Spanish we use day/month/year\nvar WEEKDAY_GROUP = 2;\nvar MONTH_GROUP = 4;\nvar DAY_GROUP = 3;\nvar YEAR_GROUP = 5;\n\nexports.Parser = function ESSlashDateFormatParser(argument) {\n    Parser.apply(this, arguments);\n\n    this.pattern = function () { return PATTERN; };\n    this.extract = function(text, ref, match, opt){\n\n        if(match[OPENNING_GROUP] == '/' || match[ENDING_GROUP] == '/') {\n            // Long skip, if there is some overlapping like:\n            // XX[/YY/ZZ]\n            // [XX/YY/]ZZ\n            match.index += match[0].length\n            return;\n        }\n\n        var index = match.index + match[OPENNING_GROUP].length;\n        var text = match[0].substr(match[OPENNING_GROUP].length, match[0].length - match[ENDING_GROUP].length);\n\n\n        var result = new ParsedResult({\n            text: text,\n            index: index,\n            ref: ref,\n        });\n\n        if(text.match(/^\\d\\.\\d$/)) return;\n        if(text.match(/^\\d\\.\\d{1,2}\\.\\d{1,2}$/)) return;\n\n        // MM/dd -> OK\n        // MM.dd -> NG\n        if(!match[YEAR_GROUP] && match[0].indexOf('/') < 0) return;\n\n        var date = null;\n        var year = match[YEAR_GROUP] || moment(ref).year() + '';\n        var month = match[MONTH_GROUP];\n        var day   = match[DAY_GROUP];\n\n        month = parseInt(month);\n        day  = parseInt(day);\n        year = parseInt(year);\n\n        if(month < 1 || month > 12) {\n            if(month > 12) {\n                // dd/mm/yyyy date format if day looks like a month, and month\n                // looks like a day.\n                if (day >= 1 && day <= 12 && month >= 13 && month <= 31) {\n                    // unambiguous\n                    var tday = month;\n                    month = day;\n                    day = tday;\n                }\n                else {\n                    // both month and day are <= 12\n                    return null;\n                }\n            }\n        }\n        if(day < 1 || day > 31) return null;\n\n        if(year < 100){\n            if(year > 50){\n                year = year + 1900;\n            }else{\n                year = year + 2000;\n            }\n        }\n\n        result.start.assign('day', day);\n        result.start.assign('month', month);\n        result.start.assign('year', year);\n\n        //Day of week\n        if(match[WEEKDAY_GROUP]) {\n            result.start.assign('weekday', DAYS_OFFSET[match[WEEKDAY_GROUP].toLowerCase()]);\n        }\n\n        result.tags['ESSlashDateFormatParser'] = true;\n        return result;\n    };\n};","/*\r\n\r\n\r\n*/\r\n\r\nvar moment = require('moment');\r\nvar Parser = require('../parser').Parser;\r\nvar ParsedResult = require('../../result').ParsedResult;\r\n\r\nvar PATTERN = /(\\W|^)(maintenant|aujourd'hui|ajd|cette\\s*nuit|la\\s*veille|(demain|hier)(\\s*(matin|soir|aprem|après-midi))?|ce\\s*(matin|soir)|cet\\s*(après-midi|aprem))(?=\\W|$)/i;\r\n\r\nexports.Parser = function FRCasualDateParser(){\r\n\r\n    Parser.apply(this, arguments);\r\n\r\n    this.pattern = function() { return PATTERN; }\r\n\r\n    this.extract = function(text, ref, match, opt){\r\n\r\n        var text = match[0].substr(match[1].length);\r\n        var index = match.index + match[1].length;\r\n        var result = new ParsedResult({\r\n            index: index,\r\n            text: text,\r\n            ref: ref,\r\n        });\r\n\r\n        var refMoment = moment(ref);\r\n        var startMoment = refMoment.clone();\r\n        var lowerText = text.toLowerCase();\r\n\r\n        if(lowerText.match(/demain/)){\r\n            // Check not \"Tomorrow\" on late night\r\n            if(refMoment.hour() > 1) {\r\n                startMoment.add(1, 'day');\r\n            }\r\n        } \r\n\r\n        if(lowerText.match(/hier/)) {\r\n            startMoment.add(-1, 'day');\r\n        }\r\n\r\n        if(lowerText.match(/cette\\s*nuit/)){\r\n            // Normally means this coming midnight\r\n            result.start.imply('hour', 22);\r\n            result.start.imply('meridiem', 1);\r\n\r\n        } else if(lowerText.match(/la\\s*veille/)) {\r\n\r\n            result.start.imply('hour', 0);\r\n            if (refMoment.hour() > 6) {\r\n                startMoment.add(-1, 'day');\r\n            }\r\n\r\n        } else if (lowerText.match(/(après-midi|aprem)/)) {\r\n\r\n            result.start.imply('hour', 14);\r\n\r\n        } else if (lowerText.match(/(soir)/)) {\r\n\r\n            result.start.imply('hour', 18);\r\n\r\n        } else if (lowerText.match(/matin/)) {\r\n\r\n            result.start.imply('hour', 8);\r\n\r\n        }  else if (lowerText.match(\"maintenant\")) {\r\n\r\n          result.start.imply('hour', refMoment.hour());\r\n          result.start.imply('minute', refMoment.minute());\r\n          result.start.imply('second', refMoment.second());\r\n          result.start.imply('millisecond', refMoment.millisecond());\r\n\r\n        }\r\n\r\n        result.start.assign('day', startMoment.date())\r\n        result.start.assign('month', startMoment.month() + 1)\r\n        result.start.assign('year', startMoment.year())\r\n        result.tags['FRCasualDateParser'] = true;\r\n        return result;\r\n    }\r\n}\r\n","/*\r\n\r\n\r\n*/\r\n\r\nvar moment = require('moment');\r\nvar Parser = require('../parser').Parser;\r\nvar ParsedResult = require('../../result').ParsedResult;\r\nvar util  = require('../../utils/FR');\r\n\r\nvar PATTERN = new RegExp('(\\\\W|^)' +\r\n    '(dans|en)\\\\s*' +\r\n    '('+ util.INTEGER_WORDS_PATTERN + '|[0-9]+|une?|(?:\\\\s*quelques)?|demi(?:\\\\s*|-?)?)\\\\s*' +\r\n    '(secondes?|min(?:ute)?s?|heures?|jours?|semaines?|mois|années?)\\\\s*' +\r\n    '(?=\\\\W|$)', 'i'\r\n);\r\n\r\nvar STRICT_PATTERN = new RegExp('(\\\\W|^)' +\r\n    '(dans|en)\\\\s*' +\r\n    '('+ util.INTEGER_WORDS_PATTERN + '|[0-9]+|un?)\\\\s*' +\r\n    '(secondes?|minutes?|heures?|jours?)\\\\s*' +\r\n    '(?=\\\\W|$)', 'i'\r\n);\r\n\r\nexports.Parser = function FRDeadlineFormatParser(){\r\n    Parser.apply(this, arguments);\r\n\r\n    this.pattern = function() {\r\n        return this.isStrictMode()? STRICT_PATTERN : PATTERN;\r\n    };\r\n\r\n    this.extract = function(text, ref, match, opt){\r\n\r\n        var index = match.index + match[1].length;\r\n        var text  = match[0];\r\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\r\n\r\n        var result = new ParsedResult({\r\n            index: index,\r\n            text: text,\r\n            ref: ref\r\n        });\r\n\r\n        var num = match[3];\r\n        if (util.INTEGER_WORDS[num] !== undefined) {\r\n            num = util.INTEGER_WORDS[num];\r\n        } else if (num === 'un' || num === 'une'){\r\n            num = 1;\r\n        } else if (num.match(/quelques?/i)){\r\n            num = 3;\r\n        } else if (num.match(/demi-?/i)) {\r\n            num = 0.5;\r\n        } else {\r\n            num = parseInt(num);\r\n        }\r\n\r\n        var date = moment(ref);\r\n        if (match[4].match(/jour|semaine|mois|année/i)) {\r\n\r\n            if (match[4].match(/jour/)) {\r\n                date.add(num, 'd');\r\n            } else if (match[4].match(/semaine/i)) {\r\n                date.add(num * 7, 'd');\r\n            } else if (match[4].match(/mois/i)) {\r\n                date.add(num, 'month');\r\n            } else if (match[4].match(/année/i)) {\r\n                date.add(num, 'year');\r\n            }\r\n\r\n            result.start.assign('year', date.year());\r\n            result.start.assign('month', date.month() + 1);\r\n            result.start.assign('day', date.date());\r\n            return result;\r\n        }\r\n\r\n        if (match[4].match(/heure/i)) {\r\n\r\n            date.add(num, 'hour');\r\n\r\n        } else if (match[4].match(/min/i)) {\r\n\r\n            date.add(num, 'minutes');\r\n\r\n        } else if (match[4].match(/secondes/i)) {\r\n\r\n            date.add(num, 'second');\r\n        }\r\n\r\n        result.start.imply('year', date.year());\r\n        result.start.imply('month', date.month() + 1);\r\n        result.start.imply('day', date.date());\r\n        result.start.assign('hour', date.hour());\r\n        result.start.assign('minute', date.minute());\r\n        result.start.assign('second', date.second());\r\n        result.tags['FRDeadlineFormatParser'] = true;\r\n        return result;\r\n    };\r\n};\r\n","/*\r\n\r\n\r\n*/\r\n\r\nvar moment = require('moment');\r\n\r\nvar Parser = require('../parser').Parser;\r\nvar ParsedResult = require('../../result').ParsedResult;\r\n\r\nvar util  = require('../../utils/FR');\r\n\r\nvar DAYS_OFFSET = util.WEEKDAY_OFFSET;\r\n\r\nvar PATTERN = new RegExp('(\\\\W|^)' +\r\n        '(?:(Dimanche|Lundi|Mardi|mercredi|Jeudi|Vendredi|Samedi|Dim|Lun|Mar|Mer|Jeu|Ven|Sam)\\\\s*,?\\\\s*)?' +\r\n        '([0-9]{1,2}|1er)' +\r\n        '(?:\\\\s*(?:au|\\\\-|\\\\–|jusqu\\'au?|\\\\s)\\\\s*([0-9]{1,2})(?:er)?)?\\\\s*(?:de)?\\\\s*' +\r\n        '(Jan(?:vier|\\\\.)?|Fév(?:rier|\\\\.)?|Mars|Avr(?:il|\\\\.)?|Mai|Juin|Juil(?:let|\\\\.)?|Ao[uû]t|Sept(?:embre|\\\\.)?|Oct(?:obre|\\\\.)?|Nov(?:embre|\\\\.)?|déc(?:embre|\\\\.)?)' +\r\n        '(?:\\\\s*(\\\\s*[0-9]{1,4}(?![^\\\\s]\\\\d))(?:\\\\s*(AC|[ap]\\\\.?\\\\s*c(?:h(?:r)?)?\\\\.?\\\\s*n\\\\.?))?)?' +\r\n        '(?=\\\\W|$)', 'i'\r\n    );\r\n\r\nvar WEEKDAY_GROUP = 2;\r\nvar DATE_GROUP = 3;\r\nvar DATE_TO_GROUP = 4;\r\nvar MONTH_NAME_GROUP = 5;\r\nvar YEAR_GROUP = 6;\r\nvar YEAR_BE_GROUP = 7;\r\n\r\nexports.Parser = function FRMonthNameLittleEndianParser(){\r\n    Parser.apply(this, arguments);\r\n\r\n    this.pattern = function() { return PATTERN; }\r\n\r\n    this.extract = function(text, ref, match, opt){\r\n\r\n        var result = new ParsedResult({\r\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\r\n            index: match.index + match[1].length,\r\n            ref: ref,\r\n        });\r\n\r\n        var month = match[MONTH_NAME_GROUP];\r\n        month = util.MONTH_OFFSET[month.toLowerCase()];\r\n\r\n        var day = match[DATE_GROUP];\r\n        day = parseInt(day);\r\n\r\n        var year = null;\r\n        if (match[YEAR_GROUP]) {\r\n            year = match[YEAR_GROUP];\r\n            year = parseInt(year);\r\n\r\n            if(match[YEAR_BE_GROUP]){\r\n                if (/a/i.test(match[YEAR_BE_GROUP])) {\r\n                    // Ante Christe natum\r\n                    year = -year;\r\n                }\r\n            } else if (year < 100){\r\n\r\n                year = year + 2000;\r\n            }\r\n        }\r\n\r\n        if(year){\r\n            result.start.assign('day', day);\r\n            result.start.assign('month', month);\r\n            result.start.assign('year', year);\r\n        } else {\r\n\r\n            // Find the most appropriated year\r\n            var refMoment = moment(ref);\r\n            refMoment.month(month - 1);\r\n            refMoment.date(day);\r\n            refMoment.year(moment(ref).year());\r\n\r\n            var nextYear = refMoment.clone().add(1, 'y');\r\n            var lastYear = refMoment.clone().add(-1, 'y');\r\n            if( Math.abs(nextYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){\r\n                refMoment = nextYear;\r\n            }\r\n            else if( Math.abs(lastYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){\r\n                refMoment = lastYear;\r\n            }\r\n\r\n            result.start.assign('day', day);\r\n            result.start.assign('month', month);\r\n            result.start.imply('year', refMoment.year());\r\n        }\r\n\r\n        // Weekday component\r\n        if (match[WEEKDAY_GROUP]) {\r\n            var weekday = match[WEEKDAY_GROUP];\r\n            weekday = util.WEEKDAY_OFFSET[weekday.toLowerCase()]\r\n            result.start.assign('weekday', weekday);\r\n        }\r\n\r\n        // Text can be 'range' value. Such as '12 - 13 janvier 2012'\r\n        if (match[DATE_TO_GROUP]) {\r\n            result.end = result.start.clone();\r\n            result.end.assign('day', parseInt(match[DATE_TO_GROUP]));\r\n        }\r\n\r\n        result.tags['FRMonthNameLittleEndianParser'] = true;\r\n        return result;\r\n    };\r\n}\r\n","/*\r\n    Date format with slash \"/\" (also \"-\" and \".\") between numbers\r\n    - Martes 3/11/2015\r\n    - 3/11/2015\r\n    - 3/11\r\n*/\r\nvar moment = require('moment');\r\nvar Parser = require('../parser').Parser;\r\nvar ParsedResult = require('../../result').ParsedResult;\r\n\r\nvar PATTERN = new RegExp('(\\\\W|^)' +\r\n    '(?:' +\r\n        '((?:dimanche|dim|lundi|lun|mardi|mar|mercredi|mer|jeudi|jeu|vendredi|ven|samedi|sam|le))' +\r\n        '\\\\s*\\\\,?\\\\s*' +\r\n    ')?' +\r\n    '([0-3]{0,1}[0-9]{1})[\\\\/\\\\.\\\\-]([0-3]{0,1}[0-9]{1})' +\r\n    '(?:' +\r\n        '[\\\\/\\\\.\\\\-]' +\r\n        '([0-9]{4}\\s*\\,?\\s*|[0-9]{2}\\s*\\,?\\s*)' +\r\n    ')?' +\r\n    '(\\\\W|$)', 'i');\r\n\r\nvar DAYS_OFFSET = { 'dimanche': 0, 'dim': 0, 'lundi': 1, 'lun': 1,'mardi': 2, 'mar':2, 'mercredi': 3, 'mer': 3,\r\n    'jeudi': 4, 'jeu':4, 'vendredi': 5, 'ven': 5,'samedi': 6, 'sam': 6};\r\n\r\n\r\nvar OPENNING_GROUP = 1;\r\nvar ENDING_GROUP = 6;\r\n\r\n// In French we use day/month/year\r\nvar WEEKDAY_GROUP = 2;\r\nvar DAY_GROUP = 3;\r\nvar MONTH_GROUP = 4;\r\nvar YEAR_GROUP = 5;\r\n\r\nexports.Parser = function FRSlashDateFormatParser(argument) {\r\n    Parser.apply(this, arguments);\r\n\r\n    this.pattern = function () { return PATTERN; };\r\n    this.extract = function(text, ref, match, opt){\r\n\r\n        if(match[OPENNING_GROUP] == '/' || match[ENDING_GROUP] == '/') {\r\n            // Long skip, if there is some overlapping like:\r\n            // XX[/YY/ZZ]\r\n            // [XX/YY/]ZZ\r\n            match.index += match[0].length\r\n            return;\r\n        }\r\n\r\n        var index = match.index + match[OPENNING_GROUP].length;\r\n        var text = match[0].substr(match[OPENNING_GROUP].length, match[0].length - match[ENDING_GROUP].length);\r\n\r\n\r\n        var result = new ParsedResult({\r\n            text: text,\r\n            index: index,\r\n            ref: ref,\r\n        });\r\n\r\n        if(text.match(/^\\d\\.\\d$/)) return;\r\n        if(text.match(/^\\d\\.\\d{1,2}\\.\\d{1,2}$/)) return;\r\n\r\n        // MM/dd -> OK\r\n        // MM.dd -> NG\r\n        if(!match[YEAR_GROUP] && match[0].indexOf('/') < 0) return;\r\n\r\n        var date = null;\r\n        var year = match[YEAR_GROUP] || moment(ref).year() + '';\r\n        var month = match[MONTH_GROUP];\r\n        var day   = match[DAY_GROUP];\r\n\r\n        day  = parseInt(day);\r\n        month = parseInt(month);\r\n        year = parseInt(year);\r\n\r\n        if(month < 1 || month > 12) {\r\n            if(month > 12) {\r\n                // dd/mm/yyyy date format if day looks like a month, and month looks like a day.\r\n                if (day >= 1 && day <= 12 && month >= 13 && month <= 31) {\r\n                    // unambiguous\r\n                    var tday = month;\r\n                    month = day;\r\n                    day = tday;\r\n                }\r\n                else {\r\n                    // both month and day are <= 12\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        if(day < 1 || day > 31) return null;\r\n\r\n        if(year < 100){\r\n            if(year > 50){\r\n                year = year + 1900;\r\n            }else{\r\n                year = year + 2000;\r\n            }\r\n        }\r\n\r\n        result.start.assign('day', day);\r\n        result.start.assign('month', month);\r\n        result.start.assign('year', year);\r\n\r\n        // Day of week\r\n        if(match[WEEKDAY_GROUP]) {\r\n            result.start.assign('weekday', DAYS_OFFSET[match[WEEKDAY_GROUP].toLowerCase()]);\r\n        }\r\n\r\n        result.tags['FRSlashDateFormatParser'] = true;\r\n        return result;\r\n    };\r\n};","/*\r\n\r\n\r\n*/\r\n\r\nvar moment = require('moment');\r\nvar Parser = require('../parser').Parser;\r\nvar ParsedResult = require('../../result').ParsedResult;\r\n\r\nvar PATTERN = /(\\W|^)il y a\\s*([0-9]+|une?)\\s*(minutes?|heures?|semaines?|jours?|mois|années?|ans?)(?=(?:\\W|$))/i;\r\n\r\nexports.Parser = function FRTimeAgoFormatParser(){\r\n    Parser.apply(this, arguments);\r\n\r\n    this.pattern = function() {\r\n        return PATTERN;\r\n    }\r\n\r\n    this.extract = function(text, ref, match, opt){\r\n\r\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\r\n\r\n        var text = match[0];\r\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\r\n        index = match.index + match[1].length;\r\n\r\n        var result = new ParsedResult({\r\n            index: index,\r\n            text: text,\r\n            ref: ref,\r\n        });\r\n        result.tags['FRTimeAgoFormatParser'] = true;\r\n        \r\n        var num = parseInt(match[2]);\r\n        if (isNaN(num)) {\r\n          if (match[2].match(/demi/)) {\r\n            num = 0.5;\r\n          } else {\r\n            num = 1;\r\n          }\r\n        }\r\n\r\n        var date = moment(ref);\r\n\r\n        if (match[3].match(/heure/) || match[3].match(/minute/)) {\r\n            if (match[3].match(/heure/)) {\r\n\r\n                date.add(-num, 'hour');\r\n\r\n            } else if (match[3].match(/minute/)) {\r\n\r\n                date.add(-num, 'minute');\r\n            }\r\n\r\n            result.start.imply('day', date.date());\r\n            result.start.imply('month', date.month() + 1);\r\n            result.start.imply('year', date.year());\r\n            result.start.assign('hour', date.hour());\r\n            result.start.assign('minute', date.minute());\r\n\r\n            return result;\r\n        }\r\n\r\n        if (match[3].match(/semaine/)) {\r\n            date.add(-num, 'week');\r\n\r\n            result.start.imply('day', date.date());\r\n            result.start.imply('month', date.month() + 1);\r\n            result.start.imply('year', date.year());\r\n            result.start.imply('weekday', date.day());\r\n            return result;\r\n        }\r\n\r\n        if (match[3].match(/jour/)) {\r\n            date.add(-num, 'd');\r\n        }\r\n\r\n        if (match[3].match(/mois/)) {\r\n            date.add(-num, 'month');\r\n        }\r\n\r\n        if (match[3].match(/années?|ans?/)) {\r\n\r\n            date.add(-num, 'year');\r\n        }\r\n\r\n        result.start.assign('day', date.date());\r\n        result.start.assign('month', date.month() + 1);\r\n        result.start.assign('year', date.year());\r\n        return result;\r\n\r\n    };\r\n}\r\n","/*\r\n\r\n\r\n*/\r\n\r\nvar moment = require('moment');\r\nvar Parser = require('../parser').Parser;\r\nvar ParsedResult = require('../../result').ParsedResult;\r\nvar ParsedComponents = require('../../result').ParsedComponents;\r\n\r\nvar FIRST_REG_PATTERN  = new RegExp(\"(^|\\\\s|T)\" +\r\n    \"(?:(?:[àa])\\\\s*)?\" +\r\n    \"(\\\\d{1,2}(?:h)?|midi|minuit)\" +\r\n    \"(?:\" +\r\n        \"(?:\\\\.|\\\\:|\\\\：|h)(\\\\d{1,2})(?:m)?\" +\r\n        \"(?:\" +\r\n            \"(?:\\\\:|\\\\：|m)(\\\\d{0,2})(?:s)?\" +\r\n        \")?\" +\r\n    \")?\" +\r\n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" +\r\n    \"(?=\\\\W|$)\", 'i');\r\n\r\n\r\nvar SECOND_REG_PATTERN = new RegExp(\"^\\\\s*\" +\r\n    \"(\\\\-|\\\\–|\\\\~|\\\\〜|[àa]|\\\\?)\\\\s*\" +\r\n    \"(\\\\d{1,2}(?:h)?)\" +\r\n    \"(?:\" +\r\n        \"(?:\\\\.|\\\\:|\\\\：|h)(\\\\d{1,2})(?:m)?\" +\r\n        \"(?:\" +\r\n            \"(?:\\\\.|\\\\:|\\\\：|m)(\\\\d{1,2})(?:s)?\" +\r\n        \")?\" +\r\n    \")?\" +\r\n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" +\r\n    \"(?=\\\\W|$)\", 'i');\r\n\r\nvar HOUR_GROUP    = 2;\r\nvar MINUTE_GROUP  = 3;\r\nvar SECOND_GROUP  = 4;\r\nvar AM_PM_HOUR_GROUP = 5;\r\n\r\nexports.Parser = function FRTimeExpressionParser(){\r\n    Parser.apply(this, arguments);\r\n\r\n    this.pattern = function() { return FIRST_REG_PATTERN; }\r\n\r\n    this.extract = function(text, ref, match, opt){\r\n\r\n        // This pattern can be overlaped Ex. [12] AM, 1[2] AM\r\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\r\n        var refMoment = moment(ref);\r\n        var result = new ParsedResult();\r\n        result.ref = ref;\r\n        result.index = match.index + match[1].length;\r\n        result.text  = match[0].substring(match[1].length);\r\n        result.tags['FRTimeExpressionParser'] = true;\r\n\r\n        result.start.imply('day',   refMoment.date());\r\n        result.start.imply('month', refMoment.month()+1);\r\n        result.start.imply('year',  refMoment.year());\r\n\r\n        var hour = 0;\r\n        var minute = 0;\r\n        var meridiem = -1;\r\n\r\n        // ----- Second\r\n        if(match[SECOND_GROUP] != null){\r\n            var second = parseInt(match[SECOND_GROUP]);\r\n            if(second >= 60) return null;\r\n\r\n            result.start.assign('second', second);\r\n        }\r\n\r\n        // ----- Hours\r\n        if (match[HOUR_GROUP].toLowerCase() == \"midi\"){\r\n            meridiem = 1;\r\n            hour = 12;\r\n        } else if (match[HOUR_GROUP].toLowerCase() == \"minuit\") {\r\n            meridiem = 0;\r\n            hour = 0;\r\n        } else {\r\n            hour = parseInt(match[HOUR_GROUP]);\r\n        }\r\n\r\n        // ----- Minutes\r\n        if(match[MINUTE_GROUP] != null){\r\n            minute = parseInt(match[MINUTE_GROUP]);\r\n        } else if(hour > 100) {\r\n            minute = hour%100;\r\n            hour   = parseInt(hour/100);\r\n        }\r\n\r\n        if(minute >= 60) {\r\n            return null;\r\n        }\r\n\r\n        if(hour > 24) {\r\n            return null;\r\n        }\r\n        if (hour >= 12) {\r\n            meridiem = 1;\r\n        }\r\n\r\n        // ----- AM & PM\r\n        if(match[AM_PM_HOUR_GROUP] != null) {\r\n            if(hour > 12) return null;\r\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\r\n            if(ampm == \"a\"){\r\n                meridiem = 0;\r\n                if(hour == 12) hour = 0;\r\n            }\r\n\r\n            if(ampm == \"p\"){\r\n                meridiem = 1;\r\n                if(hour != 12) hour += 12;\r\n            }\r\n        }\r\n        result.start.assign('hour', hour);\r\n        result.start.assign('minute', minute);\r\n        if (meridiem >= 0) {\r\n            result.start.assign('meridiem', meridiem);\r\n        }\r\n\r\n        // ==============================================================\r\n        //                  Extracting the 'to' chunk\r\n        // ==============================================================\r\n        match = SECOND_REG_PATTERN.exec(text.substring(result.index + result.text.length));\r\n        if (!match) {\r\n            // Not accept number only result\r\n            if (result.text.match(/^\\d+$/)) {\r\n                return null;\r\n            }\r\n            return result;\r\n        }\r\n\r\n\r\n\r\n        // Pattern \"YY.YY -XXXX\" is more like timezone offset\r\n        if (match[0].match(/^\\s*(\\+|\\-)\\s*\\d{3,4}$/)) {\r\n            return result;\r\n        }\r\n\r\n        if(result.end == null){\r\n            result.end = new ParsedComponents(null, result.start.date());\r\n        }\r\n\r\n        var hour = 0;\r\n        var minute = 0;\r\n        var meridiem = -1;\r\n\r\n        // ----- Second\r\n        if(match[SECOND_GROUP] != null){\r\n            var second = parseInt(match[SECOND_GROUP]);\r\n            if(second >= 60) return null;\r\n\r\n            result.end.assign('second', second);\r\n        }\r\n\r\n        hour = parseInt(match[2]);\r\n\r\n        // ----- Minute\r\n        if (match[MINUTE_GROUP]!= null) {\r\n\r\n            minute = parseInt(match[MINUTE_GROUP]);\r\n            if(minute >= 60) return result;\r\n\r\n        } else if (hour > 100) {\r\n\r\n            minute = hour%100;\r\n            hour   = parseInt(hour/100);\r\n        }\r\n\r\n        if(minute >= 60) {\r\n            return null;\r\n        }\r\n\r\n        if(hour > 24) {\r\n            return null;\r\n        }\r\n        if (hour >= 12) {\r\n            meridiem = 1;\r\n        }\r\n\r\n        // ----- AM & PM\r\n        if (match[AM_PM_HOUR_GROUP] != null){\r\n\r\n            if (hour > 12) return null;\r\n\r\n            if(match[AM_PM_HOUR_GROUP][0].toLowerCase() == \"a\"){\r\n                meridiem = 0;\r\n                if(hour == 12) {\r\n                    hour = 0;\r\n                    if (!result.end.isCertain('day')) {\r\n                        result.end.imply('day', result.end.get('day') + 1);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(match[AM_PM_HOUR_GROUP][0].toLowerCase() == \"p\"){\r\n                meridiem = 1;\r\n                if(hour != 12) hour += 12;\r\n            }\r\n\r\n            if (!result.start.isCertain('meridiem')) {\r\n                if (meridiem == 0) {\r\n\r\n                    result.start.imply('meridiem', 0);\r\n\r\n                    if (result.start.get('hour') == 12) {\r\n                        result.start.assign('hour', 0);\r\n                    }\r\n\r\n                } else {\r\n\r\n                    result.start.imply('meridiem', 1);\r\n\r\n                    if (result.start.get('hour') != 12) {\r\n                        result.start.assign('hour', result.start.get('hour') + 12);\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else if(hour >= 12) {\r\n            meridiem = 1;\r\n        }\r\n\r\n        result.text = result.text + match[0];\r\n        result.end.assign('hour', hour);\r\n        result.end.assign('minute', minute);\r\n        if (meridiem >= 0) {\r\n            result.end.assign('meridiem', meridiem);\r\n        }\r\n\r\n        if (result.end.date().getTime() < result.start.date().getTime()) {\r\n            result.end.imply('day', result.end.get('day') + 1)\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n","/*\r\n\r\n\r\n*/\r\nvar moment = require('moment');\r\nvar Parser = require('../parser').Parser;\r\nvar ParsedResult = require('../../result').ParsedResult;\r\nvar updateParsedComponent = require('../EN/ENWeekdayParser').updateParsedComponent;\r\n\r\nvar DAYS_OFFSET = { 'dimanche': 0, 'dim': 0, 'lundi': 1, 'lun': 1,'mardi': 2, 'mar':2, 'mercredi': 3, 'mer': 3,\r\n    'jeudi': 4, 'jeu':4, 'vendredi': 5, 'ven': 5,'samedi': 6, 'sam': 6};\r\n\r\nvar PATTERN = new RegExp('(\\\\s|^)' +\r\n    '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' +\r\n    '(?:(ce)\\\\s*)?' +\r\n    '(' + Object.keys(DAYS_OFFSET).join('|') + ')' +\r\n    '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' +\r\n    '(?:\\\\s*(dernier|prochain)\\\\s*)?' +\r\n    '(?=\\\\W|$)', 'i');\r\n\r\nvar PREFIX_GROUP = 2;\r\nvar WEEKDAY_GROUP = 3;\r\nvar POSTFIX_GROUP = 4;\r\n\r\nexports.Parser = function FRWeekdayParser() {\r\n    Parser.apply(this, arguments);\r\n\r\n    this.pattern = function() { return PATTERN; };\r\n\r\n    this.extract = function(text, ref, match, opt){\r\n        var index = match.index + match[1].length;\r\n        var text = match[0].substr(match[1].length, match[0].length - match[1].length);\r\n        var result = new ParsedResult({\r\n            index: index,\r\n            text: text,\r\n            ref: ref\r\n        });\r\n\r\n        var dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\r\n        var offset = DAYS_OFFSET[dayOfWeek];\r\n        if(offset === undefined) return null;\r\n\r\n        var modifier = null;\r\n        var prefix = match[PREFIX_GROUP];\r\n        var postfix = match[POSTFIX_GROUP];\r\n        if (prefix || postfix) {\r\n            var norm = prefix || postfix;\r\n            norm = norm.toLowerCase();\r\n\r\n            if(norm == 'dernier') {\r\n                modifier = 'last';\r\n            } else if(norm == 'prochain') {\r\n                modifier = 'next';\r\n            } else if(norm== 'ce') {\r\n                modifier = 'this';\r\n            }\r\n        }\r\n\r\n        updateParsedComponent(result, ref, offset, modifier);\r\n        result.tags['FRWeekdayParser'] = true;\r\n        return result;\r\n    }\r\n};\r\n\r\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar util = require('../../utils/ZH-Hant.js');\n\nvar PATTERN = new RegExp(\n    '(\\\\d{2,4}|[' + Object.keys(util.NUMBER).join('') + ']{2,4})?' +\n    '(?:\\\\s*)' +\n    '(?:年)?' +\n    '(?:[\\\\s|,|，]*)' +\n    '(\\\\d{1,2}|[' + Object.keys(util.NUMBER).join('') + ']{1,2})' +\n    '(?:\\\\s*)' +\n    '(?:月)' +\n    '(?:\\\\s*)' +\n    '(\\\\d{1,2}|[' + Object.keys(util.NUMBER).join('') + ']{1,2})?' +\n    '(?:\\\\s*)' +\n    '(?:日|號)?'\n);\n\nvar YEAR_GROUP = 1;\nvar MONTH_GROUP = 2;\nvar DAY_GROUP = 3;\n\nexports.Parser = function ZHHantDateParser() {\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt) {\n        var startMoment = moment(ref);\n        var result = new ParsedResult({\n            text: match[0],\n            index: match.index,\n            ref: ref,\n        });\n\n        //Month\n        var month = parseInt(match[MONTH_GROUP]);\n        if (isNaN(month)) month = util.zhStringToNumber(match[MONTH_GROUP]);\n        result.start.assign('month', month);\n\n        //Day\n        if (match[DAY_GROUP]) {\n            var day = parseInt(match[DAY_GROUP]);\n            if (isNaN(day)) day = util.zhStringToNumber(match[DAY_GROUP]);\n            result.start.assign('day', day);\n        } else {\n            result.start.imply('day', startMoment.date());\n        }\n\n        //Year\n        if (match[YEAR_GROUP]) {\n            var year = parseInt(match[YEAR_GROUP]);\n            if (isNaN(year)) year = util.zhStringToYear(match[YEAR_GROUP]);\n            result.start.assign('year', year);\n        } else {\n            result.start.imply('year', startMoment.year());\n        }\n\n        result.tags.ZHHantDateParser = true;\n        return result;\n    };\n};\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar updateParsedComponent = require('../EN/ENWeekdayParser').updateParsedComponent;\n\nvar util = require('../../utils/ZH-Hant.js');\n\nvar PATTERN = new RegExp(\n    '(上|今|下|這|呢)?' +\n    '(?:個)?' +\n    '(?:星期|禮拜)' +\n    '(' + Object.keys(util.WEEKDAY_OFFSET).join('|') + ')'\n);\n\nvar PREFIX_GROUP = 1;\nvar WEEKDAY_GROUP = 2;\n\nexports.Parser = function ZHHantWeekdayParser() {\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt) {\n        var index = match.index;\n        text = match[0];\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var dayOfWeek = match[WEEKDAY_GROUP];\n        var offset = util.WEEKDAY_OFFSET[dayOfWeek];\n        if(offset === undefined) return null;\n\n        var modifier = null;\n        var prefix = match[PREFIX_GROUP];\n\n        if(prefix == '上') {\n            modifier = 'last';\n        } else if(prefix == '下') {\n            modifier = 'next';\n        } else if(prefix == '今' || prefix == '這' || prefix == '呢') {\n            modifier = 'this';\n        }\n\n        updateParsedComponent(result, ref, offset, modifier);\n        result.tags['ZHHantWeekdayParser'] = true;\n        return result;\n    };\n};\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar ParsedComponents = require('../../result').ParsedComponents;\n\nvar util = require('../../utils/ZH-Hant.js');\n\nvar patternString1 = '(?:由|從|自)?' +\n    '(?:' +\n    '(今|明|聽|昨|尋|琴)(早|朝|晚)|' +\n    '(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨))|' +\n    '(今|明|聽|昨|尋|琴)(?:日|天)' +\n    '(?:[\\\\s,，]*)' +\n    '(?:(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨)))?' +\n    ')?' +\n    '(?:[\\\\s,，]*)' +\n    '(?:(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+)(?:\\\\s*)(?:點|時|:|：)' +\n    '(?:\\\\s*)' +\n    '(\\\\d+|半|正|整|[' + Object.keys(util.NUMBER).join('') + ']+)?(?:\\\\s*)(?:分|:|：)?' +\n    '(?:\\\\s*)' +\n    '(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+)?(?:\\\\s*)(?:秒)?)' +\n    '(?:\\\\s*(A\\.M\\.|P\\.M\\.|AM?|PM?))?';\n\nvar patternString2 = '(?:\\\\s*(?:到|至|\\\\-|\\\\–|\\\\~|\\\\〜)\\\\s*)' +\n    '(?:' +\n    '(今|明|聽|昨|尋|琴)(早|朝|晚)|' +\n    '(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨))|' +\n    '(今|明|聽|昨|尋|琴)(?:日|天)' +\n    '(?:[\\\\s,，]*)' +\n    '(?:(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨)))?' +\n    ')?' +\n    '(?:[\\\\s,，]*)' +\n    '(?:(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+)(?:\\\\s*)(?:點|時|:|：)' +\n    '(?:\\\\s*)' +\n    '(\\\\d+|半|正|整|[' + Object.keys(util.NUMBER).join('') + ']+)?(?:\\\\s*)(?:分|:|：)?' +\n    '(?:\\\\s*)' +\n    '(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+)?(?:\\\\s*)(?:秒)?)' +\n    '(?:\\\\s*(A\\.M\\.|P\\.M\\.|AM?|PM?))?';\n\nvar FIRST_REG_PATTERN = new RegExp(patternString1, 'i');\nvar SECOND_REG_PATTERN = new RegExp(patternString2, 'i');\n\nvar DAY_GROUP_1 = 1;\nvar ZH_AM_PM_HOUR_GROUP_1 = 2;\nvar ZH_AM_PM_HOUR_GROUP_2 = 3;\nvar DAY_GROUP_3 = 4;\nvar ZH_AM_PM_HOUR_GROUP_3 = 5;\nvar HOUR_GROUP = 6;\nvar MINUTE_GROUP = 7;\nvar SECOND_GROUP = 8;\nvar AM_PM_HOUR_GROUP = 9;\n\nexports.Parser = function ZHHantTimeExpressionParser() {\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return FIRST_REG_PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt) {\n\n        // This pattern can be overlaped Ex. [12] AM, 1[2] AM\n        if (match.index > 0 && text[match.index - 1].match(/\\w/)) return null;\n        var refMoment = moment(ref);\n        var result = new ParsedResult();\n        result.ref = ref;\n        result.index = match.index;\n        result.text = match[0];\n        result.tags.ZHTimeExpressionParser = true;\n\n        var startMoment = refMoment.clone();\n\n        // ----- Day\n        if (match[DAY_GROUP_1]) {\n            var day1 = match[DAY_GROUP_1];\n            if (day1 == '明' || day1 == '聽') {\n              // Check not \"Tomorrow\" on late night\n              if(refMoment.hour() > 1) {\n                  startMoment.add(1, 'day');\n              }\n            } else if (day1 == '昨' || day1 == '尋' || day1 == '琴') {\n                startMoment.add(-1, 'day');\n            }\n            result.start.assign('day', startMoment.date());\n            result.start.assign('month', startMoment.month() + 1);\n            result.start.assign('year', startMoment.year());\n        } else if (match[DAY_GROUP_3]) {\n            var day3 = match[DAY_GROUP_3];\n            if (day3 == '明' || day3 == '聽') {\n                startMoment.add(1, 'day');\n            } else if (day3 == '昨' || day3 == '尋' || day3 == '琴') {\n                startMoment.add(-1, 'day');\n            }\n            result.start.assign('day', startMoment.date());\n            result.start.assign('month', startMoment.month() + 1);\n            result.start.assign('year', startMoment.year());\n        } else {\n            result.start.imply('day', startMoment.date());\n            result.start.imply('month', startMoment.month() + 1);\n            result.start.imply('year', startMoment.year());\n        }\n\n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if (match[SECOND_GROUP]) {\n            var second = parseInt(match[SECOND_GROUP]);\n            if (isNaN(second)) {\n                second = util.zhStringToNumber(match[SECOND_GROUP]);\n            }\n            if (second >= 60) return null;\n            result.start.assign('second', second);\n        }\n\n        hour = parseInt(match[HOUR_GROUP]);\n        if (isNaN(hour)) {\n            hour = util.zhStringToNumber(match[HOUR_GROUP]);\n        }\n\n        // ----- Minutes\n        if (match[MINUTE_GROUP]) {\n            if (match[MINUTE_GROUP] == '半') {\n                minute = 30;\n            } else if (match[MINUTE_GROUP] == '正' || match[MINUTE_GROUP] == '整') {\n                minute = 0;\n            } else {\n                minute = parseInt(match[MINUTE_GROUP]);\n                if (isNaN(minute)) {\n                    minute = util.zhStringToNumber(match[MINUTE_GROUP]);\n                }\n            }\n        } else if (hour > 100) {\n            minute = hour % 100;\n            hour = parseInt(hour / 100);\n        }\n\n        if (minute >= 60) {\n            return null;\n        }\n\n        if (hour > 24) {\n            return null;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        // ----- AM & PM\n        if (match[AM_PM_HOUR_GROUP]) {\n            if (hour > 12) return null;\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if (ampm == \"a\") {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            }\n\n            if (ampm == \"p\") {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        } else if (match[ZH_AM_PM_HOUR_GROUP_1]) {\n            var zhAMPMString1 = match[ZH_AM_PM_HOUR_GROUP_1];\n            var zhAMPM1 = zhAMPMString1[0];\n            if (zhAMPM1 == '朝' || zhAMPM1 == '早') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM1 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        } else if (match[ZH_AM_PM_HOUR_GROUP_2]) {\n            var zhAMPMString2 = match[ZH_AM_PM_HOUR_GROUP_2];\n            var zhAMPM2 = zhAMPMString2[0];\n            if (zhAMPM2 == '上' || zhAMPM2 == '朝' || zhAMPM2 == '早' || zhAMPM2 == '凌') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM2 == '下' || zhAMPM2 == '晏' || zhAMPM2 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        } else if (match[ZH_AM_PM_HOUR_GROUP_3]) {\n            var zhAMPMString3 = match[ZH_AM_PM_HOUR_GROUP_3];\n            var zhAMPM3 = zhAMPMString3[0];\n            if (zhAMPM3 == '上' || zhAMPM3 == '朝' || zhAMPM3 == '早' || zhAMPM3 == '凌') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM3 == '下' || zhAMPM3 == '晏' || zhAMPM3 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        }\n\n        result.start.assign('hour', hour);\n        result.start.assign('minute', minute);\n\n        if (meridiem >= 0) {\n            result.start.assign('meridiem', meridiem);\n        } else {\n            if (hour < 12) {\n                result.start.imply('meridiem', 0);\n            } else {\n                result.start.imply('meridiem', 1);\n            }\n        }\n\n        // ==============================================================\n        //                  Extracting the 'to' chunk\n        // ==============================================================\n\n        match = SECOND_REG_PATTERN.exec(text.substring(result.index + result.text.length));\n        if (!match) {\n            // Not accept number only result\n            if (result.text.match(/^\\d+$/)) {\n                return null;\n            }\n            return result;\n        }\n\n        var endMoment = startMoment.clone();\n        result.end = new ParsedComponents(null, null);\n\n        // ----- Day\n        if (match[DAY_GROUP_1]) {\n            var day1 = match[DAY_GROUP_1];\n            if (day1 == '明' || day1 == '聽') {\n              // Check not \"Tomorrow\" on late night\n              if(refMoment.hour() > 1) {\n                  endMoment.add(1, 'day');\n              }\n            } else if (day1 == '昨' || day1 == '尋' || day1 == '琴') {\n                endMoment.add(-1, 'day');\n            }\n            result.end.assign('day', endMoment.date());\n            result.end.assign('month', endMoment.month() + 1);\n            result.end.assign('year', endMoment.year());\n        } else if (match[DAY_GROUP_3]) {\n            var day3 = match[DAY_GROUP_3];\n            if (day3 == '明' || day3 == '聽') {\n                endMoment.add(1, 'day');\n            } else if (day3 == '昨' || day3 == '尋' || day3 == '琴') {\n                endMoment.add(-1, 'day');\n            }\n            result.end.assign('day', endMoment.date());\n            result.end.assign('month', endMoment.month() + 1);\n            result.end.assign('year', endMoment.year());\n        } else {\n            result.end.imply('day', endMoment.date());\n            result.end.imply('month', endMoment.month() + 1);\n            result.end.imply('year', endMoment.year());\n        }\n\n        hour = 0;\n        minute = 0;\n        meridiem = -1;\n\n        // ----- Second\n        if (match[SECOND_GROUP]) {\n            var second = parseInt(match[SECOND_GROUP]);\n            if (isNaN(second)) {\n                second = util.zhStringToNumber(match[SECOND_GROUP]);\n            }\n\n            if (second >= 60) return null;\n            result.end.assign('second', second);\n        }\n\n        hour = parseInt(match[HOUR_GROUP]);\n        if (isNaN(hour)) {\n            hour = util.zhStringToNumber(match[HOUR_GROUP]);\n        }\n\n        // ----- Minutes\n        if (match[MINUTE_GROUP]) {\n            if (match[MINUTE_GROUP] == '半') {\n                minute = 30;\n            } else if (match[MINUTE_GROUP] == '正' || match[MINUTE_GROUP] == '整') {\n                minute = 0;\n            } else {\n                minute = parseInt(match[MINUTE_GROUP]);\n                if (isNaN(minute)) {\n                    minute = util.zhStringToNumber(match[MINUTE_GROUP]);\n                }\n            }\n        } else if (hour > 100) {\n            minute = hour % 100;\n            hour = parseInt(hour / 100);\n        }\n\n        if (minute >= 60) {\n            return null;\n        }\n\n        if (hour > 24) {\n            return null;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        // ----- AM & PM\n        if (match[AM_PM_HOUR_GROUP]) {\n            if (hour > 12) return null;\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if (ampm == \"a\") {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            }\n\n            if (ampm == \"p\") {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n\n            if (!result.start.isCertain('meridiem')) {\n                if (meridiem == 0) {\n\n                    result.start.imply('meridiem', 0);\n\n                    if (result.start.get('hour') == 12) {\n                        result.start.assign('hour', 0);\n                    }\n\n                } else {\n\n                    result.start.imply('meridiem', 1);\n\n                    if (result.start.get('hour') != 12) {\n                        result.start.assign('hour', result.start.get('hour') + 12);\n                    }\n                }\n            }\n\n        } else if (match[ZH_AM_PM_HOUR_GROUP_1]) {\n            var zhAMPMString1 = match[ZH_AM_PM_HOUR_GROUP_1];\n            var zhAMPM1 = zhAMPMString1[0];\n            if (zhAMPM1 == '朝' || zhAMPM1 == '早') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM1 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        } else if (match[ZH_AM_PM_HOUR_GROUP_2]) {\n            var zhAMPMString2 = match[ZH_AM_PM_HOUR_GROUP_2];\n            var zhAMPM2 = zhAMPMString2[0];\n            if (zhAMPM2 == '上' || zhAMPM2 == '朝' || zhAMPM2 == '早' || zhAMPM2 == '凌') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM2 == '下' || zhAMPM2 == '晏' || zhAMPM2 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        } else if (match[ZH_AM_PM_HOUR_GROUP_3]) {\n            var zhAMPMString3 = match[ZH_AM_PM_HOUR_GROUP_3];\n            var zhAMPM3 = zhAMPMString3[0];\n            if (zhAMPM3 == '上' || zhAMPM3 == '朝' || zhAMPM3 == '早' || zhAMPM3 == '凌') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM3 == '下' || zhAMPM3 == '晏' || zhAMPM3 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        }\n\n        result.text = result.text + match[0];\n        result.end.assign('hour', hour);\n        result.end.assign('minute', minute);\n        if (meridiem >= 0) {\n            result.end.assign('meridiem', meridiem);\n        } else {\n            var startAtPM = result.start.isCertain('meridiem') && result.start.get('meridiem') == 1;\n            if (startAtPM && result.start.get('hour') > hour) {\n                // 10pm - 1 (am)\n                result.end.imply('meridiem', 0);\n\n            } else if (hour > 12) {\n                result.end.imply('meridiem', 1);\n            }\n        }\n\n        if (result.end.date().getTime() < result.start.date().getTime()) {\n            result.end.imply('day', result.end.get('day') + 1)\n        }\n\n        return result;\n    };\n};\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp(\n    '(而家|立(?:刻|即)|即刻)|' +\n    '(今|明|聽|昨|尋|琴)(早|朝|晚)|' +\n    '(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨))|' +\n    '(今|明|聽|昨|尋|琴)(?:日|天)' +\n    '(?:[\\\\s|,|，]*)' +\n    '(?:(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨)))?', 'i');\n\nvar NOW_GROUP = 1;\nvar DAY_GROUP_1 = 2;\nvar TIME_GROUP_1 = 3;\nvar TIME_GROUP_2 = 4;\nvar DAY_GROUP_3 = 5;\nvar TIME_GROUP_3 = 6;\n\nexports.Parser = function ZHHantCasualDateParser() {\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt) {\n        text = match[0];\n        var index = match.index;\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var refMoment = moment(ref);\n        var startMoment = refMoment.clone();\n\n        if (match[NOW_GROUP]) {\n            result.start.imply('hour', refMoment.hour());\n            result.start.imply('minute', refMoment.minute());\n            result.start.imply('second', refMoment.second());\n            result.start.imply('millisecond', refMoment.millisecond());\n        } else if (match[DAY_GROUP_1]) {\n            var day1 = match[DAY_GROUP_1];\n            var time1 = match[TIME_GROUP_1];\n\n            if (day1 == '明' || day1 == '聽') {\n              // Check not \"Tomorrow\" on late night\n              if(refMoment.hour() > 1) {\n                  startMoment.add(1, 'day');\n              }\n            } else if (day1 == '昨' || day1 == '尋' || day1 == '琴') {\n                startMoment.add(-1, 'day');\n            }\n\n            if (time1 == '早' || time1 == '朝') {\n                result.start.imply('hour', 6);\n            } else if (time1 == '晚') {\n                result.start.imply('hour', 22);\n                result.start.imply('meridiem', 1);\n            }\n\n        } else if (match[TIME_GROUP_2]) {\n            var timeString2 = match[TIME_GROUP_2];\n            var time2 = timeString2[0];\n            if (time2 == '早' || time2 == '朝' || time2 == '上') {\n                result.start.imply('hour', 6);\n            } else if (time2 == '下' || time2 == '晏') {\n                result.start.imply('hour', 15);\n                result.start.imply('meridiem', 1);\n            } else if (time2 == '中') {\n                result.start.imply('hour', 12);\n                result.start.imply('meridiem', 1);\n            } else if (time2 == '夜' || time2 == '晚') {\n                result.start.imply('hour', 22);\n                result.start.imply('meridiem', 1);\n            } else if (time2 == '凌') {\n                result.start.imply('hour', 0);\n            }\n\n        } else if (match[DAY_GROUP_3]) {\n            var day3 = match[DAY_GROUP_3];\n\n            if (day3 == '明' || day3 == '聽') {\n              // Check not \"Tomorrow\" on late night\n              if(refMoment.hour() > 1) {\n                  startMoment.add(1, 'day');\n              }\n            } else if (day3 == '昨' || day3 == '尋' || day3 == '琴') {\n                startMoment.add(-1, 'day');\n            }\n\n\n            var timeString3 = match[TIME_GROUP_3];\n            if (timeString3) {\n                var time3 = timeString3[0];\n                if (time3 == '早' || time3 == '朝' || time3 == '上') {\n                    result.start.imply('hour', 6);\n                } else if (time3 == '下' || time3 == '晏') {\n                    result.start.imply('hour', 15);\n                    result.start.imply('meridiem', 1);\n                } else if (time3 == '中') {\n                    result.start.imply('hour', 12);\n                    result.start.imply('meridiem', 1);\n                } else if (time3 == '夜' || time3 == '晚') {\n                    result.start.imply('hour', 22);\n                    result.start.imply('meridiem', 1);\n                } else if (time3 == '凌') {\n                    result.start.imply('hour', 0);\n                }\n            }\n        }\n\n        result.start.assign('day', startMoment.date())\n        result.start.assign('month', startMoment.month() + 1)\n        result.start.assign('year', startMoment.year())\n        result.tags.ZHHantCasualDateParser = true;\n        return result;\n    };\n};\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar util = require('../../utils/ZH-Hant.js');\n\nvar PATTERN = new RegExp(\n    '(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+|半|幾)(?:\\\\s*)' +\n    '(?:個)?' +\n    '(秒(?:鐘)?|分鐘|小時|鐘|日|天|星期|禮拜|月|年)' +\n    '(?:(?:之|過)?後|(?:之)?內)', 'i'\n);\n\nvar NUMBER_GROUP = 1;\nvar UNIT_GROUP = 2;\n\nexports.Parser = function ZHHantCasualDateParser() {\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt) {\n      var index = match.index;\n      text  = match[0];\n\n      var result = new ParsedResult({\n          index: index,\n          text: text,\n          ref: ref\n      });\n\n      var number = parseInt(match[NUMBER_GROUP]);\n      if (isNaN(number)){\n        number = util.zhStringToNumber(match[NUMBER_GROUP]);\n      }\n\n      if (isNaN(number)){\n        var string = match[NUMBER_GROUP];\n        if (string === '幾'){\n          number = 3;\n        }else if(string === '半'){\n          number = 0.5;\n        }else{\n\n          //just in case\n          return null;\n        }\n      }\n\n      var date = moment(ref);\n      var unit = match[UNIT_GROUP];\n      var unitAbbr = unit[0];\n\n      if (unitAbbr.match(/[日天星禮月年]/)){\n        if(unitAbbr == '日' || unitAbbr == '天'){\n          date.add(number, 'd');\n        }else if(unitAbbr == '星' || unitAbbr == '禮'){\n          date.add(number * 7, 'd');\n        }else if(unitAbbr == '月'){\n          date.add(number, 'month');\n        }else if(unitAbbr == '年'){\n          date.add(number, 'year');\n        }\n\n        result.start.assign('year', date.year());\n        result.start.assign('month', date.month() + 1);\n        result.start.assign('day', date.date());\n        return result;\n      }\n\n      if(unitAbbr == '秒'){\n        date.add(number, 'second');\n      }else if(unitAbbr == '分'){\n        date.add(number, 'minute');\n      }else if(unitAbbr == '小' || unitAbbr == '鐘'){\n        date.add(number, 'hour');\n      }\n\n      result.start.imply('year', date.year());\n      result.start.imply('month', date.month() + 1);\n      result.start.imply('day', date.date());\n      result.start.assign('hour', date.hour());\n      result.start.assign('minute', date.minute());\n      result.start.assign('second', date.second());\n      result.tags.ZHHantDeadlineFormatParser = true;\n      return result;\n    };\n};\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/DE');\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(in|nach)\\\\s*' +\n    '('+ util.INTEGER_WORDS_PATTERN + '|[0-9]+|einigen|eine[rm]\\\\s*halben|eine[rm])\\\\s*' +\n    '(sekunden?|min(?:ute)?n?|stunden?|tag(?:en)?|wochen?|monat(?:en)?|jahr(?:en)?)\\\\s*' +\n    '(?=\\\\W|$)', 'i'\n);\n\nvar STRICT_PATTERN = new RegExp('(\\\\W|^)' +\n    '(in|nach)\\\\s*' +\n    '('+ util.INTEGER_WORDS_PATTERN + '|[0-9]+|eine(?:r|m)?)\\\\s*' +\n    '(sekunden?|minuten?|stunden?|tag(?:en)?)\\\\s*' +\n    '(?=\\\\W|$)', 'i'\n);\n\nexports.Parser = function DEDeadlineFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return this.isStrictMode()? STRICT_PATTERN : PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt){\n\n        var index = match.index + match[1].length;\n        var text  = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var num = match[3].toLowerCase();\n        if (util.INTEGER_WORDS[num] !== undefined) {\n            num = util.INTEGER_WORDS[num];\n        } else if (num === 'einer' || num === 'einem') {\n            num = 1;\n        } else if (num === 'einigen') {\n            num = 3;\n        } else if (/halben/.test(num)) {\n            num = 0.5;\n        } else {\n            num = parseInt(num);\n        }\n\n        var date = moment(ref);\n        if (/tag|woche|monat|jahr/i.test(match[4])) {\n\n            if (/tag/i.test(match[4])) {\n                date.add(num, 'd');\n            } else if (/woche/i.test(match[4])) {\n                date.add(num * 7, 'd');\n            } else if (/monat/i.test(match[4])) {\n                date.add(num, 'month');\n            } else if (/jahr/i.test(match[4])) {\n                date.add(num, 'year');\n            }\n\n            result.start.assign('year', date.year());\n            result.start.assign('month', date.month() + 1);\n            result.start.assign('day', date.date());\n            return result;\n        }\n\n        if (/stunde/i.test(match[4])) {\n\n            date.add(num, 'hour');\n\n        } else if (/min/i.test(match[4])) {\n\n            date.add(num, 'minute');\n\n        } else if (/sekunde/i.test(match[4])) {\n\n            date.add(num, 'second');\n        }\n\n        result.start.imply('year', date.year());\n        result.start.imply('month', date.month() + 1);\n        result.start.imply('day', date.date());\n        result.start.assign('hour', date.hour());\n        result.start.assign('minute', date.minute());\n        result.start.assign('second', date.second());\n        result.tags['DEDeadlineFormatParser'] = true;\n        return result;\n    };\n};\n","/*\n\n\n*/\n\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/DE');\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n        '(?:am\\\\s*?)?' +\n        '(?:(Sonntag|Montag|Dienstag|Mittwoch|Donnerstag|Freitag|Samstag|So|Mo|Di|Mi|Do|Fr|Sa)\\\\s*,?\\\\s*)?' +\n        '(?:den\\\\s*)?' +\n        '([0-9]{1,2})\\\\.' +\n        '(?:\\\\s*(?:bis(?:\\\\s*(?:am|zum))?|\\\\-|\\\\–|\\\\s)\\\\s*([0-9]{1,2})\\\\.)?\\\\s*' +\n        '(Jan(?:uar|\\\\.)?|Feb(?:ruar|\\\\.)?|Mär(?:z|\\\\.)?|Maerz|Mrz\\\\.?|Apr(?:il|\\\\.)?|Mai|Jun(?:i|\\\\.)?|Jul(?:i|\\\\.)?|Aug(?:ust|\\\\.)?|Sep(?:t|t\\\\.|tember|\\\\.)?|Okt(?:ober|\\\\.)?|Nov(?:ember|\\\\.)?|Dez(?:ember|\\\\.)?)' +\n        '(?:' +\n            ',?\\\\s*([0-9]{1,4}(?![^\\\\s]\\\\d))' +\n            '(\\\\s*[vn]\\\\.?\\\\s*C(?:hr)?\\\\.?)?' +\n        ')?' +\n        '(?=\\\\W|$)', 'i'\n    );\n\nvar WEEKDAY_GROUP = 2;\nvar DATE_GROUP = 3;\nvar DATE_TO_GROUP = 4;\nvar MONTH_NAME_GROUP = 5;\nvar YEAR_GROUP = 6;\nvar YEAR_BE_GROUP = 7;\n\nexports.Parser = function DEMonthNameLittleEndianParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var result = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index: match.index + match[1].length,\n            ref: ref,\n        });\n\n        var month = match[MONTH_NAME_GROUP];\n        month = util.MONTH_OFFSET[month.toLowerCase()];\n\n        var day = match[DATE_GROUP];\n        day = parseInt(day);\n\n        var year = null;\n        if (match[YEAR_GROUP]) {\n            year = match[YEAR_GROUP];\n            year = parseInt(year);\n\n            if(match[YEAR_BE_GROUP]){\n                if (/v/i.test(match[YEAR_BE_GROUP])) {\n                    // v.Chr.\n                    year = -year;\n                }\n            } else if (year < 100){\n\n                year = year + 2000;\n            }\n        }\n\n        if(year){\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.assign('year', year);\n        } else {\n\n            //Find the most appropriated year\n            var refMoment = moment(ref);\n            refMoment.month(month - 1);\n            refMoment.date(day);\n            refMoment.year(moment(ref).year());\n\n            var nextYear = refMoment.clone().add(1, 'y');\n            var lastYear = refMoment.clone().add(-1, 'y');\n            if( Math.abs(nextYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){\n                refMoment = nextYear;\n            }\n            else if( Math.abs(lastYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){\n                refMoment = lastYear;\n            }\n\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.imply('year', refMoment.year());\n        }\n\n        // Weekday component\n        if (match[WEEKDAY_GROUP]) {\n            var weekday = match[WEEKDAY_GROUP];\n            weekday = util.WEEKDAY_OFFSET[weekday.toLowerCase()]\n            result.start.assign('weekday', weekday);\n        }\n\n        // Text can be 'range' value. Such as '12 - 13 January 2012'\n        if (match[DATE_TO_GROUP]) {\n            result.end = result.start.clone();\n            result.end.assign('day', parseInt(match[DATE_TO_GROUP]));\n        }\n\n        result.tags['DEMonthNameLittleEndianParser'] = true;\n        return result;\n    };\n}\n","/*\n    \n    The parser for parsing month name and year.\n    \n    EX. \n        - Januar\n        - Januar 2012\n*/\n\nvar moment = require('moment');\n\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/DE');\n\nvar PATTERN = new RegExp('(^|\\\\D\\\\s+|[^\\\\w\\\\s])' +\n    '(Jan\\\\.?|Januar|Feb\\\\.?|Februar|Mär\\\\.?|M(?:ä|ae)rz|Mrz\\\\.?|Apr\\\\.?|April|Mai\\\\.?|Jun\\\\.?|Juni|Jul\\\\.?|Juli|Aug\\\\.?|August|Sep\\\\.?|Sept\\\\.?|September|Okt\\\\.?|Oktober|Nov\\\\.?|November|Dez\\\\.?|Dezember)' + \n    '\\\\s*' +\n    '(?:' +\n        ',?\\\\s*(?:([0-9]{4})(\\\\s*[vn]\\\\.?\\\\s*C(?:hr)?\\\\.?)?|([0-9]{1,4})\\\\s*([vn]\\\\.?\\\\s*C(?:hr)?\\\\.?))' +\n    ')?' +\n    '(?=[^\\\\s\\\\w]|$)', 'i');\n\nvar MONTH_NAME_GROUP = 2;\nvar YEAR_GROUP = 3;\nvar YEAR_BE_GROUP = 4;\nvar YEAR_GROUP2 = 5;\nvar YEAR_BE_GROUP2 = 6;\n\nexports.Parser = function ENMonthNameParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n    \n    this.extract = function(text, ref, match, opt){\n        var result = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index: match.index + match[1].length,\n            ref: ref,\n        });\n\n        \n        var month = match[MONTH_NAME_GROUP];\n        month = util.MONTH_OFFSET[month.toLowerCase()];\n\n        var day = 1;\n\n        var year = null;\n        if (match[YEAR_GROUP] || match[YEAR_GROUP2]) {\n            year = match[YEAR_GROUP] || match[YEAR_GROUP2];\n            year = parseInt(year);\n\n            if (match[YEAR_BE_GROUP] || match[YEAR_BE_GROUP2]) {\n                if (/v/i.test(match[YEAR_BE_GROUP] || match[YEAR_BE_GROUP2])) {\n                    // v.Chr.\n                    year = -year;\n                }\n\n            } else if (year < 100){ \n\n                year = year + 2000;\n            }\n        }\n\n        if(year){\n            result.start.imply('day', day);\n            result.start.assign('month', month);\n            result.start.assign('year', year);\n        } else {\n            \n            //Find the most appropriated year\n            var refMoment = moment(ref);\n            refMoment.month(month - 1);\n            refMoment.date(day);\n\n            var nextYear = refMoment.clone().add(1, 'y');\n            var lastYear = refMoment.clone().add(-1, 'y');\n            if( Math.abs(nextYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){  \n                refMoment = nextYear;\n            }\n            else if( Math.abs(lastYear.diff(moment(ref))) < Math.abs(refMoment.diff(moment(ref))) ){ \n                refMoment = lastYear;\n            }\n\n            result.start.imply('day', day);\n            result.start.assign('month', month);\n            result.start.imply('year', refMoment.year());\n        }\n\n        result.tags['DEMonthNameParser'] = true;\n        return result;\n    }\n}\n\n","/*\n    Date format with slash \"/\" (also \"-\" and \".\") between numbers\n    - Tuesday 11/3/2015\n    - 11/3/2015\n    - 11/3\n*/\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:' +\n        '(?:am\\\\s*?)?' +\n        '((?:sonntag|so|montag|mo|dienstag|di|mittwoch|mi|donnerstag|do|freitag|fr|samstag|sa))' +\n        '\\\\s*\\\\,?\\\\s*' +\n        '(?:den\\\\s*)?' +\n    ')?' +\n    '([0-3]{0,1}[0-9]{1})[\\\\/\\\\.\\\\-]([0-3]{0,1}[0-9]{1})' +\n    '(?:' +\n        '[\\\\/\\\\.\\\\-]' +\n        '([0-9]{4}\\s*\\,?\\s*|[0-9]{2}\\s*\\,?\\s*)' +\n    ')?' +\n    '(\\\\W|$)', 'i');\n\nvar DAYS_OFFSET = {\n    'sonntag': 0, 'so': 0,\n    'montag': 1, 'mo': 1,\n    'dienstag': 2, 'di': 2,\n    'mittwoch': 3, 'mi': 3,\n    'donnerstag': 4, 'do': 4,\n    'freitag': 5, 'fr': 5,\n    'samstag': 6, 'sa': 6\n};\n\n\nvar OPENNING_GROUP = 1;\nvar ENDING_GROUP = 6;\n\nvar WEEKDAY_GROUP = 2;\nvar DAY_GROUP = 3;\nvar MONTH_GROUP = 4;\nvar YEAR_GROUP = 5;\n\nexports.Parser = function DESlashDateFormatParser(argument) {\n    Parser.apply(this, arguments);\n\n    this.pattern = function () { return PATTERN; };\n    this.extract = function(text, ref, match, opt){\n\n        if(match[OPENNING_GROUP] == '/' || match[ENDING_GROUP] == '/') {\n            // Long skip, if there is some overlapping like:\n            // XX[/YY/ZZ]\n            // [XX/YY/]ZZ\n            match.index += match[0].length\n            return;\n        }\n\n        var index = match.index + match[OPENNING_GROUP].length;\n        var text = match[0].substr(match[OPENNING_GROUP].length, match[0].length - match[ENDING_GROUP].length);\n\n\n        var result = new ParsedResult({\n            text: text,\n            index: index,\n            ref: ref,\n        });\n\n        if(text.match(/^\\d\\.\\d$/)) return;\n        if(text.match(/^\\d\\.\\d{1,2}\\.\\d{1,2}$/)) return;\n\n        // MM/dd -> OK\n        // MM.dd -> NG\n        if(!match[YEAR_GROUP] && match[0].indexOf('/') < 0) return;\n\n        var date = null;\n        var year = match[YEAR_GROUP] || moment(ref).year() + '';\n        var month = match[MONTH_GROUP];\n        var day   = match[DAY_GROUP];\n\n        month = parseInt(month);\n        day  = parseInt(day);\n        year = parseInt(year);\n\n        if (month < 1 || month > 12) return null;\n        if(day < 1 || day > 31) return null;\n\n        if(year < 100){\n            if (year > 50) {\n                year = year + 1900;\n            } else {\n                year = year + 2000;\n            }\n        }\n\n        result.start.assign('day', day);\n        result.start.assign('month', month);\n        result.start.assign('year', year);\n\n        //Day of week\n        if(match[WEEKDAY_GROUP]) {\n            result.start.assign('weekday', DAYS_OFFSET[match[WEEKDAY_GROUP].toLowerCase()]);\n        }\n\n        result.tags['DESlashDateFormatParser'] = true;\n        return result;\n    };\n};\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/DE');\n\nvar PATTERN = new RegExp('' +\n    '(\\\\W|^)vor\\\\s*' +\n    '(' + util.INTEGER_WORDS_PATTERN + '|[0-9]+|einigen|eine[rm]\\\\s*halben|eine[rm])\\\\s*' +\n    '(sekunden?|min(?:ute)?n?|stunden?|wochen?|tag(?:en)?|monat(?:en)?|jahr(?:en)?)\\\\s*' +\n    '(?=(?:\\\\W|$))', 'i');\n\nvar STRICT_PATTERN = new RegExp('' +\n    '(\\\\W|^)vor\\\\s*' +\n    '([0-9]+|eine(?:r|m))\\\\s*' +\n    '(sekunden?|minuten?|stunden?|tag(?:en)?)' +\n    '(?=(?:\\\\W|$))', 'i');\n\nexports.Parser = function DETimeAgoFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return this.isStrictMode()? STRICT_PATTERN : PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt){\n\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\n\n        var text = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n        index = match.index + match[1].length;\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var num = match[2].toLowerCase() ;\n        if (util.INTEGER_WORDS[num] !== undefined) {\n            num = util.INTEGER_WORDS[num];\n        } else if (num === 'einer' || num === 'einem') {\n            num = 1;\n        } else if (num === 'einigen') {\n            num = 3;\n        } else if (/halben/.test(num)) {\n            num = 0.5;\n        } else {\n            num = parseInt(num);\n        }\n\n        var date = moment(ref);\n\n        if (/stunde|min|sekunde/i.test(match[3])) {\n            if (/stunde/i.test(match[3])) {\n\n                date.add(-num, 'hour');\n\n            } else if (/min/i.test(match[3])) {\n\n                date.add(-num, 'minute');\n\n            } else if (/sekunde/i.test(match[3])) {\n\n                date.add(-num, 'second');\n            }\n\n            result.start.imply('day', date.date());\n            result.start.imply('month', date.month() + 1);\n            result.start.imply('year', date.year());\n            result.start.assign('hour', date.hour());\n            result.start.assign('minute', date.minute());\n            result.start.assign('second', date.second());\n            result.tags['DETimeAgoFormatParser'] = true;\n            return result;\n        }\n\n        if (/woche/i.test(match[3])) {\n            date.add(-num, 'week');\n\n            result.start.imply('day', date.date());\n            result.start.imply('month', date.month() + 1);\n            result.start.imply('year', date.year());\n            result.start.imply('weekday', date.day());\n            return result;\n        }\n\n        if (/tag/i.test(match[3])) {\n            date.add(-num, 'd');\n        }\n\n        if (/monat/i.test(match[3])) {\n            date.add(-num, 'month');\n        }\n\n        if (/jahr/i.test(match[3])) {\n\n            date.add(-num, 'year');\n        }\n\n        result.start.assign('day', date.date());\n        result.start.assign('month', date.month() + 1);\n        result.start.assign('year', date.year());\n        return result;\n\n    };\n}\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar ParsedComponents = require('../../result').ParsedComponents;\n\nvar FIRST_REG_PATTERN  = new RegExp(\"(^|\\\\s|T)\" +\n    \"(?:(?:um|von)\\\\s*)?\" + \n    \"(\\\\d{1,4}|mittags?|mitternachts?)\" + \n    \"(?:\" + \n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" + \n        \"(?:\" + \n            \"(?:\\\\:|\\\\：)(\\\\d{2})\" + \n        \")?\" + \n    \")?\" +\n    \"(?:\\\\s*uhr)?\" +\n    \"(?:\\\\s*(morgens|vormittags|mittags|nachmittags|abends|nachts))?\" + \n    \"(?=\\\\W|$)\", 'i');\n\n\nvar SECOND_REG_PATTERN = new RegExp(\"^\\\\s*\" + \n    \"(\\\\-|\\\\–|\\\\~|\\\\〜|bis|\\\\?)\\\\s*\" + \n    \"(\\\\d{1,4})\" +\n    \"(?:\" + \n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" + \n        \"(?:\" + \n            \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" + \n        \")?\" + \n    \")?\" + \n    \"(?:\\\\s*(morgens|vormittags|mittags|nachmittags|abends|nachts))?\" + \n    \"(?=\\\\W|$)\", 'i');\n\nvar HOUR_GROUP    = 2;\nvar MINUTE_GROUP  = 3;\nvar SECOND_GROUP  = 4;\nvar AM_PM_HOUR_GROUP = 5;\n\n\nexports.Parser = function DETimeExpressionParser() {\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return FIRST_REG_PATTERN; }\n    \n    this.extract = function(text, ref, match, opt){ \n        \n        // This pattern can be overlaped Ex. [12] AM, 1[2] AM\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\n        var refMoment = moment(ref);\n        var result = new ParsedResult();\n        result.ref = ref;\n        result.index = match.index + match[1].length;\n        result.text  = match[0].substring(match[1].length);\n        result.tags['DETimeExpressionParser'] = true;\n\n        result.start.imply('day',   refMoment.date());\n        result.start.imply('month', refMoment.month()+1);\n        result.start.imply('year',  refMoment.year());\n        \n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if(match[SECOND_GROUP] != null){ \n            var second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.start.assign('second', second);\n        }\n        \n        // ----- Hours\n        if (/mittags?/i.test(match[HOUR_GROUP])) {\n            meridiem = 1; \n            hour = 12;\n        } else if (/mitternachts?/i.test(match[HOUR_GROUP])) {\n            meridiem = 0; \n            hour = 0;\n        } else {\n            hour = parseInt(match[HOUR_GROUP]);\n        }\n        \n        // ----- Minutes\n        if(match[MINUTE_GROUP] != null){ \n            minute = parseInt(match[MINUTE_GROUP]);\n        } else if(hour > 100) { \n            minute = hour%100;\n            hour   = parseInt(hour/100);\n        } \n        \n        if(minute >= 60) {\n            return null;\n        }\n\n        if(hour > 24) {\n            return null;\n        }\n        if (hour >= 12) { \n            meridiem = 1;\n        }\n\n        // ----- AM & PM  \n        if (match[AM_PM_HOUR_GROUP] != null) {\n            if (hour > 12) return null;\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if (ampm === 'morgens' || ampm === 'vormittags') {\n                meridiem = 0; \n                if(hour == 12) hour = 0;\n            } else {\n                meridiem = 1; \n                if(hour != 12) hour += 12;\n            }\n        } \n\n        result.start.assign('hour', hour);\n        result.start.assign('minute', minute);\n\n        if (meridiem >= 0) {\n            result.start.assign('meridiem', meridiem);\n        } else {\n            if (hour < 12) {\n                result.start.imply('meridiem', 0);\n            } else {\n                result.start.imply('meridiem', 1);\n            }\n        }\n        \n        // ==============================================================\n        //                  Extracting the 'to' chunk\n        // ==============================================================\n        match = SECOND_REG_PATTERN.exec(text.substring(result.index + result.text.length));\n        if (!match) {\n            // Not accept number only result\n            if (result.text.match(/^\\d+$/)) { \n                return null;\n            }\n            return result;\n        }\n\n\n\n        // Pattern \"YY.YY -XXXX\" is more like timezone offset\n        if (match[0].match(/^\\s*(\\+|\\-)\\s*\\d{3,4}$/)) {\n            return result;\n        }\n\n        if(result.end == null){\n            result.end = new ParsedComponents(null, result.start.date());\n        }\n\n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if(match[SECOND_GROUP] != null){ \n            var second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.end.assign('second', second);\n        }\n\n        hour = parseInt(match[2]);\n        \n        // ----- Minute\n        if (match[MINUTE_GROUP]!= null) {\n            \n            minute = parseInt(match[MINUTE_GROUP]);\n            if(minute >= 60) return result;\n            \n        } else if (hour > 100) {\n\n            minute = hour%100;\n            hour   = parseInt(hour/100);\n        }\n\n        if(minute >= 60) {\n            return null;\n        }\n\n        if(hour > 24) {\n            return null;\n        }\n        if (hour >= 12) { \n            meridiem = 1;\n        }\n        \n        // ----- AM & PM \n        if (match[AM_PM_HOUR_GROUP] != null) {\n\n            if (hour > 12) return null;\n\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if (ampm === 'morgens' || ampm === 'vormittags') {\n                meridiem = 0; \n                if(hour == 12) {\n                    hour = 0;\n                    if (!result.end.isCertain('day')) {\n                        result.end.imply('day', result.end.get('day') + 1);\n                    }\n                }\n            } else {\n                meridiem = 1; \n                if(hour != 12) hour += 12;\n            }\n            \n            if (!result.start.isCertain('meridiem')) {\n                if (meridiem == 0) {\n                    \n                    result.start.imply('meridiem', 0);\n                    \n                    if (result.start.get('hour') == 12) {\n                        result.start.assign('hour', 0);\n                    }\n\n                } else {\n\n                    result.start.imply('meridiem', 1);\n                    \n                    if (result.start.get('hour') != 12) {\n                        result.start.assign('hour', result.start.get('hour') + 12); \n                    }\n                }\n            }\n        }\n\n        result.text = result.text + match[0];\n        result.end.assign('hour', hour);\n        result.end.assign('minute', minute);\n        if (meridiem >= 0) {\n            result.end.assign('meridiem', meridiem);\n        } else {\n            var startAtPM = result.start.isCertain('meridiem') && result.start.get('meridiem') == 1;\n            if (startAtPM && result.start.get('hour') > hour) {\n                // 10pm - 1 (am)\n                result.end.imply('meridiem', 0);\n\n            } else if (hour > 12) {\n                result.end.imply('meridiem', 1);\n            }\n        }\n\n        if (result.end.date().getTime() < result.start.date().getTime()) {\n            result.end.imply('day', result.end.get('day') + 1)\n        }\n        \n        return result;\n    }\n}\n","/*\n\n\n*/\n\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp(\n    '(\\\\W|^)(' +\n        'jetzt|' +\n        '(?:heute|diesen)\\\\s*(morgen|vormittag|mittag|nachmittag|abend)|' +\n        '(?:heute|diese)\\\\s*nacht|' +\n        'heute|' +\n        '(?:(?:ü|ue)ber)?morgen(?:\\\\s*(morgen|vormittag|mittag|nachmittag|abend|nacht))?|' +\n        '(?:vor)?gestern(?:\\\\s*(morgen|vormittag|mittag|nachmittag|abend|nacht))?|' +\n        'letzte\\\\s*nacht' +\n    ')(?=\\\\W|$)', 'i');\n\nexports.Parser = function DECasualDateParser() {\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt) {\n        var text = match[0].substr(match[1].length);\n        var index = match.index + match[1].length;\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var refMoment = moment(ref);\n        var startMoment = refMoment.clone();\n        var lowerText = text.toLowerCase();\n\n        if (/(?:heute|diese)\\s*nacht/.test(lowerText)) {\n            // Normally means this coming midnight\n            result.start.imply('hour', 22);\n            result.start.imply('meridiem', 1);\n        } else if (/^(?:ü|ue)bermorgen/.test(lowerText)) {\n            startMoment.add(refMoment.hour() > 1 ? 2 : 1, 'day');\n        } else if (/^morgen/.test(lowerText)) {\n            // Check not \"Tomorrow\" on late night\n            if (refMoment.hour() > 1) {\n                startMoment.add(1, 'day');\n            }\n        } else if (/^gestern/.test(lowerText)) {\n            startMoment.add(-1, 'day');\n        } else if (/^vorgestern/.test(lowerText)) {\n            startMoment.add(-2, 'day');\n        } else if (/letzte\\s*nacht/.test(lowerText)) {\n            result.start.imply('hour', 0);\n            if (refMoment.hour() > 6) {\n                startMoment.add(-1, 'day');\n            }\n        } else if (lowerText === 'jetzt') {\n          result.start.imply('hour', refMoment.hour());\n          result.start.imply('minute', refMoment.minute());\n          result.start.imply('second', refMoment.second());\n          result.start.imply('millisecond', refMoment.millisecond());\n        }\n\n        var secondMatch = match[3] || match[4] || match[5];\n        if (secondMatch) {\n            switch (secondMatch.toLowerCase()) {\n                case 'morgen':\n                    result.start.imply('hour', 6);\n                    break;\n                case 'vormittag':\n                    result.start.imply('hour', 9);\n                    break;\n                case 'mittag':\n                    result.start.imply('hour', 12);\n                    break;\n                case 'nachmittag':\n                    result.start.imply('hour', 15);\n                    result.start.imply('meridiem', 1);\n                    break;\n                case 'abend':\n                    result.start.imply('hour', 18);\n                    result.start.imply('meridiem', 1);\n                    break;\n                case 'nacht':\n                    result.start.imply('hour', 0);\n                    break;\n            }\n        }\n\n        result.start.assign('day', startMoment.date())\n        result.start.assign('month', startMoment.month() + 1)\n        result.start.assign('year', startMoment.year())\n        result.tags['DECasualDateParser'] = true;\n        return result;\n    }\n}\n","/*\n\n\n*/\nvar moment = require('moment');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar DAYS_OFFSET = {\n    'sonntag': 0, 'so': 0,\n    'montag': 1, 'mo': 1,\n    'dienstag': 2, 'di': 2,\n    'mittwoch': 3, 'mi': 3,\n    'donnerstag': 4, 'do': 4,\n    'freitag': 5, 'fr': 5,\n    'samstag': 6, 'sa': 6\n};\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' +\n    '(?:a[mn]\\\\s*?)?' +\n    '(?:(diese[mn]|letzte[mn]|n(?:ä|ae)chste[mn])\\\\s*)?' +\n    '(' + Object.keys(DAYS_OFFSET).join('|') + ')' +\n    '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' +\n    '(?:\\\\s*(diese|letzte|n(?:ä|ae)chste)\\\\s*woche)?' +\n    '(?=\\\\W|$)', 'i');\n\nvar PREFIX_GROUP = 2;\nvar WEEKDAY_GROUP = 3;\nvar POSTFIX_GROUP = 4;\n\nexports.Parser = function DEWeekdayParser() {\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; };\n\n    this.extract = function(text, ref, match, opt){\n        var index = match.index + match[1].length;\n        var text = match[0].substr(match[1].length, match[0].length - match[1].length);\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\n        var offset = DAYS_OFFSET[dayOfWeek];\n        if(offset === undefined) return null;\n\n        var startMoment = moment(ref);\n        var prefix = match[PREFIX_GROUP];\n        var postfix = match[POSTFIX_GROUP];\n\n        var refOffset = startMoment.day();\n        var norm = prefix || postfix;\n        norm = norm || '';\n        norm = norm.toLowerCase();\n        if (/letzte/.test(norm)) {\n            startMoment.day(offset - 7);\n        } else if (/n(?:ä|ae)chste/.test(norm)) {\n            startMoment.day(offset + 7);\n        } else if (/diese/.test(norm)) {\n            if ( opt.forwardDatesOnly && refOffset > offset ) {\n                startMoment.day(offset + 7);\n            } else {\n                startMoment.day(offset);\n            }\n        } else {\n            if ( opt.forwardDatesOnly && refOffset > offset ) {\n                startMoment.day(offset + 7);\n            } else if (!opt.forwardDatesOnly && Math.abs(offset - 7 - refOffset) < Math.abs(offset - refOffset)) {\n                startMoment.day(offset - 7);\n            } else if (!opt.forwardDatesOnly && Math.abs(offset + 7 - refOffset) < Math.abs(offset - refOffset)) {\n                startMoment.day(offset + 7);\n            } else {\n                startMoment.day(offset);\n            }\n        }\n\n        result.start.assign('weekday', offset);\n        result.start.imply('day', startMoment.date());\n        result.start.imply('month', startMoment.month() + 1);\n        result.start.imply('year', startMoment.year());\n        return result;\n    }\n};\n","var NUMBER ={\n  '零':0,\n  '一':1,\n  '二':2,\n  '兩':2,\n  '三':3,\n  '四':4,\n  '五':5,\n  '六':6,\n  '七':7,\n  '八':8,\n  '九':9,\n  '十':10,\n  '廿':20,\n  '卅':30,\n};\n\nvar WEEKDAY_OFFSET ={\n  '天':0,\n  '日':0,\n  '一':1,\n  '二':2,\n  '三':3,\n  '四':4,\n  '五':5,\n  '六':6,\n};\n\nexports.NUMBER = NUMBER;\nexports.WEEKDAY_OFFSET = WEEKDAY_OFFSET;\n\nexports.zhStringToNumber=function(text){\n  var number = 0;\n  for(var i=0; i<text.length ;i++){\n    var char = text[i];\n    if(char === '十'){\n      number = number=== 0 ? NUMBER[char] : (number * NUMBER[char]);\n    }else{\n      number += NUMBER[char];\n    }\n  }\n  return number;\n};\n\nexports.zhStringToYear=function(text){\n  var string = '';\n  for(var i=0; i<text.length ;i++){\n    var char = text[i];\n    string = string + NUMBER[char];\n  }\n  return parseInt(string);\n};\n","exports.WEEKDAY_OFFSET = { \n    'sunday': 0, \n    'sun': 0, \n    'monday': 1, \n    'mon': 1,\n    'tuesday': 2, \n    'tue':2, \n    'wednesday': 3, \n    'wed': 3, \n    'thursday': 4, \n    'thur': 4, \n    'thu': 4,\n    'friday': 5, \n    'fri': 5,\n    'saturday': 6, \n    'sat': 6\n};\n    \nexports.MONTH_OFFSET = { \n    'january': 1,\n    'jan': 1,\n    'jan.': 1,\n    'february': 2,\n    'feb': 2,\n    'feb.': 2,\n    'march': 3,\n    'mar': 3,\n    'mar.': 3,\n    'april': 4,\n    'apr': 4,\n    'apr.': 4,\n    'may': 5,\n    'june': 6,\n    'jun': 6,\n    'jun.': 6,\n    'july': 7,\n    'jul': 7,\n    'jul.': 7,\n    'august': 8,\n    'aug': 8,\n    'aug.': 8,\n    'september': 9,\n    'sep': 9,\n    'sep.': 9,\n    'sept': 9,\n    'sept.': 9,\n    'october': 10,\n    'oct': 10,\n    'oct.': 10,\n    'november': 11,\n    'nov': 11,\n    'nov.': 11,\n    'december': 12,\n    'dec': 12,\n    'dec.': 12\n};\n\nexports.INTEGER_WORDS = {\n    'one' : 1,\n    'two' : 2,\n    'three' : 3,\n    'four' : 4,\n    'five' : 5,\n    'six' : 6,\n    'seven' : 7,\n    'eight' : 8,\n    'nine' : 9,\n    'ten' : 10,\n    'eleven' : 11,\n    'twelve' : 12\n};\nexports.INTEGER_WORDS_PATTERN = '(?:' + Object.keys(exports.INTEGER_WORDS).join('|') +')';\n\nexports.ORDINAL_WORDS = {\n    'first' : 1,\n    'second': 2,\n    'third': 3,\n    'fourth': 4,\n    'fifth': 5,\n    'sixth': 6,\n    'seventh': 7,\n    'eighth': 8,\n    'ninth': 9,\n    'tenth': 10,\n    'eleventh': 11,\n    'twelfth': 12,\n    'thirteenth': 13,\n    'fourteenth': 14,\n    'fifteenth': 15,\n    'sixteenth': 16,\n    'seventeenth': 17,\n    'eighteenth': 18,\n    'nineteenth': 19,\n    'twentieth': 20,\n    'twenty first': 21,\n    'twenty second': 22,\n    'twenty third': 23,\n    'twenty fourth': 24,\n    'twenty fifth': 25,\n    'twenty sixth': 26,\n    'twenty seventh': 27,\n    'twenty eighth': 28,\n    'twenty ninth': 29,\n    'thirtieth': 30,\n    'thirty first': 31\n};\nexports.ORDINAL_WORDS_PATTERN = '(?:' + Object.keys(exports.ORDINAL_WORDS).join('|').replace(/ /g, '[ -]') + ')';","\n\n/**\n * to-hankaku.js\n * convert to ascii code strings.\n *\n * @version 1.0.1\n * @author think49\n * @url https://gist.github.com/964592\n * @license http://www.opensource.org/licenses/mit-license.php (The MIT License)\n */\n \nexports.toHankaku = (function (String, fromCharCode) {\n \n    function toHankaku (string) {\n        return String(string).replace(/\\u2019/g, '\\u0027').replace(/\\u201D/g, '\\u0022').replace(/\\u3000/g, '\\u0020').replace(/\\uFFE5/g, '\\u00A5').replace(/[\\uFF01\\uFF03-\\uFF06\\uFF08\\uFF09\\uFF0C-\\uFF19\\uFF1C-\\uFF1F\\uFF21-\\uFF3B\\uFF3D\\uFF3F\\uFF41-\\uFF5B\\uFF5D\\uFF5E]/g, alphaNum);\n    }\n \n    function alphaNum (token) {\n        return fromCharCode(token.charCodeAt(0) - 65248);\n    }\n \n    return toHankaku;\n})(String, String.fromCharCode);\n\n/**\n * to-zenkaku.js\n * convert to multi byte strings.\n *\n * @version 1.0.2\n * @author think49\n * @url https://gist.github.com/964592\n * @license http://www.opensource.org/licenses/mit-license.php (The MIT License)\n */\nexports.toZenkaku = (function (String, fromCharCode) {\n \n    function toZenkaku (string) {\n        return String(string).replace(/\\u0020/g, '\\u3000').replace(/\\u0022/g, '\\u201D').replace(/\\u0027/g, '\\u2019').replace(/\\u00A5/g, '\\uFFE5').replace(/[!#-&(),-9\\u003C-?A-[\\u005D_a-{}~]/g, alphaNum);\n    }\n \n    function alphaNum (token) {\n        return fromCharCode(token.charCodeAt(0) + 65248);\n    }\n \n    return toZenkaku;\n})(String, String.fromCharCode);","exports.WEEKDAY_OFFSET = {\n    'domingo': 0,\n    'dom': 0,\n    'lunes': 1,\n    'lun': 1,\n    'martes': 2,\n    'mar':2,\n    'miércoles': 3,\n    'miercoles': 3,\n    'mie': 3,\n    'jueves': 4,\n    'jue': 4,\n    'viernes': 5,\n    'vie': 5,\n    'sábado': 6,\n    'sabado': 6,\n    'sab': 6,}\n\nexports.MONTH_OFFSET = {\n    'enero': 1,\n    'ene': 1,\n    'ene.': 1,\n    'febrero': 2,\n    'feb': 2,\n    'feb.': 2,\n    'marzo': 3,\n    'mar': 3,\n    'mar.': 3,\n    'abril': 4,\n    'abr': 4,\n    'abr.': 4,\n    'mayo': 5,\n    'may': 5,\n    'may.': 5,\n    'junio': 6,\n    'jun': 6,\n    'jun.': 6,\n    'julio': 7,\n    'jul': 7,\n    'jul.': 7,\n    'agosto': 8,\n    'ago': 8,\n    'ago.': 8,\n    'septiembre': 9,\n    'sep': 9,\n    'sept': 9,\n    'sep.': 9,\n    'sept.': 9,\n    'octubre': 10,\n    'oct': 10,\n    'oct.': 10,\n    'noviembre': 11,\n    'nov': 11,\n    'nov.': 11,\n    'diciembre': 12,\n    'dic': 12,\n    'dic.': 12,\n}\n","exports.WEEKDAY_OFFSET = { \r\n    'dimanche': 0, \r\n    'dim': 0, \r\n    'lundi': 1, \r\n    'lun': 1,\r\n    'mardi': 2, \r\n    'mar':2, \r\n    'mercredi': 3, \r\n    'mer': 3, \r\n    'jeudi': 4, \r\n    'jeu': 4, \r\n    'vendredi': 5, \r\n    'ven': 5,\r\n    'samedi': 6, \r\n    'sam': 6\r\n};\r\n    \r\nexports.MONTH_OFFSET = { \r\n    'janvier': 1,\r\n    'jan': 1,\r\n    'jan.': 1,\r\n    'février': 2,\r\n    'fév': 2,\r\n    'fév.': 2,\r\n    'mars': 3,\r\n    'mar': 3,\r\n    'mar.': 3,\r\n    'avril': 4,\r\n    'avr': 4,\r\n    'avr.': 4,\r\n    'mai': 5,\r\n    'juin': 6,\r\n    'jun': 6,\r\n    'juillet': 7,\r\n    'jul': 7,\r\n    'jul.': 7,\r\n    'août': 8,\r\n    'aout': 8,\r\n    'septembre': 9,\r\n    'sep': 9,\r\n    'sep.': 9,\r\n    'sept': 9,\r\n    'sept.': 9,\r\n    'octobre': 10,\r\n    'oct': 10,\r\n    'oct.': 10,\r\n    'novembre': 11,\r\n    'nov': 11,\r\n    'nov.': 11,\r\n    'décembre': 12,\r\n    'dec': 12,\r\n    'dec.': 12\r\n};\r\n\r\nexports.INTEGER_WORDS_PATTERN = '(?:un|deux|trois|quatre|cinq|six|sept|huit|neuf|dix|onze|douze|treize)';\r\nexports.INTEGER_WORDS = {\r\n    'un' : 1,\r\n    'deux' : 2,\r\n    'trois' : 3,\r\n    'quatre' : 4,\r\n    'cinq' : 5,\r\n    'six' : 6,\r\n    'sept' : 7,\r\n    'huit' : 8,\r\n    'neuf' : 9,\r\n    'dix' : 10,\r\n    'onze' : 11,\r\n    'douze' : 12,\r\n    'treize' : 13,\r\n};\r\n","exports.WEEKDAY_OFFSET = { \n    'sonntag': 0, \n    'so': 0, \n    'montag': 1, \n    'mo': 1,\n    'dienstag': 2, \n    'di':2, \n    'mittwoch': 3, \n    'mi': 3, \n    'donnerstag': 4, \n    'do': 4, \n    'freitag': 5, \n    'fr': 5,\n    'samstag': 6, \n    'sa': 6\n};\n    \nexports.MONTH_OFFSET = { \n    'januar': 1,\n    'jan': 1,\n    'jan.': 1,\n    'februar': 2,\n    'feb': 2,\n    'feb.': 2,\n    'märz': 3,\n    'maerz': 3,\n    'mär': 3,\n    'mär.': 3,\n    'mrz': 3,\n    'mrz.': 3,\n    'april': 4,\n    'apr': 4,\n    'apr.': 4,\n    'mai': 5,\n    'juni': 6,\n    'jun': 6,\n    'jun.': 6,\n    'juli': 7,\n    'jul': 7,\n    'jul.': 7,\n    'august': 8,\n    'aug': 8,\n    'aug.': 8,\n    'september': 9,\n    'sep': 9,\n    'sep.': 9,\n    'sept': 9,\n    'sept.': 9,\n    'oktober': 10,\n    'okt': 10,\n    'okt.': 10,\n    'november': 11,\n    'nov': 11,\n    'nov.': 11,\n    'dezember': 12,\n    'dez': 12,\n    'dez.': 12\n};\n\nexports.INTEGER_WORDS_PATTERN = '(?:eins|zwei|drei|vier|fünf|fuenf|sechs|sieben|acht|neun|zehn|elf|zwölf|zwoelf)';\nexports.INTEGER_WORDS = {\n    'eins' : 1,\n    'zwei' : 2,\n    'drei' : 3,\n    'vier' : 4,\n    'fünf' : 5,\n    'fuenf': 5,\n    'sechs' : 6,\n    'sieben' : 7,\n    'acht' : 8,\n    'neun' : 9,\n    'zehn' : 10,\n    'elf' : 11,\n    'zwölf' : 12,\n    'zwoelf' : 12\n};\n","//! moment.js\n//! version : 2.10.6\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, function () { 'use strict';\n\n    var hookCallback;\n\n    function utils_hooks__hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function create_utc__createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    function valid__isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            m._isValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated;\n\n            if (m._strict) {\n                m._isValid = m._isValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n        }\n        return m._isValid;\n    }\n\n    function valid__createInvalid (flags) {\n        var m = create_utc__createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    var momentProperties = utils_hooks__hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (typeof from._isAMomentObject !== 'undefined') {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (typeof from._i !== 'undefined') {\n            to._i = from._i;\n        }\n        if (typeof from._f !== 'undefined') {\n            to._f = from._f;\n        }\n        if (typeof from._l !== 'undefined') {\n            to._l = from._l;\n        }\n        if (typeof from._strict !== 'undefined') {\n            to._strict = from._strict;\n        }\n        if (typeof from._tzm !== 'undefined') {\n            to._tzm = from._tzm;\n        }\n        if (typeof from._isUTC !== 'undefined') {\n            to._isUTC = from._isUTC;\n        }\n        if (typeof from._offset !== 'undefined') {\n            to._offset = from._offset;\n        }\n        if (typeof from._pf !== 'undefined') {\n            to._pf = getParsingFlags(from);\n        }\n        if (typeof from._locale !== 'undefined') {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i in momentProperties) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (typeof val !== 'undefined') {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            utils_hooks__hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function Locale() {\n    }\n\n    var locales = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && typeof module !== 'undefined' &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                require('./locale/' + name);\n                // because defineLocale currently also sets the global locale, we\n                // want to undo that for lazy loaded locales\n                locale_locales__getSetGlobalLocale(oldLocale);\n            } catch (e) { }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function locale_locales__getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (typeof values === 'undefined') {\n                data = locale_locales__getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, values) {\n        if (values !== null) {\n            values.abbr = name;\n            locales[name] = locales[name] || new Locale();\n            locales[name].set(values);\n\n            // backwards compat for now: also set the locale\n            locale_locales__getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    // returns locale data\n    function locale_locales__getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                get_set__set(this, unit, value);\n                utils_hooks__hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get_set__get(this, unit);\n            }\n        };\n    }\n\n    function get_set__get (mom, unit) {\n        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();\n    }\n\n    function get_set__set (mom, unit, value) {\n        return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n    }\n\n    // MOMENTS\n\n    function getSet (units, value) {\n        var unit;\n        if (typeof units === 'object') {\n            for (unit in units) {\n                this.set(unit, units[unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (typeof this[units] === 'function') {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '';\n            for (i = 0; i < length; i++) {\n                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    var matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n    var regexes = {};\n\n    function isFunction (sth) {\n        // https://github.com/moment/moment/issues/2325\n        return typeof sth === 'function' &&\n            Object.prototype.toString.call(sth) === '[object Function]';\n    }\n\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }).replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (typeof callback === 'number') {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n\n    function daysInMonth(year, month) {\n        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  matchWord);\n    addRegexToken('MMMM', matchWord);\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m) {\n        return this._months[m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m) {\n        return this._monthsShort[m.month()];\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = create_utc__createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        // TODO: Move this out of here!\n        if (typeof value === 'string') {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (typeof value !== 'number') {\n                return mom;\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            utils_hooks__hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get_set__get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    function warn(msg) {\n        if (utils_hooks__hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (firstTime) {\n                warn(msg + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    utils_hooks__hooks.suppressDeprecationWarnings = false;\n\n    var from_string__isoRegex = /^\\s*(?:[+-]\\d{6}|\\d{4})-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d{2}-\\d{2}/],\n        ['YYYY-MM-DD', /\\d{4}-\\d{2}-\\d{2}/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d{2}-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d{2}/],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss', /(T| )\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /(T| )\\d\\d:\\d\\d/],\n        ['HH', /(T| )\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = from_string__isoRegex.exec(string);\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(string)) {\n                    config._f = isoDates[i][0];\n                    break;\n                }\n            }\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(string)) {\n                    // match[6] should be 'T' or space\n                    config._f += (match[6] || ' ') + isoTimes[i][0];\n                    break;\n                }\n            }\n            if (string.match(matchOffset)) {\n                config._f += 'Z';\n            }\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n            utils_hooks__hooks.createFromInputFallback(config);\n        }\n    }\n\n    utils_hooks__hooks.createFromInputFallback = deprecate(\n        'moment construction falls back to js Date. This is ' +\n        'discouraged and will be removed in upcoming major ' +\n        'release. Please refer to ' +\n        'https://github.com/moment/moment/issues/1407 for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    function createDate (y, m, d, h, M, s, ms) {\n        //can't just apply() to create a date:\n        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        //the date constructor doesn't accept years < 1970\n        if (y < 1970) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n        if (y < 1970) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    utils_hooks__hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', false);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // firstDayOfWeek       0 = sun, 6 = sat\n    //                      the day of the week that starts the week\n    //                      (usually sunday or monday)\n    // firstDayOfWeekOfYear 0 = sun, 6 = sat\n    //                      the first week is the week that contains the first\n    //                      of this day of the week\n    //                      (eg. ISO weeks use thursday (4))\n    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n        var end = firstDayOfWeekOfYear - firstDayOfWeek,\n            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),\n            adjustedMoment;\n\n\n        if (daysToDayOfWeek > end) {\n            daysToDayOfWeek -= 7;\n        }\n\n        if (daysToDayOfWeek < end - 7) {\n            daysToDayOfWeek += 7;\n        }\n\n        adjustedMoment = local__createLocal(mom).add(daysToDayOfWeek, 'd');\n        return {\n            week: Math.ceil(adjustedMoment.dayOfYear() / 7),\n            year: adjustedMoment.year()\n        };\n    }\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {\n        var week1Jan = 6 + firstDayOfWeek - firstDayOfWeekOfYear, janX = createUTCDate(year, 0, 1 + week1Jan), d = janX.getUTCDay(), dayOfYear;\n        if (d < firstDayOfWeek) {\n            d += 7;\n        }\n\n        weekday = weekday != null ? 1 * weekday : firstDayOfWeek;\n\n        dayOfYear = 1 + week1Jan + 7 * (week - 1) - d + weekday;\n\n        return {\n            year: dayOfYear > 0 ? year : year - 1,\n            dayOfYear: dayOfYear > 0 ?  dayOfYear : daysInYear(year - 1) + dayOfYear\n        };\n    }\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        var now = new Date();\n        if (config._useUTC) {\n            return [now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()];\n        }\n        return [now.getFullYear(), now.getMonth(), now.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse)) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);\n            week = defaults(w.w, 1);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < dow) {\n                    ++week;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);\n\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n\n    utils_hooks__hooks.ISO_8601 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === utils_hooks__hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (getParsingFlags(config).bigHour === true &&\n                config._a[HOUR] <= 12 &&\n                config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!valid__isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = [i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond];\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || locale_locales__getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return valid__createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else if (isDate(input)) {\n            config._d = input;\n        } else {\n            configFromInput(config);\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (input === undefined) {\n            config._d = new Date();\n        } else if (isDate(input)) {\n            config._d = new Date(+input);\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (typeof(input) === 'object') {\n            configFromObject(config);\n        } else if (typeof(input) === 'number') {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            utils_hooks__hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function local__createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n         'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n         function () {\n             var other = local__createLocal.apply(null, arguments);\n             return other < this ? this : other;\n         }\n     );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n        function () {\n            var other = local__createLocal.apply(null, arguments);\n            return other > this ? this : other;\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return local__createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 36e5; // 1000 * 60 * 60\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = locale_locales__getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchOffset);\n    addRegexToken('ZZ', matchOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(string) {\n        var matches = ((string || '').match(matchOffset) || []);\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? +input : +local__createLocal(input)) - (+res);\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(+res._d + diff);\n            utils_hooks__hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return local__createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    utils_hooks__hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(input);\n            }\n            if (Math.abs(input) < 16) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    utils_hooks__hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm) {\n            this.utcOffset(this._tzm);\n        } else if (typeof this._i === 'string') {\n            this.utcOffset(offsetFromString(this._i));\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        input = input ? local__createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (typeof this._isDSTShifted !== 'undefined') {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return !this._isUTC;\n    }\n\n    function isUtcOffset () {\n        return this._isUTC;\n    }\n\n    function isUtc () {\n        return this._isUTC && this._offset === 0;\n    }\n\n    var aspNetRegex = /(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    var create__isoRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;\n\n    function create__createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (typeof input === 'number') {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])        * sign,\n                h  : toInt(match[HOUR])        * sign,\n                m  : toInt(match[MINUTE])      * sign,\n                s  : toInt(match[SECOND])      * sign,\n                ms : toInt(match[MILLISECOND]) * sign\n            };\n        } else if (!!(match = create__isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                d : parseIso(match[4], sign),\n                h : parseIso(match[5], sign),\n                m : parseIso(match[6], sign),\n                s : parseIso(match[7], sign),\n                w : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    create__createDuration.fn = Duration.prototype;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = create__createDuration(val, period);\n            add_subtract__addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = duration._days,\n            months = duration._months;\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (milliseconds) {\n            mom._d.setTime(+mom._d + milliseconds * isAdding);\n        }\n        if (days) {\n            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);\n        }\n        if (months) {\n            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);\n        }\n        if (updateOffset) {\n            utils_hooks__hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add_subtract__add      = createAdder(1, 'add');\n    var add_subtract__subtract = createAdder(-1, 'subtract');\n\n    function moment_calendar__calendar (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || local__createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            diff = this.diff(sod, 'days', true),\n            format = diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n        return this.format(formats && formats[format] || this.localeData().calendar(format, this, local__createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var inputMs;\n        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n        if (units === 'millisecond') {\n            input = isMoment(input) ? input : local__createLocal(input);\n            return +this > +input;\n        } else {\n            inputMs = isMoment(input) ? +input : +local__createLocal(input);\n            return inputMs < +this.clone().startOf(units);\n        }\n    }\n\n    function isBefore (input, units) {\n        var inputMs;\n        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n        if (units === 'millisecond') {\n            input = isMoment(input) ? input : local__createLocal(input);\n            return +this < +input;\n        } else {\n            inputMs = isMoment(input) ? +input : +local__createLocal(input);\n            return +this.clone().endOf(units) < inputMs;\n        }\n    }\n\n    function isBetween (from, to, units) {\n        return this.isAfter(from, units) && this.isBefore(to, units);\n    }\n\n    function isSame (input, units) {\n        var inputMs;\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            input = isMoment(input) ? input : local__createLocal(input);\n            return +this === +input;\n        } else {\n            inputMs = +local__createLocal(input);\n            return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));\n        }\n    }\n\n    function diff (input, units, asFloat) {\n        var that = cloneWithOffset(input, this),\n            zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4,\n            delta, output;\n\n        units = normalizeUnits(units);\n\n        if (units === 'year' || units === 'month' || units === 'quarter') {\n            output = monthDiff(this, that);\n            if (units === 'quarter') {\n                output = output / 3;\n            } else if (units === 'year') {\n                output = output / 12;\n            }\n        } else {\n            delta = this - that;\n            output = units === 'second' ? delta / 1e3 : // 1000\n                units === 'minute' ? delta / 6e4 : // 1000 * 60\n                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n                delta;\n        }\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        return -(wholeMonthDiff + adjust);\n    }\n\n    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function moment_format__toISOString () {\n        var m = this.clone().utc();\n        if (0 < m.year() && m.year() <= 9999) {\n            if ('function' === typeof Date.prototype.toISOString) {\n                // native implementation is ~50x faster, use it when we can\n                return this.toDate().toISOString();\n            } else {\n                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n            }\n        } else {\n            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n        }\n    }\n\n    function format (inputString) {\n        var output = formatMoment(this, inputString || utils_hooks__hooks.defaultFormat);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n        return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(local__createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n        return create__createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(local__createLocal(), withoutSuffix);\n    }\n\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = locale_locales__getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function to_type__valueOf () {\n        return +this._d - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(+this / 1000);\n    }\n\n    function toDate () {\n        return this._offset ? new Date(+this) : this._d;\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function moment_valid__isValid () {\n        return valid__isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = utils_hooks__hooks.parseTwoDigitYear(input);\n    });\n\n    // HELPERS\n\n    function weeksInYear(year, dow, doy) {\n        return weekOfYear(local__createLocal([year, 11, 31 + dow - doy]), dow, doy).week;\n    }\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;\n        return input == null ? year : this.add((input - year), 'y');\n    }\n\n    function getSetISOWeekYear (input) {\n        var year = weekOfYear(this, 1, 4).year;\n        return input == null ? year : this.add((input - year), 'y');\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    addFormatToken('Q', 0, 0, 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0], 10);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   matchWord);\n    addRegexToken('ddd',  matchWord);\n    addRegexToken('dddd', matchWord);\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config) {\n        var weekday = config._locale.weekdaysParse(input);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m) {\n        return this._weekdays[m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return this._weekdaysShort[m.day()];\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return this._weekdaysMin[m.day()];\n    }\n\n    function localeWeekdaysParse (weekdayName) {\n        var i, mom, regex;\n\n        this._weekdaysParse = this._weekdaysParse || [];\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            if (!this._weekdaysParse[i]) {\n                mom = local__createLocal([2000, 1]).day(i);\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n        return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, function () {\n        return this.hours() % 12 || 12;\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour he wants. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var momentPrototype__proto = Moment.prototype;\n\n    momentPrototype__proto.add          = add_subtract__add;\n    momentPrototype__proto.calendar     = moment_calendar__calendar;\n    momentPrototype__proto.clone        = clone;\n    momentPrototype__proto.diff         = diff;\n    momentPrototype__proto.endOf        = endOf;\n    momentPrototype__proto.format       = format;\n    momentPrototype__proto.from         = from;\n    momentPrototype__proto.fromNow      = fromNow;\n    momentPrototype__proto.to           = to;\n    momentPrototype__proto.toNow        = toNow;\n    momentPrototype__proto.get          = getSet;\n    momentPrototype__proto.invalidAt    = invalidAt;\n    momentPrototype__proto.isAfter      = isAfter;\n    momentPrototype__proto.isBefore     = isBefore;\n    momentPrototype__proto.isBetween    = isBetween;\n    momentPrototype__proto.isSame       = isSame;\n    momentPrototype__proto.isValid      = moment_valid__isValid;\n    momentPrototype__proto.lang         = lang;\n    momentPrototype__proto.locale       = locale;\n    momentPrototype__proto.localeData   = localeData;\n    momentPrototype__proto.max          = prototypeMax;\n    momentPrototype__proto.min          = prototypeMin;\n    momentPrototype__proto.parsingFlags = parsingFlags;\n    momentPrototype__proto.set          = getSet;\n    momentPrototype__proto.startOf      = startOf;\n    momentPrototype__proto.subtract     = add_subtract__subtract;\n    momentPrototype__proto.toArray      = toArray;\n    momentPrototype__proto.toObject     = toObject;\n    momentPrototype__proto.toDate       = toDate;\n    momentPrototype__proto.toISOString  = moment_format__toISOString;\n    momentPrototype__proto.toJSON       = moment_format__toISOString;\n    momentPrototype__proto.toString     = toString;\n    momentPrototype__proto.unix         = unix;\n    momentPrototype__proto.valueOf      = to_type__valueOf;\n\n    // Year\n    momentPrototype__proto.year       = getSetYear;\n    momentPrototype__proto.isLeapYear = getIsLeapYear;\n\n    // Week Year\n    momentPrototype__proto.weekYear    = getSetWeekYear;\n    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;\n\n    // Quarter\n    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;\n\n    // Month\n    momentPrototype__proto.month       = getSetMonth;\n    momentPrototype__proto.daysInMonth = getDaysInMonth;\n\n    // Week\n    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;\n    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;\n    momentPrototype__proto.weeksInYear    = getWeeksInYear;\n    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;\n\n    // Day\n    momentPrototype__proto.date       = getSetDayOfMonth;\n    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;\n    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;\n    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;\n    momentPrototype__proto.dayOfYear  = getSetDayOfYear;\n\n    // Hour\n    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;\n\n    // Minute\n    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;\n\n    // Second\n    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;\n\n    // Millisecond\n    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;\n\n    // Offset\n    momentPrototype__proto.utcOffset            = getSetOffset;\n    momentPrototype__proto.utc                  = setOffsetToUTC;\n    momentPrototype__proto.local                = setOffsetToLocal;\n    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;\n    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    momentPrototype__proto.isDST                = isDaylightSavingTime;\n    momentPrototype__proto.isDSTShifted         = isDaylightSavingTimeShifted;\n    momentPrototype__proto.isLocal              = isLocal;\n    momentPrototype__proto.isUtcOffset          = isUtcOffset;\n    momentPrototype__proto.isUtc                = isUtc;\n    momentPrototype__proto.isUTC                = isUtc;\n\n    // Timezone\n    momentPrototype__proto.zoneAbbr = getZoneAbbr;\n    momentPrototype__proto.zoneName = getZoneName;\n\n    // Deprecations\n    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779', getSetZone);\n\n    var momentPrototype = momentPrototype__proto;\n\n    function moment__createUnix (input) {\n        return local__createLocal(input * 1000);\n    }\n\n    function moment__createInZone () {\n        return local__createLocal.apply(null, arguments).parseZone();\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function locale_calendar__calendar (key, mom, now) {\n        var output = this._calendar[key];\n        return typeof output === 'function' ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relative__relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (typeof output === 'function') ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);\n    }\n\n    function locale_set__set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (typeof prop === 'function') {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _ordinalParseLenient.\n        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\\d{1,2}/).source);\n    }\n\n    var prototype__proto = Locale.prototype;\n\n    prototype__proto._calendar       = defaultCalendar;\n    prototype__proto.calendar        = locale_calendar__calendar;\n    prototype__proto._longDateFormat = defaultLongDateFormat;\n    prototype__proto.longDateFormat  = longDateFormat;\n    prototype__proto._invalidDate    = defaultInvalidDate;\n    prototype__proto.invalidDate     = invalidDate;\n    prototype__proto._ordinal        = defaultOrdinal;\n    prototype__proto.ordinal         = ordinal;\n    prototype__proto._ordinalParse   = defaultOrdinalParse;\n    prototype__proto.preparse        = preParsePostFormat;\n    prototype__proto.postformat      = preParsePostFormat;\n    prototype__proto._relativeTime   = defaultRelativeTime;\n    prototype__proto.relativeTime    = relative__relativeTime;\n    prototype__proto.pastFuture      = pastFuture;\n    prototype__proto.set             = locale_set__set;\n\n    // Month\n    prototype__proto.months       =        localeMonths;\n    prototype__proto._months      = defaultLocaleMonths;\n    prototype__proto.monthsShort  =        localeMonthsShort;\n    prototype__proto._monthsShort = defaultLocaleMonthsShort;\n    prototype__proto.monthsParse  =        localeMonthsParse;\n\n    // Week\n    prototype__proto.week = localeWeek;\n    prototype__proto._week = defaultLocaleWeek;\n    prototype__proto.firstDayOfYear = localeFirstDayOfYear;\n    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;\n\n    // Day of Week\n    prototype__proto.weekdays       =        localeWeekdays;\n    prototype__proto._weekdays      = defaultLocaleWeekdays;\n    prototype__proto.weekdaysMin    =        localeWeekdaysMin;\n    prototype__proto._weekdaysMin   = defaultLocaleWeekdaysMin;\n    prototype__proto.weekdaysShort  =        localeWeekdaysShort;\n    prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;\n    prototype__proto.weekdaysParse  =        localeWeekdaysParse;\n\n    // Hours\n    prototype__proto.isPM = localeIsPM;\n    prototype__proto._meridiemParse = defaultLocaleMeridiemParse;\n    prototype__proto.meridiem = localeMeridiem;\n\n    function lists__get (format, index, field, setter) {\n        var locale = locale_locales__getLocale();\n        var utc = create_utc__createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function list (format, index, field, count, setter) {\n        if (typeof format === 'number') {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return lists__get(format, index, field, setter);\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < count; i++) {\n            out[i] = lists__get(format, i, field, setter);\n        }\n        return out;\n    }\n\n    function lists__listMonths (format, index) {\n        return list(format, index, 'months', 12, 'month');\n    }\n\n    function lists__listMonthsShort (format, index) {\n        return list(format, index, 'monthsShort', 12, 'month');\n    }\n\n    function lists__listWeekdays (format, index) {\n        return list(format, index, 'weekdays', 7, 'day');\n    }\n\n    function lists__listWeekdaysShort (format, index) {\n        return list(format, index, 'weekdaysShort', 7, 'day');\n    }\n\n    function lists__listWeekdaysMin (format, index) {\n        return list(format, index, 'weekdaysMin', 7, 'day');\n    }\n\n    locale_locales__getSetGlobalLocale('en', {\n        ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);\n    utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);\n\n    var mathAbs = Math.abs;\n\n    function duration_abs__abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function duration_add_subtract__addSubtract (duration, input, value, direction) {\n        var other = create__createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function duration_add_subtract__add (input, value) {\n        return duration_add_subtract__addSubtract(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function duration_add_subtract__subtract (input, value) {\n        return duration_add_subtract__addSubtract(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function duration_as__valueOf () {\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function duration_get__get (units) {\n        units = normalizeUnits(units);\n        return this[units + 's']();\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this._data[name];\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        s: 45,  // seconds to minute\n        m: 45,  // minutes to hour\n        h: 22,  // hours to day\n        d: 26,  // days to month\n        M: 11   // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) {\n        var duration = create__createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds < thresholds.s && ['s', seconds]  ||\n                minutes === 1          && ['m']           ||\n                minutes < thresholds.m && ['mm', minutes] ||\n                hours   === 1          && ['h']           ||\n                hours   < thresholds.h && ['hh', hours]   ||\n                days    === 1          && ['d']           ||\n                days    < thresholds.d && ['dd', days]    ||\n                months  === 1          && ['M']           ||\n                months  < thresholds.M && ['MM', months]  ||\n                years   === 1          && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        var locale = this.localeData();\n        var output = duration_humanize__relativeTime(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var iso_string__abs = Math.abs;\n\n    function iso_string__toISOString() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        var seconds = iso_string__abs(this._milliseconds) / 1000;\n        var days         = iso_string__abs(this._days);\n        var months       = iso_string__abs(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds;\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        return (total < 0 ? '-' : '') +\n            'P' +\n            (Y ? Y + 'Y' : '') +\n            (M ? M + 'M' : '') +\n            (D ? D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? h + 'H' : '') +\n            (m ? m + 'M' : '') +\n            (s ? s + 'S' : '');\n    }\n\n    var duration_prototype__proto = Duration.prototype;\n\n    duration_prototype__proto.abs            = duration_abs__abs;\n    duration_prototype__proto.add            = duration_add_subtract__add;\n    duration_prototype__proto.subtract       = duration_add_subtract__subtract;\n    duration_prototype__proto.as             = as;\n    duration_prototype__proto.asMilliseconds = asMilliseconds;\n    duration_prototype__proto.asSeconds      = asSeconds;\n    duration_prototype__proto.asMinutes      = asMinutes;\n    duration_prototype__proto.asHours        = asHours;\n    duration_prototype__proto.asDays         = asDays;\n    duration_prototype__proto.asWeeks        = asWeeks;\n    duration_prototype__proto.asMonths       = asMonths;\n    duration_prototype__proto.asYears        = asYears;\n    duration_prototype__proto.valueOf        = duration_as__valueOf;\n    duration_prototype__proto._bubble        = bubble;\n    duration_prototype__proto.get            = duration_get__get;\n    duration_prototype__proto.milliseconds   = milliseconds;\n    duration_prototype__proto.seconds        = seconds;\n    duration_prototype__proto.minutes        = minutes;\n    duration_prototype__proto.hours          = hours;\n    duration_prototype__proto.days           = days;\n    duration_prototype__proto.weeks          = weeks;\n    duration_prototype__proto.months         = months;\n    duration_prototype__proto.years          = years;\n    duration_prototype__proto.humanize       = humanize;\n    duration_prototype__proto.toISOString    = iso_string__toISOString;\n    duration_prototype__proto.toString       = iso_string__toISOString;\n    duration_prototype__proto.toJSON         = iso_string__toISOString;\n    duration_prototype__proto.locale         = locale;\n    duration_prototype__proto.localeData     = localeData;\n\n    // Deprecations\n    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);\n    duration_prototype__proto.lang = lang;\n\n    // Side effect imports\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    utils_hooks__hooks.version = '2.10.6';\n\n    setHookCallback(local__createLocal);\n\n    utils_hooks__hooks.fn                    = momentPrototype;\n    utils_hooks__hooks.min                   = min;\n    utils_hooks__hooks.max                   = max;\n    utils_hooks__hooks.utc                   = create_utc__createUTC;\n    utils_hooks__hooks.unix                  = moment__createUnix;\n    utils_hooks__hooks.months                = lists__listMonths;\n    utils_hooks__hooks.isDate                = isDate;\n    utils_hooks__hooks.locale                = locale_locales__getSetGlobalLocale;\n    utils_hooks__hooks.invalid               = valid__createInvalid;\n    utils_hooks__hooks.duration              = create__createDuration;\n    utils_hooks__hooks.isMoment              = isMoment;\n    utils_hooks__hooks.weekdays              = lists__listWeekdays;\n    utils_hooks__hooks.parseZone             = moment__createInZone;\n    utils_hooks__hooks.localeData            = locale_locales__getLocale;\n    utils_hooks__hooks.isDuration            = isDuration;\n    utils_hooks__hooks.monthsShort           = lists__listMonthsShort;\n    utils_hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;\n    utils_hooks__hooks.defineLocale          = defineLocale;\n    utils_hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;\n    utils_hooks__hooks.normalizeUnits        = normalizeUnits;\n    utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;\n\n    var _moment = utils_hooks__hooks;\n\n    return _moment;\n\n}));"]}